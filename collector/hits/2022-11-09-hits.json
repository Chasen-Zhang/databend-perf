{"metadata":{"table":"hits","tag":"v0.8.104-nightly","size":"Large"},"schema":[{"name":"Q1","sql":"SELECT COUNT(*) FROM hits;","min":0.088,"max":0.158,"median":0.121,"std_dev":0.022852789764052875,"read_row":1,"read_byte":1,"time":[0.088,0.123,0.092,0.125,0.147,0.098,0.119,0.158,0.145,0.11],"error":[],"mean":0.11832033129619542},{"name":"Q2","sql":"SELECT COUNT(*) FROM hits WHERE AdvEngineID \u003c\u003e 0;","min":1.32,"max":1.557,"median":1.413,"std_dev":0.07289828530219344,"read_row":99997397,"read_byte":199994794,"time":[1.366,1.415,1.32,1.365,1.494,1.476,1.324,1.557,1.444,1.411],"error":[],"mean":1.4153444561910462},{"name":"Q3","sql":"SELECT SUM(AdvEngineID), COUNT(*), AVG(ResolutionWidth) FROM hits;","min":1.235,"max":1.716,"median":1.4515,"std_dev":0.1313750356802996,"read_row":99997397,"read_byte":399989588,"time":[1.52,1.613,1.55,1.342,1.473,1.381,1.235,1.43,1.43,1.716],"error":[],"mean":1.463125202269512},{"name":"Q4","sql":"SELECT AVG(UserID) FROM hits;","min":1.268,"max":1.67,"median":1.461,"std_dev":0.10343543880121549,"read_row":99997397,"read_byte":799979176,"time":[1.605,1.67,1.514,1.454,1.547,1.452,1.268,1.427,1.465,1.457],"error":[],"mean":1.4822378949982549},{"name":"Q5","sql":"SELECT COUNT(DISTINCT UserID) FROM hits;","min":5.096,"max":5.327,"median":5.2565,"std_dev":0.07363857684665007,"read_row":99997397,"read_byte":799979176,"time":[5.118,5.096,5.188,5.327,5.295,5.248,5.292,5.213,5.265,5.282],"error":[],"mean":5.231878488756358},{"name":"Q6","sql":"SELECT COUNT(DISTINCT SearchPhrase) FROM hits;","min":3.169,"max":4.454,"median":3.4095,"std_dev":0.3355828511709142,"read_row":99997397,"read_byte":1539621262,"time":[3.405,3.326,3.532,3.478,3.453,3.313,3.351,3.169,3.414,4.454],"error":[],"mean":3.475296031621818},{"name":"Q7","sql":"SELECT MIN(EventDate), MAX(EventDate) FROM hits;","min":1.218,"max":1.605,"median":1.4,"std_dev":0.09782535458663055,"read_row":99997397,"read_byte":399989588,"time":[1.332,1.397,1.447,1.381,1.341,1.605,1.403,1.218,1.49,1.446],"error":[],"mean":1.4025960696743305},{"name":"Q8","sql":"SELECT AdvEngineID, COUNT(*) FROM hits WHERE AdvEngineID \u003c\u003e 0 GROUP BY AdvEngineID ORDER BY COUNT(*) DESC;","min":1.995,"max":2.247,"median":2.1445,"std_dev":0.0651494435893354,"read_row":99997397,"read_byte":199994794,"time":[2.189,2.147,2.195,2.142,2.098,2.093,2.247,1.995,2.16,2.129],"error":[],"mean":2.1384947550640634},{"name":"Q9","sql":"SELECT RegionID, COUNT(DISTINCT UserID) AS u FROM hits GROUP BY RegionID ORDER BY u DESC LIMIT 10;","min":2.532,"max":2.95,"median":2.835,"std_dev":0.14298105935169642,"read_row":99997397,"read_byte":1199968764,"time":[2.95,2.664,2.885,2.865,2.805,2.532],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1068 Message:Cannot send flight data to endpoint, because sender is closed. Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":2.7797380669322282},{"name":"Q10","sql":"SELECT RegionID, SUM(AdvEngineID), COUNT(*) AS c, AVG(ResolutionWidth), COUNT(DISTINCT UserID) FROM hits GROUP BY RegionID ORDER BY c DESC LIMIT 10;","min":2.759,"max":3.091,"median":2.919,"std_dev":0.13013678701018153,"read_row":99997397,"read_byte":1599958352,"time":[3.012,2.826,2.775,3.012,2.759,3.091],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":2.90959559757355},{"name":"Q11","sql":"SELECT MobilePhoneModel, COUNT(DISTINCT UserID) AS u FROM hits WHERE MobilePhoneModel \u003c\u003e '' GROUP BY MobilePhoneModel ORDER BY u DESC LIMIT 10;","min":1.974,"max":2.556,"median":2.2249999999999996,"std_dev":0.15738071673492918,"read_row":99997397,"read_byte":1623244968,"time":[2.161,2.556,2.361,2.407,2.112,2.223,2.133,1.974,2.227,2.235],"error":[],"mean":2.2334471583627957},{"name":"Q12","sql":"SELECT MobilePhone, MobilePhoneModel, COUNT(DISTINCT UserID) AS u FROM hits WHERE MobilePhoneModel \u003c\u003e '' GROUP BY MobilePhone, MobilePhoneModel ORDER BY u DESC LIMIT 10;","min":2.188,"max":2.58,"median":2.293,"std_dev":0.10461763713638347,"read_row":99997397,"read_byte":1823239762,"time":[2.313,2.358,2.227,2.58,2.253,2.319,2.188,2.345,2.229,2.273],"error":[],"mean":2.306227235109809},{"name":"Q13","sql":"SELECT SearchPhrase, COUNT(*) AS c FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY SearchPhrase ORDER BY c DESC LIMIT 10;","min":3.677,"max":3.937,"median":3.729,"std_dev":0.09118695753499935,"read_row":99997397,"read_byte":1539621262,"time":[3.937,3.881,3.704,3.729,3.713,3.761,3.677],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":3.770626156957766},{"name":"Q14","sql":"SELECT SearchPhrase, COUNT(DISTINCT UserID) AS u FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY SearchPhrase ORDER BY u DESC LIMIT 10;","min":3.998,"max":4.838,"median":4.2204999999999995,"std_dev":0.24998387447993523,"read_row":99997397,"read_byte":2339600438,"time":[4.349,3.998,4.172,4.077,4.495,4.21,4.838,4.231],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":4.289233963790524},{"name":"Q15","sql":"SELECT SearchEngineID, SearchPhrase, COUNT(*) AS c FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY SearchEngineID, SearchPhrase ORDER BY c DESC LIMIT 10;","min":3.907,"max":4.361,"median":3.9755000000000003,"std_dev":0.13081590117413086,"read_row":99997397,"read_byte":1739616056,"time":[3.959,4.001,3.972,3.949,4.004,3.979,4.361,4.153,3.907,3.915],"error":[],"mean":4.017946623025339},{"name":"Q16","sql":"SELECT UserID, COUNT(*) FROM hits GROUP BY UserID ORDER BY COUNT(*) DESC LIMIT 10;","min":6.36,"max":7.433,"median":6.730499999999999,"std_dev":0.32307775283203877,"read_row":99997397,"read_byte":799979176,"time":[6.659,7.433,6.36,6.603,6.42,6.994,6.802,6.886],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":6.762067207002455},{"name":"Q17","sql":"SELECT UserID, SearchPhrase, COUNT(*) FROM hits GROUP BY UserID, SearchPhrase ORDER BY COUNT(*) DESC LIMIT 10;","min":20.599,"max":21.819,"median":21.227,"std_dev":0.3669598827604394,"read_row":99997397,"read_byte":2339600438,"time":[21.227,20.81,20.887,21.001,21.389,21.285,21.573,20.599,21.819],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":21.173491987506452},{"name":"Q18","sql":"SELECT UserID, SearchPhrase, COUNT(*) FROM hits GROUP BY UserID, SearchPhrase LIMIT 10;","min":4.631,"max":6.002,"median":4.81,"std_dev":0.38201486882057356,"read_row":99997397,"read_byte":2339600438,"time":[6.002,4.794,5.059,4.678,4.72,5.001,4.762,4.826,4.631,5.139],"error":[],"mean":4.9477162819027445},{"name":"Q19","sql":"SELECT UserID, extract(minute FROM EventTime) AS m, SearchPhrase, COUNT(*) FROM hits GROUP BY UserID, m, SearchPhrase ORDER BY COUNT(*) DESC LIMIT 10;","min":61.584,"max":62.939,"median":62.38849999999999,"std_dev":0.5034791852698577,"read_row":99997397,"read_byte":3139579614,"time":[62.837,62.939,62.698,61.945,61.855,62.794,61.652,62.102,62.675,61.584],"error":[],"mean":62.30606414343476},{"name":"Q20","sql":"SELECT UserID FROM hits WHERE UserID = 435090932899640449;","min":1.194,"max":1.523,"median":1.2865,"std_dev":0.08780711816248157,"read_row":89403,"read_byte":715224,"time":[1.209,1.263,1.328,1.35,1.194,1.271,1.348,1.291,1.523,1.282],"error":[],"mean":1.3030813932672656},{"name":"Q21","sql":"SELECT COUNT(*) FROM hits WHERE URL LIKE '%google%';","min":2.593,"max":3.626,"median":2.689,"std_dev":0.3470210944596884,"read_row":99997397,"read_byte":9838815530,"time":[2.686,2.74,2.658,2.692,2.685,2.684,3.626,3.061,3.441,2.593],"error":[],"mean":2.8674719109961395},{"name":"Q22","sql":"SELECT SearchPhrase, MIN(URL), COUNT(*) AS c FROM hits WHERE URL LIKE '%google%' AND SearchPhrase \u003c\u003e '' GROUP BY SearchPhrase ORDER BY c DESC LIMIT 10;","min":3.399,"max":4.192,"median":3.6145,"std_dev":0.2039133149159221,"read_row":99997397,"read_byte":11378436792,"time":[3.593,3.636,3.537,3.399,3.546,3.758,3.742,4.192,3.537,3.664],"error":[],"mean":3.6550038647682226},{"name":"Q23","sql":"SELECT SearchPhrase, MIN(URL), MIN(Title), COUNT(*) AS c, COUNT(DISTINCT UserID) FROM hits WHERE Title LIKE '%Google%' AND URL NOT LIKE '%.google.%' AND SearchPhrase \u003c\u003e '' GROUP BY SearchPhrase ORDER BY c DESC LIMIT 10;","min":5.382,"max":6.163,"median":5.8735,"std_dev":0.24067064631982035,"read_row":99997397,"read_byte":22396098351,"time":[5.723,5.968,5.983,6.163,5.779,5.638,6.143,5.382,6.105,5.728],"error":[],"mean":5.856193771137443},{"name":"Q24","sql":"SELECT * FROM hits WHERE URL LIKE '%google%' ORDER BY EventTime LIMIT 10;","min":10.146,"max":11.593,"median":10.628,"std_dev":0.44092239680016243,"read_row":99997397,"read_byte":79840595866,"time":[10.704,11.593,10.257,11.058,10.151,10.146,10.921,10.649,10.607,10.256],"error":[],"mean":10.625232397968407},{"name":"Q25","sql":"SELECT SearchPhrase FROM hits WHERE SearchPhrase \u003c\u003e '' ORDER BY EventTime LIMIT 10;","min":3.21,"max":4.995,"median":3.9815000000000005,"std_dev":0.46865724148891585,"read_row":99997397,"read_byte":2339600438,"time":[3.823,4.231,4.092,4.995,3.438,4.164,4.073,3.611,3.21,3.89],"error":[],"mean":3.9256642830718165},{"name":"Q26","sql":"SELECT SearchPhrase FROM hits WHERE SearchPhrase \u003c\u003e '' ORDER BY SearchPhrase LIMIT 10;","min":3.286,"max":4.476,"median":3.535,"std_dev":0.3166667807017339,"read_row":99997397,"read_byte":1539621262,"time":[3.495,3.637,3.63,3.361,4.476,3.782,3.575,3.461,3.472,3.286],"error":[],"mean":3.604875034566833},{"name":"Q27","sql":"SELECT SearchPhrase FROM hits WHERE SearchPhrase \u003c\u003e '' ORDER BY EventTime, SearchPhrase LIMIT 10;","min":3.519,"max":5.274,"median":3.733,"std_dev":0.5264871223496355,"read_row":99997397,"read_byte":2339600438,"time":[3.761,5.274,3.705,3.587,4.308,3.624,4.289,3.519,3.683,4.431],"error":[],"mean":3.986489011683434},{"name":"Q28","sql":"SELECT CounterID, AVG(length(URL)) AS l, COUNT(*) AS c FROM hits WHERE URL \u003c\u003e '' GROUP BY CounterID HAVING COUNT(*) \u003e 100000 ORDER BY l DESC LIMIT 25;","min":3.558,"max":4.716,"median":3.6665,"std_dev":0.32303747460627547,"read_row":99997397,"read_byte":10238805118,"time":[3.704,3.717,3.558,3.65,3.691,3.574,3.645,4.716,3.683,3.645],"error":[],"mean":3.7461326544130618},{"name":"Q30","sql":"SELECT SUM(ResolutionWidth), SUM(ResolutionWidth + 1), SUM(ResolutionWidth + 2), SUM(ResolutionWidth + 3), SUM(ResolutionWidth + 4), SUM(ResolutionWidth + 5), SUM(ResolutionWidth + 6), SUM(ResolutionWidth + 7), SUM(ResolutionWidth + 8), SUM(ResolutionWidth + 9), SUM(ResolutionWidth + 10), SUM(ResolutionWidth + 11), SUM(ResolutionWidth + 12), SUM(ResolutionWidth + 13), SUM(ResolutionWidth + 14), SUM(ResolutionWidth + 15), SUM(ResolutionWidth + 16), SUM(ResolutionWidth + 17), SUM(ResolutionWidth + 18), SUM(ResolutionWidth + 19), SUM(ResolutionWidth + 20), SUM(ResolutionWidth + 21), SUM(ResolutionWidth + 22), SUM(ResolutionWidth + 23), SUM(ResolutionWidth + 24), SUM(ResolutionWidth + 25), SUM(ResolutionWidth + 26), SUM(ResolutionWidth + 27), SUM(ResolutionWidth + 28), SUM(ResolutionWidth + 29), SUM(ResolutionWidth + 30), SUM(ResolutionWidth + 31), SUM(ResolutionWidth + 32), SUM(ResolutionWidth + 33), SUM(ResolutionWidth + 34), SUM(ResolutionWidth + 35), SUM(ResolutionWidth + 36), SUM(ResolutionWidth + 37), SUM(ResolutionWidth + 38), SUM(ResolutionWidth + 39), SUM(ResolutionWidth + 40), SUM(ResolutionWidth + 41), SUM(ResolutionWidth + 42), SUM(ResolutionWidth + 43), SUM(ResolutionWidth + 44), SUM(ResolutionWidth + 45), SUM(ResolutionWidth + 46), SUM(ResolutionWidth + 47), SUM(ResolutionWidth + 48), SUM(ResolutionWidth + 49), SUM(ResolutionWidth + 50), SUM(ResolutionWidth + 51), SUM(ResolutionWidth + 52), SUM(ResolutionWidth + 53), SUM(ResolutionWidth + 54), SUM(ResolutionWidth + 55), SUM(ResolutionWidth + 56), SUM(ResolutionWidth + 57), SUM(ResolutionWidth + 58), SUM(ResolutionWidth + 59), SUM(ResolutionWidth + 60), SUM(ResolutionWidth + 61), SUM(ResolutionWidth + 62), SUM(ResolutionWidth + 63), SUM(ResolutionWidth + 64), SUM(ResolutionWidth + 65), SUM(ResolutionWidth + 66), SUM(ResolutionWidth + 67), SUM(ResolutionWidth + 68), SUM(ResolutionWidth + 69), SUM(ResolutionWidth + 70), SUM(ResolutionWidth + 71), SUM(ResolutionWidth + 72), SUM(ResolutionWidth + 73), SUM(ResolutionWidth + 74), SUM(ResolutionWidth + 75), SUM(ResolutionWidth + 76), SUM(ResolutionWidth + 77), SUM(ResolutionWidth + 78), SUM(ResolutionWidth + 79), SUM(ResolutionWidth + 80), SUM(ResolutionWidth + 81), SUM(ResolutionWidth + 82), SUM(ResolutionWidth + 83), SUM(ResolutionWidth + 84), SUM(ResolutionWidth + 85), SUM(ResolutionWidth + 86), SUM(ResolutionWidth + 87), SUM(ResolutionWidth + 88), SUM(ResolutionWidth + 89) FROM hits;","min":2.001,"max":2.338,"median":2.1715,"std_dev":0.09946034385623248,"read_row":99997397,"read_byte":199994794,"time":[2.166,2.232,2.323,2.119,2.001,2.338,2.177,2.091,2.219,2.106],"error":[],"mean":2.1749298486331496},{"name":"Q31","sql":"SELECT SearchEngineID, ClientIP, COUNT(*) AS c, SUM(IsRefresh), AVG(ResolutionWidth) FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY SearchEngineID, ClientIP ORDER BY c DESC LIMIT 10;","min":4.23,"max":5.43,"median":4.468999999999999,"std_dev":0.30907353493950257,"read_row":99997397,"read_byte":2539595232,"time":[4.476,4.462,4.443,4.524,4.389,4.384,5.43,4.534,4.23,4.533],"error":[],"mean":4.530918090780236},{"name":"Q32","sql":"SELECT WatchID, ClientIP, COUNT(*) AS c, SUM(IsRefresh), AVG(ResolutionWidth) FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY WatchID, ClientIP ORDER BY c DESC LIMIT 10;","min":7.338,"max":8.227,"median":7.538,"std_dev":0.2962747616233958,"read_row":99997397,"read_byte":3139579614,"time":[7.935,7.49,8.227,7.359,7.338,7.586,7.609,7.357],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":7.607001324437536},{"name":"Q33","sql":"SELECT WatchID, ClientIP, COUNT(*) AS c, SUM(IsRefresh), AVG(ResolutionWidth) FROM hits GROUP BY WatchID, ClientIP ORDER BY c DESC LIMIT 10;","min":39.968,"max":44.18,"median":40.807500000000005,"std_dev":1.2657403898015573,"read_row":99997397,"read_byte":1599958352,"time":[41.008,40.479,41.181,44.18,40.127,39.968,40.607,41.805],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":41.15047955570056},{"name":"Q34","sql":"SELECT URL, COUNT(*) AS c FROM hits GROUP BY URL ORDER BY c DESC LIMIT 10;","min":12.736,"max":14.365,"median":13.285499999999999,"std_dev":0.5092587750839448,"read_row":99997397,"read_byte":9838815530,"time":[13.809,12.988,14.365,13.517,12.736,13.009,13.682,13.054],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":13.385437683557836},{"name":"Q35","sql":"SELECT 1, URL, COUNT(*) AS c FROM hits GROUP BY 1, URL ORDER BY c DESC LIMIT 10;","min":37.405,"max":39.399,"median":38.501,"std_dev":0.5425464194739016,"read_row":99997397,"read_byte":9838815530,"time":[38.501,38.167,38.77,37.405,39.063,38.808,38.368,39.399,38.305],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":38.52794075754139},{"name":"Q36","sql":"SELECT ClientIP, ClientIP - 1, ClientIP - 2, ClientIP - 3, COUNT(*) AS c FROM hits GROUP BY ClientIP, ClientIP - 1, ClientIP - 2, ClientIP - 3 ORDER BY c DESC LIMIT 10;","min":6.369,"max":7.08,"median":6.499,"std_dev":0.21656413528411864,"read_row":99997397,"read_byte":399989588,"time":[6.369,6.499,7.08,6.849,6.533,6.661,6.436,6.469,6.482],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":6.594087775939674},{"name":"Q37","sql":"SELECT URL, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND DontCountHits = 0 AND IsRefresh = 0 AND URL \u003c\u003e '' GROUP BY URL ORDER BY PageViews DESC LIMIT 10;","min":2.059,"max":2.48,"median":2.3,"std_dev":0.12586938484324262,"read_row":12458742,"read_byte":1226485840,"time":[2.312,2.059,2.48,2.229,2.3,2.342,2.157],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":2.264920544031765},{"name":"Q38","sql":"SELECT Title, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND DontCountHits = 0 AND IsRefresh = 0 AND Title \u003c\u003e '' GROUP BY Title ORDER BY PageViews DESC LIMIT 10;","min":1.975,"max":2.442,"median":2.209,"std_dev":0.12900468983723032,"read_row":12458742,"read_byte":1610694086,"time":[2.23,2.188,2.262,2.255,2.29,1.975,2.099,2.442,2.024,2.182],"error":[],"mean":2.1908958173222537},{"name":"Q39","sql":"SELECT URL, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND IsRefresh = 0 AND IsLink \u003c\u003e 0 AND IsDownload = 0 GROUP BY URL ORDER BY PageViews DESC LIMIT 10 OFFSET 1000;","min":1.973,"max":2.475,"median":2.2249999999999996,"std_dev":0.13395779185997359,"read_row":12458742,"read_byte":1251403324,"time":[2.231,2.107,2.098,2.219,2.285,2.244,1.973,2.18,2.475,2.359],"error":[],"mean":2.213055304845067},{"name":"Q40","sql":"SELECT TraficSourceID, SearchEngineID, AdvEngineID, CASE WHEN (SearchEngineID = 0 AND AdvEngineID = 0) THEN Referer ELSE '' END AS Src, URL AS Dst, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND IsRefresh = 0 GROUP BY TraficSourceID, SearchEngineID, AdvEngineID, Src, Dst ORDER BY PageViews DESC LIMIT 10 OFFSET 1000;","min":2.848,"max":3.222,"median":2.998,"std_dev":0.11155877094608026,"read_row":12458742,"read_byte":2263841575,"time":[3.109,3.094,3.222,2.987,2.848,2.994,2.903,3.002],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":3.0178240264000715},{"name":"Q41","sql":"SELECT URLHash, EventDate, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND IsRefresh = 0 AND TraficSourceID IN (-1, 6) AND RefererHash = 3594120000172545465 GROUP BY URLHash, EventDate ORDER BY PageViews DESC LIMIT 10 OFFSET 100;","min":1.835,"max":2.43,"median":2.177,"std_dev":0.16094412073760261,"read_row":12458742,"read_byte":348844776,"time":[2.186,2.086,2.258,2.232,2.43,2.168,1.991,2.141,2.336,1.835],"error":[],"mean":2.160152925142705},{"name":"Q42","sql":"SELECT WindowClientWidth, WindowClientHeight, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND IsRefresh = 0 AND DontCountHits = 0 AND URLHash = 2868770270353813622 GROUP BY WindowClientWidth, WindowClientHeight ORDER BY PageViews DESC LIMIT 10 OFFSET 10000;","min":1.863,"max":2.739,"median":2.116,"std_dev":0.27319116017909506,"read_row":12458742,"read_byte":299009808,"time":[2.281,2.119,2.473,2.102,1.863,2.113,2.074,2.669,2.044,2.739],"error":[],"mean":2.2317501218344944},{"name":"Q43","sql":"SELECT DATE_TRUNC('minute', EventTime) AS M, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-14' AND EventDate \u003c= '2013-07-15' AND IsRefresh = 0 AND DontCountHits = 0 GROUP BY DATE_TRUNC('minute', EventTime) ORDER BY DATE_TRUNC('minute', EventTime) LIMIT 10 OFFSET 1000;","min":1.978,"max":2.36,"median":2.2030000000000003,"std_dev":0.12384785020338461,"read_row":12458742,"read_byte":249174840,"time":[1.978,2.36,2.035,2.287,2.178,2.272,2.002,2.228,2.136,2.243],"error":[],"mean":2.1683255399612738}]}