{"metadata":{"table":"hits","tag":"v0.8.86-nightly","size":"Large"},"schema":[{"name":"Q1","sql":"SELECT COUNT(*) FROM hits;","min":0.096,"max":0.232,"median":0.1325,"std_dev":0.03566006169372118,"read_row":1,"read_byte":1,"time":[0.123,0.152,0.123,0.096,0.104,0.151,0.134,0.148,0.131,0.232],"error":[],"mean":0.13552084860938599},{"name":"Q2","sql":"SELECT COUNT(*) FROM hits WHERE AdvEngineID \u003c\u003e 0;","min":1.309,"max":1.577,"median":1.4615,"std_dev":0.09580313147282817,"read_row":97451446,"read_byte":974514460,"time":[1.561,1.353,1.338,1.496,1.577,1.427,1.42,1.577,1.496,1.309],"error":[],"mean":1.452223750183121},{"name":"Q3","sql":"SELECT SUM(AdvEngineID), COUNT(*), AVG(ResolutionWidth) FROM hits;","min":0.953,"max":1.318,"median":1.255,"std_dev":0.1082370084582903,"read_row":99997397,"read_byte":399989588,"time":[1.318,1.128,1.111,1.258,1.317,1.262,1.252,1.26,0.953,1.156],"error":[],"mean":1.196269402816214},{"name":"Q4","sql":"SELECT AVG(UserID) FROM hits;","min":1.105,"max":1.364,"median":1.2214999999999998,"std_dev":0.09550099475921706,"read_row":99997397,"read_byte":799979176,"time":[1.287,1.105,1.343,1.156,1.301,1.15,1.114,1.364,1.148,1.298],"error":[],"mean":1.222887751281459},{"name":"Q5","sql":"SELECT COUNT(DISTINCT UserID) FROM hits;","min":4.971,"max":5.578,"median":5.1635,"std_dev":0.17334823333394558,"read_row":99997397,"read_byte":799979176,"time":[4.995,5.171,5.344,5.02,5.578,5.237,5.213,5.098,5.156,4.971],"error":[],"mean":5.175455167667602},{"name":"Q6","sql":"SELECT COUNT(DISTINCT SearchPhrase) FROM hits;","min":3.336,"max":3.606,"median":3.551,"std_dev":0.09107052212434062,"read_row":99997397,"read_byte":1539621334,"time":[3.555,3.547,3.556,3.384,3.606,3.428,3.603,3.336,3.482,3.587],"error":[],"mean":3.5072036814405183},{"name":"Q7","sql":"SELECT MIN(EventDate), MAX(EventDate) FROM hits;","min":0.992,"max":1.39,"median":1.1749999999999998,"std_dev":0.10017689354337155,"read_row":99997397,"read_byte":399989588,"time":[1.184,1.147,1.164,1.15,1.285,0.992,1.166,1.202,1.277,1.39],"error":[],"mean":1.1914585705508467},{"name":"Q8","sql":"SELECT AdvEngineID, COUNT(*) FROM hits WHERE AdvEngineID \u003c\u003e 0 GROUP BY AdvEngineID ORDER BY COUNT(*) DESC;","min":1.642,"max":2.253,"median":2.0465,"std_dev":0.15590137908306012,"read_row":97451446,"read_byte":194902892,"time":[1.958,2.056,2.081,1.642,2.253,2.134,1.936,2.037,2.12,1.937],"error":[],"mean":2.0089995992753575},{"name":"Q9","sql":"SELECT RegionID, COUNT(DISTINCT UserID) AS u FROM hits GROUP BY RegionID ORDER BY u DESC LIMIT 10;","min":2.862,"max":4.473,"median":3.306,"std_dev":0.5687944366035159,"read_row":99997397,"read_byte":1199968764,"time":[3.306,3.099,3.179,2.862,3.364,4.327,4.228,4.473,3.25],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":3.5220365283208954},{"name":"Q10","sql":"SELECT RegionID, SUM(AdvEngineID), COUNT(*) AS c, AVG(ResolutionWidth), COUNT(DISTINCT UserID) FROM hits GROUP BY RegionID ORDER BY c DESC LIMIT 10;","min":3.117,"max":3.595,"median":3.245,"std_dev":0.1787206247985807,"read_row":99997397,"read_byte":1599958352,"time":[3.18,3.409,3.589,3.117,3.167,3.245,3.228,3.595,3.51],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":3.3330416648858128},{"name":"Q11","sql":"SELECT MobilePhoneModel, COUNT(DISTINCT UserID) AS u FROM hits WHERE MobilePhoneModel \u003c\u003e '' GROUP BY MobilePhoneModel ORDER BY u DESC LIMIT 10;","min":2.156,"max":2.647,"median":2.29,"std_dev":0.13074081229669632,"read_row":99997397,"read_byte":1623245040,"time":[2.156,2.308,2.205,2.191,2.342,2.647,2.305,2.228,2.335,2.275],"error":[],"mean":2.2956891236118344},{"name":"Q12","sql":"SELECT MobilePhone, MobilePhoneModel, COUNT(DISTINCT UserID) AS u FROM hits WHERE MobilePhoneModel \u003c\u003e '' GROUP BY MobilePhone, MobilePhoneModel ORDER BY u DESC LIMIT 10;","min":2.086,"max":2.518,"median":2.274,"std_dev":0.11967476759952364,"read_row":99997397,"read_byte":1823239834,"time":[2.518,2.214,2.441,2.225,2.319,2.261,2.287,2.191,2.086,2.363],"error":[],"mean":2.287398866660919},{"name":"Q13","sql":"SELECT SearchPhrase, COUNT(*) AS c FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY SearchPhrase ORDER BY c DESC LIMIT 10;","min":3.474,"max":4.127,"median":3.877,"std_dev":0.1850289933903919,"read_row":99997397,"read_byte":1539621334,"time":[3.825,3.893,3.474,4.127,3.817,4.111,3.877,4.03,3.863],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":3.886248710192312},{"name":"Q14","sql":"SELECT SearchPhrase, COUNT(DISTINCT UserID) AS u FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY SearchPhrase ORDER BY u DESC LIMIT 10;","min":9.81,"max":11.192,"median":10.8605,"std_dev":0.47528375734922795,"read_row":99997397,"read_byte":2339600510,"time":[10.458,10.002,9.81,10.871,11.142,11.14,10.85,11.192,10.364,11.056],"error":[],"mean":10.677719821449589},{"name":"Q15","sql":"SELECT SearchEngineID, SearchPhrase, COUNT(*) AS c FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY SearchEngineID, SearchPhrase ORDER BY c DESC LIMIT 10;","min":3.919,"max":5.056,"median":4.1795,"std_dev":0.30584139680559924,"read_row":99997397,"read_byte":1739616128,"time":[4.183,4.046,5.056,4.248,4.357,4.296,4.166,4.176,3.925,3.919],"error":[],"mean":4.226931237564639},{"name":"Q16","sql":"SELECT UserID, COUNT(*) FROM hits GROUP BY UserID ORDER BY COUNT(*) DESC LIMIT 10;","min":6.859,"max":7.493,"median":7.098,"std_dev":0.19829551022400893,"read_row":99997397,"read_byte":799979176,"time":[6.953,7.201,7.084,6.859,7.493,7.015,7.37,7.112],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":7.133142169064682},{"name":"Q17","sql":"SELECT UserID, SearchPhrase, COUNT(*) FROM hits GROUP BY UserID, SearchPhrase ORDER BY COUNT(*) DESC LIMIT 10;","min":14.039,"max":14.735,"median":14.186,"std_dev":0.2331903265469255,"read_row":99997397,"read_byte":2339600510,"time":[14.182,14.345,14.735,14.106,14.643,14.039,14.149,14.186,14.466],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":14.314891159212134},{"name":"Q18","sql":"SELECT UserID, SearchPhrase, COUNT(*) FROM hits GROUP BY UserID, SearchPhrase LIMIT 10;","min":5.228,"max":7.288,"median":5.5335,"std_dev":0.656891912246604,"read_row":99997397,"read_byte":2339600510,"time":[6.31,5.379,5.261,7.288,5.228,5.476,5.591,5.99],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":5.781164974106249},{"name":"Q19","sql":"SELECT UserID, extract(minute FROM EventTime) AS m, SearchPhrase, COUNT(*) FROM hits GROUP BY UserID, m, SearchPhrase ORDER BY COUNT(*) DESC LIMIT 10;","min":24.837,"max":26.966,"median":25.774,"std_dev":0.7035526206333113,"read_row":99997397,"read_byte":3139579686,"time":[25.751,26.966,26.485,25.797,25.298,26.135,24.879,25.318,24.837,26.665],"error":[],"mean":25.803531874611444},{"name":"Q20","sql":"SELECT UserID FROM hits WHERE UserID = 435090932899640449;","min":0.901,"max":1.215,"median":1.1165,"std_dev":0.09872127430295864,"read_row":155220,"read_byte":1241760,"time":[1.045,1.09,0.978,0.983,1.169,0.901,1.215,1.143,1.148,1.179],"error":[],"mean":1.0804514743653584},{"name":"Q21","sql":"SELECT COUNT(*) FROM hits WHERE URL LIKE '%google%';","min":2.488,"max":3.462,"median":2.6535,"std_dev":0.2626606365636085,"read_row":99997397,"read_byte":10554989482,"time":[2.667,3.462,2.488,2.638,2.813,2.547,2.69,2.64,2.594,2.854],"error":[],"mean":2.72800653971667},{"name":"Q22","sql":"SELECT SearchPhrase, MIN(URL), COUNT(*) AS c FROM hits WHERE URL LIKE '%google%' AND SearchPhrase \u003c\u003e '' GROUP BY SearchPhrase ORDER BY c DESC LIMIT 10;","min":3.527,"max":4.907,"median":3.6885,"std_dev":0.3733369121852272,"read_row":99997397,"read_byte":11378436936,"time":[3.843,3.792,3.694,3.807,3.67,3.527,4.907,3.641,3.683,3.631],"error":[],"mean":3.803605537223275},{"name":"Q23","sql":"SELECT SearchPhrase, MIN(URL), MIN(Title), COUNT(*) AS c, COUNT(DISTINCT UserID) FROM hits WHERE Title LIKE '%Google%' AND URL NOT LIKE '%.google.%' AND SearchPhrase \u003c\u003e '' GROUP BY SearchPhrase ORDER BY c DESC LIMIT 10;","min":5.25,"max":5.527,"median":5.358499999999999,"std_dev":0.09750389735800312,"read_row":99997397,"read_byte":22311593119,"time":[5.463,5.413,5.253,5.342,5.375,5.25,5.284,5.521,5.335,5.527],"error":[],"mean":5.375418391197963},{"name":"Q24","sql":"SELECT * FROM hits WHERE URL LIKE '%google%' ORDER BY EventTime LIMIT 10;","min":8.778,"max":10.375,"median":9.2135,"std_dev":0.4641348510939467,"read_row":99997397,"read_byte":74592933885,"time":[10.375,8.806,8.915,8.832,9.656,9.247,9.268,9.18,9.361,8.778],"error":[],"mean":9.230584104327786},{"name":"Q25","sql":"SELECT SearchPhrase FROM hits WHERE SearchPhrase \u003c\u003e '' ORDER BY EventTime LIMIT 10;","min":3.556,"max":4.976,"median":4.0634999999999994,"std_dev":0.42064136743786856,"read_row":99997397,"read_byte":2339600510,"time":[4.116,3.556,4.331,3.805,3.56,4.011,4.441,3.93,4.452,4.976],"error":[],"mean":4.096747028800695},{"name":"Q26","sql":"SELECT SearchPhrase FROM hits WHERE SearchPhrase \u003c\u003e '' ORDER BY SearchPhrase LIMIT 10;","min":2.307,"max":4.582,"median":3.3815,"std_dev":0.5710766060696236,"read_row":99997397,"read_byte":1539621334,"time":[3.211,2.307,3.401,4.147,3.362,3.134,3.446,3.499,4.582,3.312],"error":[],"mean":3.3916653120178597},{"name":"Q27","sql":"SELECT SearchPhrase FROM hits WHERE SearchPhrase \u003c\u003e '' ORDER BY EventTime, SearchPhrase LIMIT 10;","min":3.504,"max":4.836,"median":3.875,"std_dev":0.4308031569057962,"read_row":99997397,"read_byte":2339600510,"time":[3.856,4.494,3.714,4.836,4.524,3.543,4.19,3.504,3.894,3.787],"error":[],"mean":4.011863430720199},{"name":"Q28","sql":"SELECT CounterID, AVG(length(URL)) AS l, COUNT(*) AS c FROM hits WHERE URL \u003c\u003e '' GROUP BY CounterID HAVING COUNT(*) \u003e 100000 ORDER BY l DESC LIMIT 25;","min":3.547,"max":3.927,"median":3.732,"std_dev":0.1252284312766075,"read_row":99997397,"read_byte":10238805190,"time":[3.707,3.896,3.582,3.547,3.927,3.843,3.821,3.66,3.638,3.757],"error":[],"mean":3.735701444056775},{"name":"Q30","sql":"SELECT SUM(ResolutionWidth), SUM(ResolutionWidth + 1), SUM(ResolutionWidth + 2), SUM(ResolutionWidth + 3), SUM(ResolutionWidth + 4), SUM(ResolutionWidth + 5), SUM(ResolutionWidth + 6), SUM(ResolutionWidth + 7), SUM(ResolutionWidth + 8), SUM(ResolutionWidth + 9), SUM(ResolutionWidth + 10), SUM(ResolutionWidth + 11), SUM(ResolutionWidth + 12), SUM(ResolutionWidth + 13), SUM(ResolutionWidth + 14), SUM(ResolutionWidth + 15), SUM(ResolutionWidth + 16), SUM(ResolutionWidth + 17), SUM(ResolutionWidth + 18), SUM(ResolutionWidth + 19), SUM(ResolutionWidth + 20), SUM(ResolutionWidth + 21), SUM(ResolutionWidth + 22), SUM(ResolutionWidth + 23), SUM(ResolutionWidth + 24), SUM(ResolutionWidth + 25), SUM(ResolutionWidth + 26), SUM(ResolutionWidth + 27), SUM(ResolutionWidth + 28), SUM(ResolutionWidth + 29), SUM(ResolutionWidth + 30), SUM(ResolutionWidth + 31), SUM(ResolutionWidth + 32), SUM(ResolutionWidth + 33), SUM(ResolutionWidth + 34), SUM(ResolutionWidth + 35), SUM(ResolutionWidth + 36), SUM(ResolutionWidth + 37), SUM(ResolutionWidth + 38), SUM(ResolutionWidth + 39), SUM(ResolutionWidth + 40), SUM(ResolutionWidth + 41), SUM(ResolutionWidth + 42), SUM(ResolutionWidth + 43), SUM(ResolutionWidth + 44), SUM(ResolutionWidth + 45), SUM(ResolutionWidth + 46), SUM(ResolutionWidth + 47), SUM(ResolutionWidth + 48), SUM(ResolutionWidth + 49), SUM(ResolutionWidth + 50), SUM(ResolutionWidth + 51), SUM(ResolutionWidth + 52), SUM(ResolutionWidth + 53), SUM(ResolutionWidth + 54), SUM(ResolutionWidth + 55), SUM(ResolutionWidth + 56), SUM(ResolutionWidth + 57), SUM(ResolutionWidth + 58), SUM(ResolutionWidth + 59), SUM(ResolutionWidth + 60), SUM(ResolutionWidth + 61), SUM(ResolutionWidth + 62), SUM(ResolutionWidth + 63), SUM(ResolutionWidth + 64), SUM(ResolutionWidth + 65), SUM(ResolutionWidth + 66), SUM(ResolutionWidth + 67), SUM(ResolutionWidth + 68), SUM(ResolutionWidth + 69), SUM(ResolutionWidth + 70), SUM(ResolutionWidth + 71), SUM(ResolutionWidth + 72), SUM(ResolutionWidth + 73), SUM(ResolutionWidth + 74), SUM(ResolutionWidth + 75), SUM(ResolutionWidth + 76), SUM(ResolutionWidth + 77), SUM(ResolutionWidth + 78), SUM(ResolutionWidth + 79), SUM(ResolutionWidth + 80), SUM(ResolutionWidth + 81), SUM(ResolutionWidth + 82), SUM(ResolutionWidth + 83), SUM(ResolutionWidth + 84), SUM(ResolutionWidth + 85), SUM(ResolutionWidth + 86), SUM(ResolutionWidth + 87), SUM(ResolutionWidth + 88), SUM(ResolutionWidth + 89) FROM hits;","min":1.503,"max":1.804,"median":1.7055,"std_dev":0.08860141082398185,"read_row":99997397,"read_byte":199994794,"time":[1.736,1.7,1.503,1.619,1.61,1.711,1.8,1.684,1.756,1.804],"error":[],"mean":1.6899178738934484},{"name":"Q31","sql":"SELECT SearchEngineID, ClientIP, COUNT(*) AS c, SUM(IsRefresh), AVG(ResolutionWidth) FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY SearchEngineID, ClientIP ORDER BY c DESC LIMIT 10;","min":4.337,"max":4.671,"median":4.4875,"std_dev":0.11373262229896926,"read_row":99997397,"read_byte":2539595304,"time":[4.365,4.502,4.337,4.593,4.473,4.529,4.671,4.347],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":4.475685292832678},{"name":"Q32","sql":"SELECT WatchID, ClientIP, COUNT(*) AS c, SUM(IsRefresh), AVG(ResolutionWidth) FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY WatchID, ClientIP ORDER BY c DESC LIMIT 10;","min":6.68,"max":7.506,"median":6.954,"std_dev":0.25735439368819274,"read_row":99997397,"read_byte":3139579686,"time":[6.954,7.372,7.072,7.506,6.764,6.68,6.881,6.918,7.161],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":7.029566108029844},{"name":"Q33","sql":"SELECT WatchID, ClientIP, COUNT(*) AS c, SUM(IsRefresh), AVG(ResolutionWidth) FROM hits GROUP BY WatchID, ClientIP ORDER BY c DESC LIMIT 10;","min":36.62,"max":41.773,"median":37.16,"std_dev":1.500653692952789,"read_row":99997397,"read_byte":1599958352,"time":[37.16,36.99,37.08,38.008,37.459,41.773,36.652,36.62,37.412],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":37.65547880998289},{"name":"Q34","sql":"SELECT URL, COUNT(*) AS c FROM hits GROUP BY URL ORDER BY c DESC LIMIT 10;","min":13.715,"max":15.274,"median":14.118,"std_dev":0.4886286098534824,"read_row":99997397,"read_byte":9838815602,"time":[13.715,14.039,14.118,13.938,14.496,14.634,15.274],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":14.308080578427468},{"name":"Q35","sql":"SELECT 1, URL, COUNT(*) AS c FROM hits GROUP BY 1, URL ORDER BY c DESC LIMIT 10;","min":31.788,"max":36.96,"median":34.923,"std_dev":2.0605002693520826,"read_row":99997397,"read_byte":9838815602,"time":[36.96,35.968,32.135,34.923,31.788],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":34.29258793313315},{"name":"Q36","sql":"SELECT ClientIP, ClientIP - 1, ClientIP - 2, ClientIP - 3, COUNT(*) AS c FROM hits GROUP BY ClientIP, ClientIP - 1, ClientIP - 2, ClientIP - 3 ORDER BY c DESC LIMIT 10;","min":6.044,"max":6.424,"median":6.234,"std_dev":0.11172165589115547,"read_row":99997397,"read_byte":399989588,"time":[6.237,6.424,6.234,6.177,6.37,6.105,6.252,6.189,6.044],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":6.224777804640786},{"name":"Q37","sql":"SELECT URL, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND DontCountHits = 0 AND IsRefresh = 0 AND URL \u003c\u003e '' GROUP BY URL ORDER BY PageViews DESC LIMIT 10;","min":2.058,"max":2.437,"median":2.3005,"std_dev":0.12846497577160862,"read_row":5405673,"read_byte":585928007,"time":[2.079,2.058,2.3,2.297,2.301,2.405,2.437,2.315],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":2.2702744646351642},{"name":"Q38","sql":"SELECT Title, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND DontCountHits = 0 AND IsRefresh = 0 AND Title \u003c\u003e '' GROUP BY Title ORDER BY PageViews DESC LIMIT 10;","min":2.002,"max":2.464,"median":2.2535,"std_dev":0.1464364708670624,"read_row":5405673,"read_byte":669763783,"time":[2.464,2.301,2.102,2.002,2.184,2.222,2.285,2.455,2.416,2.163],"error":[],"mean":2.254624357821175},{"name":"Q39","sql":"SELECT URL, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND IsRefresh = 0 AND IsLink \u003c\u003e 0 AND IsDownload = 0 GROUP BY URL ORDER BY PageViews DESC LIMIT 10 OFFSET 1000;","min":2.003,"max":2.581,"median":2.303,"std_dev":0.21858520077992474,"read_row":5405673,"read_byte":596739353,"time":[2.052,2.405,2.179,2.044,2.201,2.581,2.563,2.555,2.418,2.003],"error":[],"mean":2.289662842177469},{"name":"Q40","sql":"SELECT TraficSourceID, SearchEngineID, AdvEngineID, CASE WHEN (SearchEngineID = 0 AND AdvEngineID = 0) THEN Referer ELSE '' END AS Src, URL AS Dst, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND IsRefresh = 0 GROUP BY TraficSourceID, SearchEngineID, AdvEngineID, Src, Dst ORDER BY PageViews DESC LIMIT 10 OFFSET 1000;","min":2.751,"max":3.566,"median":2.912,"std_dev":0.3524299772846925,"read_row":5405673,"read_byte":1095555924,"time":[2.912,2.751,3.566],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":3.056945996525581},{"name":"Q41","sql":"SELECT URLHash, EventDate, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND IsRefresh = 0 AND TraficSourceID IN (-1, 6) AND RefererHash = 3594120000172545465 GROUP BY URLHash, EventDate ORDER BY PageViews DESC LIMIT 10 OFFSET 100;","min":1.946,"max":2.637,"median":2.1755,"std_dev":0.2083737987367894,"read_row":5405673,"read_byte":151358844,"time":[2.478,2.142,2.034,2.209,2.017,2.057,2.319,1.946,2.257,2.637],"error":[],"mean":2.2001347960483484},{"name":"Q42","sql":"SELECT WindowClientWidth, WindowClientHeight, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND IsRefresh = 0 AND DontCountHits = 0 AND URLHash = 2868770270353813622 GROUP BY WindowClientWidth, WindowClientHeight ORDER BY PageViews DESC LIMIT 10 OFFSET 10000;","min":1.921,"max":2.557,"median":2.237,"std_dev":0.19506073413170572,"read_row":5405673,"read_byte":129736152,"time":[2.557,2.406,2.26,2.364,2.412,1.99,1.921,2.091,2.214,2.096],"error":[],"mean":2.2225231508384655},{"name":"Q43","sql":"SELECT DATE_TRUNC('minute', EventTime) AS M, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-14' AND EventDate \u003c= '2013-07-15' AND IsRefresh = 0 AND DontCountHits = 0 GROUP BY DATE_TRUNC('minute', EventTime) ORDER BY DATE_TRUNC('minute', EventTime) LIMIT 10 OFFSET 1000;","min":2.049,"max":2.283,"median":2.1645,"std_dev":0.07298794420998574,"read_row":5405673,"read_byte":108113460,"time":[2.049,2.107,2.197,2.075,2.283,2.231,2.195,2.068,2.171,2.158],"error":[],"mean":2.15216540306603}]}