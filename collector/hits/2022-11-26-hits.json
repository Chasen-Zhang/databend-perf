{"metadata":{"table":"hits","tag":"v0.8.126-nightly","size":"Large"},"schema":[{"name":"Q1","sql":"SELECT COUNT(*) FROM hits;","min":0.023,"max":0.027,"median":0.0245,"std_dev":0.001284523257866513,"read_row":1,"read_byte":1,"time":[0.024,0.025,0.027,0.023,0.023,0.024,0.026,0.025,0.025,0.023],"error":[],"mean":0.024466751609184677},{"name":"Q2","sql":"SELECT COUNT(*) FROM hits WHERE AdvEngineID \u003c\u003e 0;","min":1.028,"max":1.756,"median":1.1949999999999998,"std_dev":0.19466792237037928,"read_row":98005036,"read_byte":196010072,"time":[1.222,1.756,1.391,1.19,1.194,1.245,1.196,1.128,1.028,1.08],"error":[],"mean":1.2297308370478353},{"name":"Q3","sql":"SELECT SUM(AdvEngineID), COUNT(*), AVG(ResolutionWidth) FROM hits;","min":1.083,"max":1.434,"median":1.2559999999999998,"std_dev":0.10313432988098577,"read_row":99997397,"read_byte":399989588,"time":[1.259,1.327,1.274,1.177,1.343,1.434,1.253,1.124,1.157,1.083],"error":[],"mean":1.23883849110571},{"name":"Q4","sql":"SELECT AVG(UserID) FROM hits;","min":1.102,"max":1.299,"median":1.2055,"std_dev":0.06489383637911995,"read_row":99997397,"read_byte":799979176,"time":[1.257,1.299,1.191,1.293,1.192,1.102,1.248,1.104,1.209,1.202],"error":[],"mean":1.2079325915252181},{"name":"Q5","sql":"SELECT COUNT(DISTINCT UserID) FROM hits;","min":4.728,"max":4.89,"median":4.772,"std_dev":0.04321446517081982,"read_row":99997397,"read_byte":799979176,"time":[4.774,4.89,4.741,4.806,4.792,4.745,4.785,4.768,4.728,4.77],"error":[],"mean":4.779706239859265},{"name":"Q6","sql":"SELECT COUNT(DISTINCT SearchPhrase) FROM hits;","min":3.106,"max":3.32,"median":3.1885,"std_dev":0.06198556283522799,"read_row":99997397,"read_byte":1539621294,"time":[3.164,3.163,3.32,3.266,3.195,3.106,3.246,3.182,3.28,3.181],"error":[],"mean":3.2097029754341393},{"name":"Q7","sql":"SELECT MIN(EventDate), MAX(EventDate) FROM hits;","min":1.132,"max":1.324,"median":1.221,"std_dev":0.05710691726927661,"read_row":99997397,"read_byte":399989588,"time":[1.188,1.201,1.132,1.172,1.241,1.291,1.264,1.324,1.183,1.264],"error":[],"mean":1.2246721416459345},{"name":"Q8","sql":"SELECT AdvEngineID, COUNT(*) FROM hits WHERE AdvEngineID \u003c\u003e 0 GROUP BY AdvEngineID ORDER BY COUNT(*) DESC;","min":1.681,"max":2.117,"median":1.992,"std_dev":0.11177674176679153,"read_row":98005036,"read_byte":196010072,"time":[1.997,1.891,1.987,1.985,1.681,2.06,2.012,2.015,2.117,1.949],"error":[],"mean":1.966028743545208},{"name":"Q9","sql":"SELECT RegionID, COUNT(DISTINCT UserID) AS u FROM hits GROUP BY RegionID ORDER BY u DESC LIMIT 10;","min":2.498,"max":2.615,"median":2.5565,"std_dev":0.058499999999999996,"read_row":99997397,"read_byte":1199968764,"time":[2.615,2.498],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1068 Message:Cannot send flight data to endpoint, because sender is closed. Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":2.5558305890649327},{"name":"Q10","sql":"SELECT RegionID, SUM(AdvEngineID), COUNT(*) AS c, AVG(ResolutionWidth), COUNT(DISTINCT UserID) FROM hits GROUP BY RegionID ORDER BY c DESC LIMIT 10;","min":2.696,"max":2.985,"median":2.766,"std_dev":0.12309977886070927,"read_row":99997397,"read_byte":1599958352,"time":[2.696,2.985,2.766],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":2.813015550882743},{"name":"Q11","sql":"SELECT MobilePhoneModel, COUNT(DISTINCT UserID) AS u FROM hits WHERE MobilePhoneModel \u003c\u003e '' GROUP BY MobilePhoneModel ORDER BY u DESC LIMIT 10;","min":2.036,"max":2.32,"median":2.146,"std_dev":0.0937870460138286,"read_row":99997397,"read_byte":1623245000,"time":[2.036,2.17,2.206,2.122,2.058,2.09,2.298,2.32,2.248,2.119],"error":[],"mean":2.16468412627803},{"name":"Q12","sql":"SELECT MobilePhone, MobilePhoneModel, COUNT(DISTINCT UserID) AS u FROM hits WHERE MobilePhoneModel \u003c\u003e '' GROUP BY MobilePhone, MobilePhoneModel ORDER BY u DESC LIMIT 10;","min":1.795,"max":2.231,"median":2.0825,"std_dev":0.10946803186318828,"read_row":99997397,"read_byte":1823239794,"time":[2.068,2.08,1.795,2.085,2.14,2.052,2.14,2.231,2.014,2.14],"error":[],"mean":2.0714583687275288},{"name":"Q13","sql":"SELECT SearchPhrase, COUNT(*) AS c FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY SearchPhrase ORDER BY c DESC LIMIT 10;","min":2.922,"max":3.691,"median":3.341,"std_dev":0.20546748864209363,"read_row":99997397,"read_byte":1539621294,"time":[3.558,3.341,3.296,3.327,3.334,3.691,2.922,3.535,3.446],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":3.3768595378182984},{"name":"Q14","sql":"SELECT SearchPhrase, COUNT(DISTINCT UserID) AS u FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY SearchPhrase ORDER BY u DESC LIMIT 10;","min":3.05,"max":3.905,"median":3.539,"std_dev":0.29053552087290274,"read_row":99997397,"read_byte":2339600470,"time":[3.905,3.137,3.287,3.773,3.539,3.05,3.867,3.556,3.449],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":3.4948273991073453},{"name":"Q15","sql":"SELECT SearchEngineID, SearchPhrase, COUNT(*) AS c FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY SearchEngineID, SearchPhrase ORDER BY c DESC LIMIT 10;","min":2.981,"max":3.982,"median":3.572,"std_dev":0.32513106587959273,"read_row":99997397,"read_byte":1739616088,"time":[3.291,3.53,3.871,3.614,3.367,3.187,3.982,3.979,3.701,2.981],"error":[],"mean":3.535163742159749},{"name":"Q16","sql":"SELECT UserID, COUNT(*) FROM hits GROUP BY UserID ORDER BY COUNT(*) DESC LIMIT 10;","min":3.291,"max":3.936,"median":3.553,"std_dev":0.16883047235336912,"read_row":99997397,"read_byte":799979176,"time":[3.553,3.668,3.936,3.462,3.55,3.291,3.601,3.452,3.66],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":3.5708440176098812},{"name":"Q17","sql":"SELECT UserID, SearchPhrase, COUNT(*) FROM hits GROUP BY UserID, SearchPhrase ORDER BY COUNT(*) DESC LIMIT 10;","min":6.22,"max":8.401,"median":6.349,"std_dev":0.7362444290960714,"read_row":99997397,"read_byte":2339600470,"time":[7.249,6.254,6.22,6.262,6.259,7.272,8.401,6.436],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":6.757027062497985},{"name":"Q18","sql":"SELECT UserID, SearchPhrase, COUNT(*) FROM hits GROUP BY UserID, SearchPhrase LIMIT 10;","min":2.991,"max":3.533,"median":3.191,"std_dev":0.15223742764182527,"read_row":99997397,"read_byte":2339600470,"time":[3.173,3.311,3.117,3.279,3.533,2.991,3.118,3.209],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":3.212840522498852},{"name":"Q19","sql":"SELECT UserID, extract(minute FROM EventTime) AS m, SearchPhrase, COUNT(*) FROM hits GROUP BY UserID, m, SearchPhrase ORDER BY COUNT(*) DESC LIMIT 10;","min":9.961,"max":17.645,"median":11.722000000000001,"std_dev":2.5822919296624844,"read_row":99997397,"read_byte":3139579646,"time":[17.426,10.959,12.112,17.645,12.96,10.88,11.332,14.187,9.961,11.331],"error":[],"mean":12.643893737476796},{"name":"Q20","sql":"SELECT UserID FROM hits WHERE UserID = 435090932899640449;","min":1.001,"max":1.283,"median":1.1844999999999999,"std_dev":0.08275771867324523,"read_row":879758,"read_byte":7038064,"time":[1.157,1.001,1.056,1.182,1.187,1.179,1.248,1.24,1.223,1.283],"error":[],"mean":1.1725470379518972},{"name":"Q21","sql":"SELECT COUNT(*) FROM hits WHERE URL LIKE '%google%';","min":2.607,"max":4.909,"median":2.7119999999999997,"std_dev":0.8673986453759309,"read_row":99997397,"read_byte":9838815562,"time":[2.69,2.637,3.64,2.665,2.607,2.656,2.734,4.572,4.909,4.183],"error":[],"mean":3.2265735826717434},{"name":"Q22","sql":"SELECT SearchPhrase, MIN(URL), COUNT(*) AS c FROM hits WHERE URL LIKE '%google%' AND SearchPhrase \u003c\u003e '' GROUP BY SearchPhrase ORDER BY c DESC LIMIT 10;","min":3.512,"max":3.789,"median":3.665,"std_dev":0.08376992300342649,"read_row":99997397,"read_byte":11378436856,"time":[3.745,3.648,3.671,3.779,3.512,3.577,3.608,3.789,3.659,3.692],"error":[],"mean":3.667040117249201},{"name":"Q23","sql":"SELECT SearchPhrase, MIN(URL), MIN(Title), COUNT(*) AS c, COUNT(DISTINCT UserID) FROM hits WHERE Title LIKE '%Google%' AND URL NOT LIKE '%.google.%' AND SearchPhrase \u003c\u003e '' GROUP BY SearchPhrase ORDER BY c DESC LIMIT 10;","min":5.462,"max":5.812,"median":5.6305,"std_dev":0.09524751965274483,"read_row":99997397,"read_byte":22323686783,"time":[5.644,5.608,5.462,5.634,5.604,5.812,5.606,5.627,5.76,5.752],"error":[],"mean":5.650096495562706},{"name":"Q24","sql":"SELECT * FROM hits WHERE URL LIKE '%google%' ORDER BY EventTime LIMIT 10;","min":8.151,"max":9.098,"median":8.3025,"std_dev":0.25513909931643197,"read_row":99997397,"read_byte":74652018633,"time":[8.245,8.313,8.151,8.246,8.228,8.306,8.446,9.098,8.303,8.302],"error":[],"mean":8.360078685159305},{"name":"Q25","sql":"SELECT SearchPhrase FROM hits WHERE SearchPhrase \u003c\u003e '' ORDER BY EventTime LIMIT 10;","min":3.219,"max":4.537,"median":3.9895,"std_dev":0.36942264413541304,"read_row":99997397,"read_byte":2339600470,"time":[3.687,3.56,4.319,4.264,4.005,3.974,4.537,3.949,4.117,3.219],"error":[],"mean":3.945219468316706},{"name":"Q26","sql":"SELECT SearchPhrase FROM hits WHERE SearchPhrase \u003c\u003e '' ORDER BY SearchPhrase LIMIT 10;","min":2.838,"max":3.64,"median":3.232,"std_dev":0.29778750813289667,"read_row":99997397,"read_byte":1539621294,"time":[2.922,3.64,3.592,2.933,2.924,3.627,3.247,3.217,2.838,3.25],"error":[],"mean":3.205371721536033},{"name":"Q27","sql":"SELECT SearchPhrase FROM hits WHERE SearchPhrase \u003c\u003e '' ORDER BY EventTime, SearchPhrase LIMIT 10;","min":3.437,"max":4.504,"median":3.7960000000000003,"std_dev":0.39864381344754374,"read_row":99997397,"read_byte":2339600470,"time":[4.445,3.766,4.501,3.437,3.826,3.857,3.732,4.504,3.445,3.596],"error":[],"mean":3.8911539685531222},{"name":"Q28","sql":"SELECT CounterID, AVG(length(URL)) AS l, COUNT(*) AS c FROM hits WHERE URL \u003c\u003e '' GROUP BY CounterID HAVING COUNT(*) \u003e 100000 ORDER BY l DESC LIMIT 25;","min":3.138,"max":3.519,"median":3.2640000000000002,"std_dev":0.11180093917315723,"read_row":99997397,"read_byte":10238805150,"time":[3.213,3.183,3.184,3.138,3.328,3.519,3.315,3.347,3.152,3.316],"error":[],"mean":3.267620351429356},{"name":"Q30","sql":"SELECT SUM(ResolutionWidth), SUM(ResolutionWidth + 1), SUM(ResolutionWidth + 2), SUM(ResolutionWidth + 3), SUM(ResolutionWidth + 4), SUM(ResolutionWidth + 5), SUM(ResolutionWidth + 6), SUM(ResolutionWidth + 7), SUM(ResolutionWidth + 8), SUM(ResolutionWidth + 9), SUM(ResolutionWidth + 10), SUM(ResolutionWidth + 11), SUM(ResolutionWidth + 12), SUM(ResolutionWidth + 13), SUM(ResolutionWidth + 14), SUM(ResolutionWidth + 15), SUM(ResolutionWidth + 16), SUM(ResolutionWidth + 17), SUM(ResolutionWidth + 18), SUM(ResolutionWidth + 19), SUM(ResolutionWidth + 20), SUM(ResolutionWidth + 21), SUM(ResolutionWidth + 22), SUM(ResolutionWidth + 23), SUM(ResolutionWidth + 24), SUM(ResolutionWidth + 25), SUM(ResolutionWidth + 26), SUM(ResolutionWidth + 27), SUM(ResolutionWidth + 28), SUM(ResolutionWidth + 29), SUM(ResolutionWidth + 30), SUM(ResolutionWidth + 31), SUM(ResolutionWidth + 32), SUM(ResolutionWidth + 33), SUM(ResolutionWidth + 34), SUM(ResolutionWidth + 35), SUM(ResolutionWidth + 36), SUM(ResolutionWidth + 37), SUM(ResolutionWidth + 38), SUM(ResolutionWidth + 39), SUM(ResolutionWidth + 40), SUM(ResolutionWidth + 41), SUM(ResolutionWidth + 42), SUM(ResolutionWidth + 43), SUM(ResolutionWidth + 44), SUM(ResolutionWidth + 45), SUM(ResolutionWidth + 46), SUM(ResolutionWidth + 47), SUM(ResolutionWidth + 48), SUM(ResolutionWidth + 49), SUM(ResolutionWidth + 50), SUM(ResolutionWidth + 51), SUM(ResolutionWidth + 52), SUM(ResolutionWidth + 53), SUM(ResolutionWidth + 54), SUM(ResolutionWidth + 55), SUM(ResolutionWidth + 56), SUM(ResolutionWidth + 57), SUM(ResolutionWidth + 58), SUM(ResolutionWidth + 59), SUM(ResolutionWidth + 60), SUM(ResolutionWidth + 61), SUM(ResolutionWidth + 62), SUM(ResolutionWidth + 63), SUM(ResolutionWidth + 64), SUM(ResolutionWidth + 65), SUM(ResolutionWidth + 66), SUM(ResolutionWidth + 67), SUM(ResolutionWidth + 68), SUM(ResolutionWidth + 69), SUM(ResolutionWidth + 70), SUM(ResolutionWidth + 71), SUM(ResolutionWidth + 72), SUM(ResolutionWidth + 73), SUM(ResolutionWidth + 74), SUM(ResolutionWidth + 75), SUM(ResolutionWidth + 76), SUM(ResolutionWidth + 77), SUM(ResolutionWidth + 78), SUM(ResolutionWidth + 79), SUM(ResolutionWidth + 80), SUM(ResolutionWidth + 81), SUM(ResolutionWidth + 82), SUM(ResolutionWidth + 83), SUM(ResolutionWidth + 84), SUM(ResolutionWidth + 85), SUM(ResolutionWidth + 86), SUM(ResolutionWidth + 87), SUM(ResolutionWidth + 88), SUM(ResolutionWidth + 89) FROM hits;","min":1.514,"max":1.767,"median":1.611,"std_dev":0.08299518058297117,"read_row":99997397,"read_byte":199994794,"time":[1.514,1.641,1.693,1.767,1.532,1.587,1.587,1.748,1.635,1.556],"error":[],"mean":1.623906185522948},{"name":"Q31","sql":"SELECT SearchEngineID, ClientIP, COUNT(*) AS c, SUM(IsRefresh), AVG(ResolutionWidth) FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY SearchEngineID, ClientIP ORDER BY c DESC LIMIT 10;","min":2.878,"max":3.169,"median":3.067,"std_dev":0.08415990071815012,"read_row":99997397,"read_byte":2539595264,"time":[3.169,2.878,3.067,3.091,3.039,3.142,2.989,3.06,3.135],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":3.062157387257315},{"name":"Q32","sql":"SELECT WatchID, ClientIP, COUNT(*) AS c, SUM(IsRefresh), AVG(ResolutionWidth) FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY WatchID, ClientIP ORDER BY c DESC LIMIT 10;","min":3.759,"max":4.289,"median":4.092,"std_dev":0.2040222089097043,"read_row":99997397,"read_byte":3139579646,"time":[3.767,4.176,3.759,4.159,3.896,4.241,4.289,4.092,3.781],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":4.012569311334819},{"name":"Q33","sql":"SELECT WatchID, ClientIP, COUNT(*) AS c, SUM(IsRefresh), AVG(ResolutionWidth) FROM hits GROUP BY WatchID, ClientIP ORDER BY c DESC LIMIT 10;","min":16.567,"max":29.638,"median":18.933,"std_dev":4.256888496715575,"read_row":99997397,"read_byte":1599958352,"time":[29.638,16.567,18.933,21.644,17.187,16.802,19.548],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":19.66147788422758},{"name":"Q34","sql":"SELECT URL, COUNT(*) AS c FROM hits GROUP BY URL ORDER BY c DESC LIMIT 10;","min":8.301,"max":17,"median":11.514,"std_dev":2.454215692775732,"read_row":99997397,"read_byte":9838815562,"time":[10.02,13.609,9.189,12.443,10.738,12.237,8.301,11.514,17],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":11.42963486441542},{"name":"Q35","sql":"SELECT 1, URL, COUNT(*) AS c FROM hits GROUP BY 1, URL ORDER BY c DESC LIMIT 10;","min":16.154,"max":26.317,"median":18.755499999999998,"std_dev":3.5993339661665185,"read_row":99997397,"read_byte":9838815562,"time":[17.71,16.787,16.154,19.801,22.733,26.317],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","request got bad status: 500 req= resp={\"error\":{\"kind\":\"InternalError\",\"message\":\"proxy upstream failed: EOF\"}}","request got bad status: 404 req= resp=query id not found 9b5b69bb-60a1-4205-bbb8-4372c09c6964"],"mean":19.611403008077986},{"name":"Q36","sql":"SELECT ClientIP, ClientIP - 1, ClientIP - 2, ClientIP - 3, COUNT(*) AS c FROM hits GROUP BY ClientIP, ClientIP - 1, ClientIP - 2, ClientIP - 3 ORDER BY c DESC LIMIT 10;","min":3.849,"max":4.523,"median":4.062,"std_dev":0.24150684370335257,"read_row":99997397,"read_byte":399989588,"time":[4.348,3.849,4.062,4.058,4.32,4.523,3.872,4.472,3.972],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":4.157027551712562},{"name":"Q37","sql":"SELECT URL, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND DontCountHits = 0 AND IsRefresh = 0 AND URL \u003c\u003e '' GROUP BY URL ORDER BY PageViews DESC LIMIT 10;","min":2.041,"max":2.423,"median":2.1675,"std_dev":0.13367034076413514,"read_row":5758161,"read_byte":687097589,"time":[2.051,2.108,2.414,2.198,2.041,2.125,2.208,2.423,2.137,2.333],"error":[],"mean":2.199821743556935},{"name":"Q38","sql":"SELECT Title, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND DontCountHits = 0 AND IsRefresh = 0 AND Title \u003c\u003e '' GROUP BY Title ORDER BY PageViews DESC LIMIT 10;","min":1.968,"max":2.265,"median":2.041,"std_dev":0.09770368467974992,"read_row":5758161,"read_byte":685666184,"time":[2.15,2.025,1.97,2.171,1.994,2.158,1.968,2.057,2.265,1.999],"error":[],"mean":2.0734360814973987},{"name":"Q39","sql":"SELECT URL, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND IsRefresh = 0 AND IsLink \u003c\u003e 0 AND IsDownload = 0 GROUP BY URL ORDER BY PageViews DESC LIMIT 10 OFFSET 1000;","min":1.938,"max":2.195,"median":2.0705,"std_dev":0.09451560717680438,"read_row":5758161,"read_byte":698613911,"time":[2.11,2.036,1.952,2.195,2.066,2.193,1.938,2.178,1.957,2.075],"error":[],"mean":2.0678375100665565},{"name":"Q40","sql":"SELECT TraficSourceID, SearchEngineID, AdvEngineID, CASE WHEN (SearchEngineID = 0 AND AdvEngineID = 0) THEN Referer ELSE '' END AS Src, URL AS Dst, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND IsRefresh = 0 GROUP BY TraficSourceID, SearchEngineID, AdvEngineID, Src, Dst ORDER BY PageViews DESC LIMIT 10 OFFSET 1000;","min":2.568,"max":3.083,"median":2.651,"std_dev":0.1505093020381133,"read_row":5758161,"read_byte":1220830641,"time":[2.636,2.792,2.659,2.643,2.748,2.568,2.586,2.585,2.835,3.083],"error":[],"mean":2.7095075930496875},{"name":"Q41","sql":"SELECT URLHash, EventDate, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND IsRefresh = 0 AND TraficSourceID IN (-1, 6) AND RefererHash = 3594120000172545465 GROUP BY URLHash, EventDate ORDER BY PageViews DESC LIMIT 10 OFFSET 100;","min":1.81,"max":2.223,"median":2.038,"std_dev":0.11547138173590886,"read_row":5758161,"read_byte":161228508,"time":[1.985,2.179,2.003,2.082,2.046,1.81,2.03,2.223,2.114,1.914],"error":[],"mean":2.0352820561686333},{"name":"Q42","sql":"SELECT WindowClientWidth, WindowClientHeight, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND IsRefresh = 0 AND DontCountHits = 0 AND URLHash = 2868770270353813622 GROUP BY WindowClientWidth, WindowClientHeight ORDER BY PageViews DESC LIMIT 10 OFFSET 10000;","min":1.881,"max":2.181,"median":2.016,"std_dev":0.0703730061884527,"read_row":5758161,"read_byte":138195864,"time":[2.017,2.015,2.049,2.035,2.181,2.014,1.881,1.98,2.036,1.984],"error":[],"mean":2.017983393401476},{"name":"Q43","sql":"SELECT DATE_TRUNC('minute', EventTime) AS M, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-14' AND EventDate \u003c= '2013-07-15' AND IsRefresh = 0 AND DontCountHits = 0 GROUP BY DATE_TRUNC('minute', EventTime) ORDER BY DATE_TRUNC('minute', EventTime) LIMIT 10 OFFSET 1000;","min":1.891,"max":2.12,"median":2.019,"std_dev":0.07100204222415014,"read_row":5758161,"read_byte":115163220,"time":[2.036,1.897,1.919,1.98,2.12,2.036,2.045,2.002,2.045,1.891],"error":[],"mean":1.995832604378293}]}