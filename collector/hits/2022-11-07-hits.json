{"metadata":{"table":"hits","tag":"v0.8.102-nightly","size":"Large"},"schema":[{"name":"Q1","sql":"SELECT COUNT(*) FROM hits;","min":0.094,"max":0.161,"median":0.1385,"std_dev":0.020495121370706734,"read_row":1,"read_byte":1,"time":[0.135,0.108,0.161,0.145,0.142,0.143,0.103,0.143,0.131,0.094],"error":[],"mean":0.12877003672434173},{"name":"Q2","sql":"SELECT COUNT(*) FROM hits WHERE AdvEngineID \u003c\u003e 0;","min":1.08,"max":7.118,"median":1.2385000000000002,"std_dev":1.7886318346714063,"read_row":95903902,"read_byte":191807804,"time":[1.202,1.244,1.224,1.277,1.08,1.267,1.081,1.233,2.818,7.118],"error":[],"mean":1.5602655790381743},{"name":"Q3","sql":"SELECT SUM(AdvEngineID), COUNT(*), AVG(ResolutionWidth) FROM hits;","min":1.06,"max":8.149,"median":1.258,"std_dev":2.6382026912274954,"read_row":99997397,"read_byte":399989588,"time":[8.149,1.415,1.475,1.208,7.513,1.136,1.213,1.202,1.06,1.303],"error":[],"mean":1.798012464906733},{"name":"Q4","sql":"SELECT AVG(UserID) FROM hits;","min":1.198,"max":1.467,"median":1.338,"std_dev":0.08378520155731563,"read_row":99997397,"read_byte":799979176,"time":[1.331,1.46,1.326,1.467,1.251,1.363,1.345,1.395,1.252,1.198],"error":[],"mean":1.336169442238808},{"name":"Q5","sql":"SELECT COUNT(DISTINCT UserID) FROM hits;","min":4.88,"max":5.189,"median":5.0329999999999995,"std_dev":0.07456540752922906,"read_row":99997397,"read_byte":799979176,"time":[4.88,5.023,4.987,5.051,5.026,5.102,5.024,5.058,5.189,5.04],"error":[],"mean":5.037447509865228},{"name":"Q6","sql":"SELECT COUNT(DISTINCT SearchPhrase) FROM hits;","min":3.061,"max":3.387,"median":3.221,"std_dev":0.100772268010599,"read_row":99997397,"read_byte":1539621334,"time":[3.292,3.257,3.327,3.232,3.108,3.21,3.061,3.387,3.088,3.203],"error":[],"mean":3.2149191360972824},{"name":"Q7","sql":"SELECT MIN(EventDate), MAX(EventDate) FROM hits;","min":1.027,"max":1.269,"median":1.1615,"std_dev":0.05881530413081276,"read_row":99997397,"read_byte":399989588,"time":[1.158,1.133,1.269,1.175,1.124,1.143,1.165,1.209,1.171,1.027],"error":[],"mean":1.1558806844760225},{"name":"Q8","sql":"SELECT AdvEngineID, COUNT(*) FROM hits WHERE AdvEngineID \u003c\u003e 0 GROUP BY AdvEngineID ORDER BY COUNT(*) DESC;","min":1.851,"max":2.083,"median":1.939,"std_dev":0.0701285248668472,"read_row":95903902,"read_byte":191807804,"time":[2.083,1.884,1.908,1.903,2.003,1.851,2.002,1.97,1.899,2.02],"error":[],"mean":1.951048803026728},{"name":"Q9","sql":"SELECT RegionID, COUNT(DISTINCT UserID) AS u FROM hits GROUP BY RegionID ORDER BY u DESC LIMIT 10;","min":2.414,"max":2.905,"median":2.689,"std_dev":0.12607033114520524,"read_row":99997397,"read_byte":1199968764,"time":[2.689,2.658,2.905,2.804,2.738,2.675,2.685,2.766,2.414],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":2.7007509837370667},{"name":"Q10","sql":"SELECT RegionID, SUM(AdvEngineID), COUNT(*) AS c, AVG(ResolutionWidth), COUNT(DISTINCT UserID) FROM hits GROUP BY RegionID ORDER BY c DESC LIMIT 10;","min":2.511,"max":2.904,"median":2.71,"std_dev":0.10194019064694648,"read_row":99997397,"read_byte":1599958352,"time":[2.769,2.511,2.613,2.661,2.726,2.739,2.904,2.69,2.71],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":2.700632922620617},{"name":"Q11","sql":"SELECT MobilePhoneModel, COUNT(DISTINCT UserID) AS u FROM hits WHERE MobilePhoneModel \u003c\u003e '' GROUP BY MobilePhoneModel ORDER BY u DESC LIMIT 10;","min":1.877,"max":2.153,"median":2.019,"std_dev":0.08573033302163245,"read_row":99997397,"read_byte":1623245040,"time":[2.153,2.136,1.944,2.104,1.976,1.993,1.877,2.045,2.058,1.953],"error":[],"mean":2.0220815714249434},{"name":"Q12","sql":"SELECT MobilePhone, MobilePhoneModel, COUNT(DISTINCT UserID) AS u FROM hits WHERE MobilePhoneModel \u003c\u003e '' GROUP BY MobilePhone, MobilePhoneModel ORDER BY u DESC LIMIT 10;","min":1.979,"max":2.169,"median":2.0615,"std_dev":0.060526337242559174,"read_row":99997397,"read_byte":1823239834,"time":[2.034,2.017,2.1,2.148,2.169,2.06,2.063,1.979],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":2.0703690971127595},{"name":"Q13","sql":"SELECT SearchPhrase, COUNT(*) AS c FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY SearchPhrase ORDER BY c DESC LIMIT 10;","min":3.392,"max":3.918,"median":3.569,"std_dev":0.1506072063755414,"read_row":99997397,"read_byte":1539621334,"time":[3.918,3.606,3.392,3.569,3.585,3.516,3.513],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":3.5825062790317723},{"name":"Q14","sql":"SELECT SearchPhrase, COUNT(DISTINCT UserID) AS u FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY SearchPhrase ORDER BY u DESC LIMIT 10;","min":3.65,"max":4.167,"median":4.026,"std_dev":0.13978039919817076,"read_row":99997397,"read_byte":2339600510,"time":[3.967,3.997,4.129,4.167,4.08,4.153,4.024,4.003,3.65,4.028],"error":[],"mean":4.01727231168032},{"name":"Q15","sql":"SELECT SearchEngineID, SearchPhrase, COUNT(*) AS c FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY SearchEngineID, SearchPhrase ORDER BY c DESC LIMIT 10;","min":3.654,"max":4.371,"median":3.774,"std_dev":0.22676788456346242,"read_row":99997397,"read_byte":1739616128,"time":[3.774,3.843,3.654,3.736,4.371,3.781,3.682],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":3.8281453821713423},{"name":"Q16","sql":"SELECT UserID, COUNT(*) FROM hits GROUP BY UserID ORDER BY COUNT(*) DESC LIMIT 10;","min":6.462,"max":6.93,"median":6.586,"std_dev":0.14014791293487028,"read_row":99997397,"read_byte":799979176,"time":[6.93,6.621,6.541,6.551,6.758,6.632,6.462,6.539],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":6.627789335238997},{"name":"Q17","sql":"SELECT UserID, SearchPhrase, COUNT(*) FROM hits GROUP BY UserID, SearchPhrase ORDER BY COUNT(*) DESC LIMIT 10;","min":20.994,"max":22.534,"median":21.771,"std_dev":0.4903849835575769,"read_row":99997397,"read_byte":2339600510,"time":[22.534,21.969,21.723,20.994,21.771,21.132,21.815,22.394,21.392],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":21.741585106640223},{"name":"Q18","sql":"SELECT UserID, SearchPhrase, COUNT(*) FROM hits GROUP BY UserID, SearchPhrase LIMIT 10;","min":4.539,"max":5.731,"median":4.906,"std_dev":0.39049095700156744,"read_row":99997397,"read_byte":2339600510,"time":[5.083,4.909,5.537,4.539,4.694,4.738,4.903,5.731],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":5.002041452131252},{"name":"Q19","sql":"SELECT UserID, extract(minute FROM EventTime) AS m, SearchPhrase, COUNT(*) FROM hits GROUP BY UserID, m, SearchPhrase ORDER BY COUNT(*) DESC LIMIT 10;","min":62.669,"max":66.292,"median":63.6445,"std_dev":1.1195538575700605,"read_row":99997397,"read_byte":3139579686,"time":[63.982,63.307,64.11,63.119,65.522,66.292,64.147,62.669,63.223,62.833],"error":[],"mean":63.91069950470779},{"name":"Q20","sql":"SELECT UserID FROM hits WHERE UserID = 435090932899640449;","min":0.979,"max":1.226,"median":1.095,"std_dev":0.07829489127650667,"read_row":566401,"read_byte":4531208,"time":[1.226,1.196,1.144,1.016,1.062,1.077,0.979,1.037,1.113,1.181],"error":[],"mean":1.1003195040375686},{"name":"Q21","sql":"SELECT COUNT(*) FROM hits WHERE URL LIKE '%google%';","min":2.156,"max":2.423,"median":2.349,"std_dev":0.07491868925708724,"read_row":99997397,"read_byte":9838815602,"time":[2.423,2.379,2.37,2.316,2.156,2.351,2.254,2.347,2.276,2.391],"error":[],"mean":2.3250671370767226},{"name":"Q22","sql":"SELECT SearchPhrase, MIN(URL), COUNT(*) AS c FROM hits WHERE URL LIKE '%google%' AND SearchPhrase \u003c\u003e '' GROUP BY SearchPhrase ORDER BY c DESC LIMIT 10;","min":3.158,"max":4.038,"median":3.2835,"std_dev":0.25689353826050204,"read_row":99997397,"read_byte":11378436936,"time":[4.038,3.301,3.392,3.448,3.158,3.596,3.166,3.261,3.163,3.266],"error":[],"mean":3.369801994535317},{"name":"Q23","sql":"SELECT SearchPhrase, MIN(URL), MIN(Title), COUNT(*) AS c, COUNT(DISTINCT UserID) FROM hits WHERE Title LIKE '%Google%' AND URL NOT LIKE '%.google.%' AND SearchPhrase \u003c\u003e '' GROUP BY SearchPhrase ORDER BY c DESC LIMIT 10;","min":4.974,"max":5.656,"median":5.087,"std_dev":0.19264913703414285,"read_row":99997397,"read_byte":22299176863,"time":[5.338,5.121,5.063,5.091,5.045,5.096,5.083,4.974,5.014,5.656],"error":[],"mean":5.1446455437116425},{"name":"Q24","sql":"SELECT * FROM hits WHERE URL LIKE '%google%' ORDER BY EventTime LIMIT 10;","min":8.555,"max":9.997,"median":8.846,"std_dev":0.4548765217067155,"read_row":99997397,"read_byte":73860950868,"time":[8.595,9.328,8.557,8.78,9.378,9.178,8.555,8.575,8.912,9.997],"error":[],"mean":8.974303981624585},{"name":"Q25","sql":"SELECT SearchPhrase FROM hits WHERE SearchPhrase \u003c\u003e '' ORDER BY EventTime LIMIT 10;","min":3.965,"max":5.495,"median":5.2145,"std_dev":0.4517147772654776,"read_row":99997397,"read_byte":2339600510,"time":[4.65,5.223,5.431,5.495,5.275,5.227,5.206,4.759,3.965,4.625],"error":[],"mean":4.963717127765777},{"name":"Q26","sql":"SELECT SearchPhrase FROM hits WHERE SearchPhrase \u003c\u003e '' ORDER BY SearchPhrase LIMIT 10;","min":4.467,"max":6.445,"median":5.4895,"std_dev":0.6396744484501473,"read_row":99997397,"read_byte":1539621334,"time":[6.445,5.467,4.716,6.136,5.278,4.467,6.235,5.185,5.512,6.179],"error":[],"mean":5.524244734435528},{"name":"Q27","sql":"SELECT SearchPhrase FROM hits WHERE SearchPhrase \u003c\u003e '' ORDER BY EventTime, SearchPhrase LIMIT 10;","min":3.703,"max":6.972,"median":5.322,"std_dev":0.9020352321278811,"read_row":99997397,"read_byte":2339600510,"time":[4.83,5.287,3.703,5.648,5.844,3.895,5.69,5.016,5.357,6.972],"error":[],"mean":5.143480917849634},{"name":"Q28","sql":"SELECT CounterID, AVG(length(URL)) AS l, COUNT(*) AS c FROM hits WHERE URL \u003c\u003e '' GROUP BY CounterID HAVING COUNT(*) \u003e 100000 ORDER BY l DESC LIMIT 25;","min":3.181,"max":3.911,"median":3.2515,"std_dev":0.22334612152441777,"read_row":99997397,"read_byte":10238805190,"time":[3.276,3.483,3.181,3.262,3.241,3.181,3.911,3.241,3.597,3.238],"error":[],"mean":3.3541090796086728},{"name":"Q30","sql":"SELECT SUM(ResolutionWidth), SUM(ResolutionWidth + 1), SUM(ResolutionWidth + 2), SUM(ResolutionWidth + 3), SUM(ResolutionWidth + 4), SUM(ResolutionWidth + 5), SUM(ResolutionWidth + 6), SUM(ResolutionWidth + 7), SUM(ResolutionWidth + 8), SUM(ResolutionWidth + 9), SUM(ResolutionWidth + 10), SUM(ResolutionWidth + 11), SUM(ResolutionWidth + 12), SUM(ResolutionWidth + 13), SUM(ResolutionWidth + 14), SUM(ResolutionWidth + 15), SUM(ResolutionWidth + 16), SUM(ResolutionWidth + 17), SUM(ResolutionWidth + 18), SUM(ResolutionWidth + 19), SUM(ResolutionWidth + 20), SUM(ResolutionWidth + 21), SUM(ResolutionWidth + 22), SUM(ResolutionWidth + 23), SUM(ResolutionWidth + 24), SUM(ResolutionWidth + 25), SUM(ResolutionWidth + 26), SUM(ResolutionWidth + 27), SUM(ResolutionWidth + 28), SUM(ResolutionWidth + 29), SUM(ResolutionWidth + 30), SUM(ResolutionWidth + 31), SUM(ResolutionWidth + 32), SUM(ResolutionWidth + 33), SUM(ResolutionWidth + 34), SUM(ResolutionWidth + 35), SUM(ResolutionWidth + 36), SUM(ResolutionWidth + 37), SUM(ResolutionWidth + 38), SUM(ResolutionWidth + 39), SUM(ResolutionWidth + 40), SUM(ResolutionWidth + 41), SUM(ResolutionWidth + 42), SUM(ResolutionWidth + 43), SUM(ResolutionWidth + 44), SUM(ResolutionWidth + 45), SUM(ResolutionWidth + 46), SUM(ResolutionWidth + 47), SUM(ResolutionWidth + 48), SUM(ResolutionWidth + 49), SUM(ResolutionWidth + 50), SUM(ResolutionWidth + 51), SUM(ResolutionWidth + 52), SUM(ResolutionWidth + 53), SUM(ResolutionWidth + 54), SUM(ResolutionWidth + 55), SUM(ResolutionWidth + 56), SUM(ResolutionWidth + 57), SUM(ResolutionWidth + 58), SUM(ResolutionWidth + 59), SUM(ResolutionWidth + 60), SUM(ResolutionWidth + 61), SUM(ResolutionWidth + 62), SUM(ResolutionWidth + 63), SUM(ResolutionWidth + 64), SUM(ResolutionWidth + 65), SUM(ResolutionWidth + 66), SUM(ResolutionWidth + 67), SUM(ResolutionWidth + 68), SUM(ResolutionWidth + 69), SUM(ResolutionWidth + 70), SUM(ResolutionWidth + 71), SUM(ResolutionWidth + 72), SUM(ResolutionWidth + 73), SUM(ResolutionWidth + 74), SUM(ResolutionWidth + 75), SUM(ResolutionWidth + 76), SUM(ResolutionWidth + 77), SUM(ResolutionWidth + 78), SUM(ResolutionWidth + 79), SUM(ResolutionWidth + 80), SUM(ResolutionWidth + 81), SUM(ResolutionWidth + 82), SUM(ResolutionWidth + 83), SUM(ResolutionWidth + 84), SUM(ResolutionWidth + 85), SUM(ResolutionWidth + 86), SUM(ResolutionWidth + 87), SUM(ResolutionWidth + 88), SUM(ResolutionWidth + 89) FROM hits;","min":1.706,"max":1.876,"median":1.7970000000000002,"std_dev":0.047419405310484435,"read_row":99997397,"read_byte":199994794,"time":[1.76,1.802,1.876,1.81,1.831,1.757,1.855,1.781,1.792,1.706],"error":[],"mean":1.7963724399629712},{"name":"Q31","sql":"SELECT SearchEngineID, ClientIP, COUNT(*) AS c, SUM(IsRefresh), AVG(ResolutionWidth) FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY SearchEngineID, ClientIP ORDER BY c DESC LIMIT 10;","min":4.277,"max":4.531,"median":4.408,"std_dev":0.08416553174960564,"read_row":99997397,"read_byte":2539595304,"time":[4.531,4.408,4.371,4.525,4.44,4.277,4.366],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":4.416054526304744},{"name":"Q32","sql":"SELECT WatchID, ClientIP, COUNT(*) AS c, SUM(IsRefresh), AVG(ResolutionWidth) FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY WatchID, ClientIP ORDER BY c DESC LIMIT 10;","min":7.017,"max":8.01,"median":7.4735,"std_dev":0.30132019410421196,"read_row":99997397,"read_byte":3139579686,"time":[7.644,7.715,8.01,7.393,7.169,7.281,7.554,7.017],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":7.466825250223138},{"name":"Q33","sql":"SELECT WatchID, ClientIP, COUNT(*) AS c, SUM(IsRefresh), AVG(ResolutionWidth) FROM hits GROUP BY WatchID, ClientIP ORDER BY c DESC LIMIT 10;","min":41.54,"max":44.089,"median":42.3535,"std_dev":0.7212574089740773,"read_row":99997397,"read_byte":1599958352,"time":[42.518,42.603,41.857,42.386,42.321,41.54,43.147,41.86,44.089,41.764],"error":[],"mean":42.40243644920941},{"name":"Q34","sql":"SELECT URL, COUNT(*) AS c FROM hits GROUP BY URL ORDER BY c DESC LIMIT 10;","min":12.675,"max":16.951,"median":13.983,"std_dev":1.4373895227112239,"read_row":99997397,"read_byte":9838815602,"time":[12.675,16.951,13.983,14.181,13.557],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":14.201127300988436},{"name":"Q35","sql":"SELECT 1, URL, COUNT(*) AS c FROM hits GROUP BY 1, URL ORDER BY c DESC LIMIT 10;","min":35.407,"max":42.622,"median":42.096,"std_dev":3.2842320597397237,"read_row":99997397,"read_byte":9838815602,"time":[35.407,42.622,42.096],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":39.90138116520197},{"name":"Q36","sql":"SELECT ClientIP, ClientIP - 1, ClientIP - 2, ClientIP - 3, COUNT(*) AS c FROM hits GROUP BY ClientIP, ClientIP - 1, ClientIP - 2, ClientIP - 3 ORDER BY c DESC LIMIT 10;","min":6.567,"max":6.779,"median":6.707,"std_dev":0.06340990716386993,"read_row":99997397,"read_byte":399989588,"time":[6.74,6.68,6.779,6.728,6.567,6.66,6.707],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":6.69412676925284},{"name":"Q37","sql":"SELECT URL, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND DontCountHits = 0 AND IsRefresh = 0 AND URL \u003c\u003e '' GROUP BY URL ORDER BY PageViews DESC LIMIT 10;","min":1.999,"max":2.228,"median":2.049,"std_dev":0.07788898431454241,"read_row":6062876,"read_byte":722255919,"time":[1.999,2.009,2.228,2.03,2.11,2.148,2.049],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":2.0804237670544237},{"name":"Q38","sql":"SELECT Title, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND DontCountHits = 0 AND IsRefresh = 0 AND Title \u003c\u003e '' GROUP BY Title ORDER BY PageViews DESC LIMIT 10;","min":1.927,"max":2.109,"median":2.007,"std_dev":0.05293023710508008,"read_row":6062876,"read_byte":775500336,"time":[2.054,1.994,1.992,2.068,2.034,2.017,1.927,2.109,1.997,1.941],"error":[],"mean":2.012604411590124},{"name":"Q39","sql":"SELECT URL, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND IsRefresh = 0 AND IsLink \u003c\u003e 0 AND IsDownload = 0 GROUP BY URL ORDER BY PageViews DESC LIMIT 10 OFFSET 1000;","min":1.826,"max":2.077,"median":1.929,"std_dev":0.07181705925474811,"read_row":6062876,"read_byte":734381671,"time":[2.077,1.826,1.867,1.937,1.942,1.921,2.023,1.88,1.982,1.894],"error":[],"mean":1.933581648547532},{"name":"Q40","sql":"SELECT TraficSourceID, SearchEngineID, AdvEngineID, CASE WHEN (SearchEngineID = 0 AND AdvEngineID = 0) THEN Referer ELSE '' END AS Src, URL AS Dst, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND IsRefresh = 0 GROUP BY TraficSourceID, SearchEngineID, AdvEngineID, Src, Dst ORDER BY PageViews DESC LIMIT 10 OFFSET 1000;","min":2.677,"max":2.927,"median":2.8,"std_dev":0.0814157884703262,"read_row":6062876,"read_byte":1302567053,"time":[2.76,2.8,2.726,2.677,2.927,2.818,2.888],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":2.798246915702157},{"name":"Q41","sql":"SELECT URLHash, EventDate, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND IsRefresh = 0 AND TraficSourceID IN (-1, 6) AND RefererHash = 3594120000172545465 GROUP BY URLHash, EventDate ORDER BY PageViews DESC LIMIT 10 OFFSET 100;","min":1.783,"max":2.118,"median":1.93,"std_dev":0.09713907555664714,"read_row":6062876,"read_byte":168753928,"time":[1.783,1.784,1.944,2.118,1.961,1.957,1.845,1.967,1.835,1.916],"error":[],"mean":1.9085648152506574},{"name":"Q42","sql":"SELECT WindowClientWidth, WindowClientHeight, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND IsRefresh = 0 AND DontCountHits = 0 AND URLHash = 2868770270353813622 GROUP BY WindowClientWidth, WindowClientHeight ORDER BY PageViews DESC LIMIT 10 OFFSET 10000;","min":1.699,"max":2.049,"median":1.86,"std_dev":0.096239492932995,"read_row":6062876,"read_byte":145509024,"time":[1.871,1.699,1.957,1.82,2.049,1.832,1.862,1.858,1.774,1.972],"error":[],"mean":1.86693102098475},{"name":"Q43","sql":"SELECT DATE_TRUNC('minute', EventTime) AS M, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-14' AND EventDate \u003c= '2013-07-15' AND IsRefresh = 0 AND DontCountHits = 0 GROUP BY DATE_TRUNC('minute', EventTime) ORDER BY DATE_TRUNC('minute', EventTime) LIMIT 10 OFFSET 1000;","min":1.793,"max":2.021,"median":1.9445000000000001,"std_dev":0.07695771566256368,"read_row":6062876,"read_byte":121257520,"time":[2.021,1.819,1.996,1.793,1.85,1.963,1.968,1.87,1.926,1.993],"error":[],"mean":1.9183427934064912}]}