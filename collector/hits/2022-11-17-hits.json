{"metadata":{"table":"hits","tag":"v0.8.115-nightly","size":"Large"},"schema":[{"name":"Q1","sql":"SELECT COUNT(*) FROM hits;","min":0.031,"max":0.034,"median":0.0325,"std_dev":0.0009165151389911689,"read_row":1,"read_byte":1,"time":[0.033,0.034,0.033,0.032,0.033,0.032,0.032,0.033,0.031,0.031],"error":[],"mean":0.03238700586434378},{"name":"Q2","sql":"SELECT COUNT(*) FROM hits WHERE AdvEngineID \u003c\u003e 0;","min":1.101,"max":1.402,"median":1.218,"std_dev":0.08216964159590817,"read_row":89494876,"read_byte":178989752,"time":[1.252,1.186,1.101,1.25,1.402,1.266,1.158,1.152,1.294,1.184],"error":[],"mean":1.2218039044235889},{"name":"Q3","sql":"SELECT SUM(AdvEngineID), COUNT(*), AVG(ResolutionWidth) FROM hits;","min":1.075,"max":1.323,"median":1.201,"std_dev":0.0669525204902698,"read_row":99997397,"read_byte":399989588,"time":[1.196,1.075,1.208,1.159,1.118,1.223,1.22,1.206,1.323,1.116],"error":[],"mean":1.1825212266235154},{"name":"Q4","sql":"SELECT AVG(UserID) FROM hits;","min":1.168,"max":1.374,"median":1.293,"std_dev":0.05910338399787278,"read_row":99997397,"read_byte":799979176,"time":[1.312,1.358,1.322,1.239,1.374,1.168,1.235,1.253,1.301,1.285],"error":[],"mean":1.2833243640834182},{"name":"Q5","sql":"SELECT COUNT(DISTINCT UserID) FROM hits;","min":4.681,"max":5.021,"median":4.804,"std_dev":0.09138949611415965,"read_row":99997397,"read_byte":799979176,"time":[4.76,4.681,5.021,4.934,4.774,4.791,4.781,4.817,4.875,4.83],"error":[],"mean":4.825541652590192},{"name":"Q6","sql":"SELECT COUNT(DISTINCT SearchPhrase) FROM hits;","min":3.077,"max":4.119,"median":3.221,"std_dev":0.2870307300621311,"read_row":99997397,"read_byte":1539621294,"time":[3.266,3.105,3.344,4.119,3.077,3.166,3.176,3.307,3.132,3.272],"error":[],"mean":3.2852800691262103},{"name":"Q7","sql":"SELECT MIN(EventDate), MAX(EventDate) FROM hits;","min":1.05,"max":1.304,"median":1.1555,"std_dev":0.07772136128504184,"read_row":99997397,"read_byte":399989588,"time":[1.162,1.126,1.107,1.304,1.149,1.238,1.252,1.05,1.173,1.066],"error":[],"mean":1.1601280431783831},{"name":"Q8","sql":"SELECT AdvEngineID, COUNT(*) FROM hits WHERE AdvEngineID \u003c\u003e 0 GROUP BY AdvEngineID ORDER BY COUNT(*) DESC;","min":1.794,"max":2.063,"median":1.968,"std_dev":0.09040027654824959,"read_row":89494876,"read_byte":178989752,"time":[2.056,2.063,1.926,1.98,1.81,1.794,2.031,2.02,1.917,1.956],"error":[],"mean":1.9531684846520265},{"name":"Q9","sql":"SELECT RegionID, COUNT(DISTINCT UserID) AS u FROM hits GROUP BY RegionID ORDER BY u DESC LIMIT 10;","min":2.567,"max":2.728,"median":2.6710000000000003,"std_dev":0.06840093201119408,"read_row":99997397,"read_byte":1199968764,"time":[2.62,2.567,2.722,2.728],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1068 Message:Cannot send flight data to endpoint, because sender is closed. Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":2.6583668444023782},{"name":"Q10","sql":"SELECT RegionID, SUM(AdvEngineID), COUNT(*) AS c, AVG(ResolutionWidth), COUNT(DISTINCT UserID) FROM hits GROUP BY RegionID ORDER BY c DESC LIMIT 10;","min":2.684,"max":4.031,"median":2.8445,"std_dev":0.5483310030345621,"read_row":99997397,"read_byte":1599958352,"time":[2.816,2.684,2.851,4.031,3.87,2.838],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":3.1375555397337274},{"name":"Q11","sql":"SELECT MobilePhoneModel, COUNT(DISTINCT UserID) AS u FROM hits WHERE MobilePhoneModel \u003c\u003e '' GROUP BY MobilePhoneModel ORDER BY u DESC LIMIT 10;","min":1.902,"max":2.445,"median":2.045,"std_dev":0.15392793768513885,"read_row":99997397,"read_byte":1623245000,"time":[2.001,1.902,2.041,2.169,2.077,2.445,2.049,2.292,2.022,1.979],"error":[],"mean":2.092309387107292},{"name":"Q12","sql":"SELECT MobilePhone, MobilePhoneModel, COUNT(DISTINCT UserID) AS u FROM hits WHERE MobilePhoneModel \u003c\u003e '' GROUP BY MobilePhone, MobilePhoneModel ORDER BY u DESC LIMIT 10;","min":1.992,"max":3.175,"median":2.129,"std_dev":0.3694945660967154,"read_row":99997397,"read_byte":1823239794,"time":[1.992,2.01,2.136,2.21,2.429,2.122,2.025,3.175],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":2.236673388545678},{"name":"Q13","sql":"SELECT SearchPhrase, COUNT(*) AS c FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY SearchPhrase ORDER BY c DESC LIMIT 10;","min":2.786,"max":3.334,"median":3.278,"std_dev":0.18813588469803175,"read_row":99997397,"read_byte":1539621294,"time":[3.278,3.278,2.923,2.786,3.288,3.319,3.023,3.223,3.334],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":3.155513946163319},{"name":"Q14","sql":"SELECT SearchPhrase, COUNT(DISTINCT UserID) AS u FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY SearchPhrase ORDER BY u DESC LIMIT 10;","min":3.265,"max":3.832,"median":3.423,"std_dev":0.21063660123012276,"read_row":99997397,"read_byte":2339600470,"time":[3.832,3.354,3.361,3.423,3.265,3.741,3.787,3.483,3.284],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":3.497112822444874},{"name":"Q15","sql":"SELECT SearchEngineID, SearchPhrase, COUNT(*) AS c FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY SearchEngineID, SearchPhrase ORDER BY c DESC LIMIT 10;","min":2.949,"max":3.956,"median":3.2475,"std_dev":0.2970925949935474,"read_row":99997397,"read_byte":1739616088,"time":[3.323,3.593,3.413,2.949,3.08,3.956,3.53,2.995,3.172,3.152],"error":[],"mean":3.3034645739218504},{"name":"Q16","sql":"SELECT UserID, COUNT(*) FROM hits GROUP BY UserID ORDER BY COUNT(*) DESC LIMIT 10;","min":3.261,"max":3.778,"median":3.548,"std_dev":0.1361308194348363,"read_row":99997397,"read_byte":799979176,"time":[3.778,3.541,3.459,3.338,3.552,3.608,3.261,3.56,3.579,3.544],"error":[],"mean":3.5193466553017365},{"name":"Q17","sql":"SELECT UserID, SearchPhrase, COUNT(*) FROM hits GROUP BY UserID, SearchPhrase ORDER BY COUNT(*) DESC LIMIT 10;","min":6.315,"max":10.274,"median":7.297499999999999,"std_dev":1.2787116172147648,"read_row":99997397,"read_byte":2339600470,"time":[8.068,6.315,7.843,6.752,6.399,6.684,6.373,9.144,8.218,10.274],"error":[],"mean":7.506177462336331},{"name":"Q18","sql":"SELECT UserID, SearchPhrase, COUNT(*) FROM hits GROUP BY UserID, SearchPhrase LIMIT 10;","min":3.042,"max":4.103,"median":3.238,"std_dev":0.28868326015091,"read_row":99997397,"read_byte":2339600470,"time":[3.18,3.313,4.103,3.167,3.042,3.357,3.289,3.232,3.238],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":3.3132778862975654},{"name":"Q19","sql":"SELECT UserID, extract(minute FROM EventTime) AS m, SearchPhrase, COUNT(*) FROM hits GROUP BY UserID, m, SearchPhrase ORDER BY COUNT(*) DESC LIMIT 10;","min":10.367,"max":27.005,"median":16.921999999999997,"std_dev":5.85228151749384,"read_row":99997397,"read_byte":3139579646,"time":[16.813,10.367,11.415,15.823,25.539,17.031,14.844,27.005,24.254,25.341],"error":[],"mean":17.898265011325876},{"name":"Q20","sql":"SELECT UserID FROM hits WHERE UserID = 435090932899640449;","min":1.095,"max":1.245,"median":1.169,"std_dev":0.04573138965743336,"read_row":465452,"read_byte":3723616,"time":[1.188,1.156,1.095,1.152,1.217,1.113,1.245,1.228,1.162,1.176],"error":[],"mean":1.1723054347511928},{"name":"Q21","sql":"SELECT COUNT(*) FROM hits WHERE URL LIKE '%google%';","min":2.634,"max":4.301,"median":2.7024999999999997,"std_dev":0.48921095654124513,"read_row":99997397,"read_byte":9838815562,"time":[2.679,2.706,2.634,4.301,2.782,2.684,2.699,3.212,2.691,2.72],"error":[],"mean":2.877455645428437},{"name":"Q22","sql":"SELECT SearchPhrase, MIN(URL), COUNT(*) AS c FROM hits WHERE URL LIKE '%google%' AND SearchPhrase \u003c\u003e '' GROUP BY SearchPhrase ORDER BY c DESC LIMIT 10;","min":3.307,"max":4.683,"median":3.624,"std_dev":0.36709568234998347,"read_row":99997397,"read_byte":11378436856,"time":[4.027,3.583,3.552,3.665,3.307,3.519,3.475,3.801,3.754,4.683],"error":[],"mean":3.7200604235351604},{"name":"Q23","sql":"SELECT SearchPhrase, MIN(URL), MIN(Title), COUNT(*) AS c, COUNT(DISTINCT UserID) FROM hits WHERE Title LIKE '%Google%' AND URL NOT LIKE '%.google.%' AND SearchPhrase \u003c\u003e '' GROUP BY SearchPhrase ORDER BY c DESC LIMIT 10;","min":5.448,"max":6.47,"median":5.5855,"std_dev":0.28390519544383114,"read_row":99997397,"read_byte":22239476895,"time":[5.496,5.557,5.614,5.775,6.47,5.508,5.767,5.448,5.705,5.512],"error":[],"mean":5.6785331284399945},{"name":"Q24","sql":"SELECT * FROM hits WHERE URL LIKE '%google%' ORDER BY EventTime LIMIT 10;","min":7.935,"max":8.583,"median":8.1135,"std_dev":0.1993976178393313,"read_row":99997397,"read_byte":71257048833,"time":[8.056,8.109,8.118,7.981,8.047,8.129,8.263,8.472,7.935,8.583],"error":[],"mean":8.166903018748481},{"name":"Q25","sql":"SELECT SearchPhrase FROM hits WHERE SearchPhrase \u003c\u003e '' ORDER BY EventTime LIMIT 10;","min":3.496,"max":4.748,"median":3.915,"std_dev":0.34742137239956905,"read_row":99997397,"read_byte":2339600470,"time":[3.496,3.772,3.989,3.841,4.141,4.285,4.316,4.748,3.742,3.777],"error":[],"mean":3.9960879886238407},{"name":"Q26","sql":"SELECT SearchPhrase FROM hits WHERE SearchPhrase \u003c\u003e '' ORDER BY SearchPhrase LIMIT 10;","min":2.778,"max":3.944,"median":3.614,"std_dev":0.3406376520586061,"read_row":99997397,"read_byte":1539621294,"time":[2.778,3.18,3.391,3.793,3.643,3.113,3.944,3.688,3.682,3.585],"error":[],"mean":3.462110338543155},{"name":"Q27","sql":"SELECT SearchPhrase FROM hits WHERE SearchPhrase \u003c\u003e '' ORDER BY EventTime, SearchPhrase LIMIT 10;","min":3.049,"max":4.505,"median":3.7264999999999997,"std_dev":0.4112175093548426,"read_row":99997397,"read_byte":2339600470,"time":[3.785,4.037,4.505,3.691,3.346,3.837,3.238,3.762,3.304,3.049],"error":[],"mean":3.632766055086818},{"name":"Q28","sql":"SELECT CounterID, AVG(length(URL)) AS l, COUNT(*) AS c FROM hits WHERE URL \u003c\u003e '' GROUP BY CounterID HAVING COUNT(*) \u003e 100000 ORDER BY l DESC LIMIT 25;","min":2.991,"max":3.401,"median":3.2415000000000003,"std_dev":0.12624911880880593,"read_row":99997397,"read_byte":10238805150,"time":[3.204,3.305,3.002,2.991,3.144,3.281,3.174,3.279,3.295,3.401],"error":[],"mean":3.205081098466199},{"name":"Q30","sql":"SELECT SUM(ResolutionWidth), SUM(ResolutionWidth + 1), SUM(ResolutionWidth + 2), SUM(ResolutionWidth + 3), SUM(ResolutionWidth + 4), SUM(ResolutionWidth + 5), SUM(ResolutionWidth + 6), SUM(ResolutionWidth + 7), SUM(ResolutionWidth + 8), SUM(ResolutionWidth + 9), SUM(ResolutionWidth + 10), SUM(ResolutionWidth + 11), SUM(ResolutionWidth + 12), SUM(ResolutionWidth + 13), SUM(ResolutionWidth + 14), SUM(ResolutionWidth + 15), SUM(ResolutionWidth + 16), SUM(ResolutionWidth + 17), SUM(ResolutionWidth + 18), SUM(ResolutionWidth + 19), SUM(ResolutionWidth + 20), SUM(ResolutionWidth + 21), SUM(ResolutionWidth + 22), SUM(ResolutionWidth + 23), SUM(ResolutionWidth + 24), SUM(ResolutionWidth + 25), SUM(ResolutionWidth + 26), SUM(ResolutionWidth + 27), SUM(ResolutionWidth + 28), SUM(ResolutionWidth + 29), SUM(ResolutionWidth + 30), SUM(ResolutionWidth + 31), SUM(ResolutionWidth + 32), SUM(ResolutionWidth + 33), SUM(ResolutionWidth + 34), SUM(ResolutionWidth + 35), SUM(ResolutionWidth + 36), SUM(ResolutionWidth + 37), SUM(ResolutionWidth + 38), SUM(ResolutionWidth + 39), SUM(ResolutionWidth + 40), SUM(ResolutionWidth + 41), SUM(ResolutionWidth + 42), SUM(ResolutionWidth + 43), SUM(ResolutionWidth + 44), SUM(ResolutionWidth + 45), SUM(ResolutionWidth + 46), SUM(ResolutionWidth + 47), SUM(ResolutionWidth + 48), SUM(ResolutionWidth + 49), SUM(ResolutionWidth + 50), SUM(ResolutionWidth + 51), SUM(ResolutionWidth + 52), SUM(ResolutionWidth + 53), SUM(ResolutionWidth + 54), SUM(ResolutionWidth + 55), SUM(ResolutionWidth + 56), SUM(ResolutionWidth + 57), SUM(ResolutionWidth + 58), SUM(ResolutionWidth + 59), SUM(ResolutionWidth + 60), SUM(ResolutionWidth + 61), SUM(ResolutionWidth + 62), SUM(ResolutionWidth + 63), SUM(ResolutionWidth + 64), SUM(ResolutionWidth + 65), SUM(ResolutionWidth + 66), SUM(ResolutionWidth + 67), SUM(ResolutionWidth + 68), SUM(ResolutionWidth + 69), SUM(ResolutionWidth + 70), SUM(ResolutionWidth + 71), SUM(ResolutionWidth + 72), SUM(ResolutionWidth + 73), SUM(ResolutionWidth + 74), SUM(ResolutionWidth + 75), SUM(ResolutionWidth + 76), SUM(ResolutionWidth + 77), SUM(ResolutionWidth + 78), SUM(ResolutionWidth + 79), SUM(ResolutionWidth + 80), SUM(ResolutionWidth + 81), SUM(ResolutionWidth + 82), SUM(ResolutionWidth + 83), SUM(ResolutionWidth + 84), SUM(ResolutionWidth + 85), SUM(ResolutionWidth + 86), SUM(ResolutionWidth + 87), SUM(ResolutionWidth + 88), SUM(ResolutionWidth + 89) FROM hits;","min":1.531,"max":1.687,"median":1.5805,"std_dev":0.04500099998888915,"read_row":99997397,"read_byte":199994794,"time":[1.597,1.57,1.543,1.531,1.629,1.687,1.595,1.591,1.548,1.548],"error":[],"mean":1.5832717514105603},{"name":"Q31","sql":"SELECT SearchEngineID, ClientIP, COUNT(*) AS c, SUM(IsRefresh), AVG(ResolutionWidth) FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY SearchEngineID, ClientIP ORDER BY c DESC LIMIT 10;","min":2.766,"max":3.254,"median":2.936,"std_dev":0.1728684181682704,"read_row":99997397,"read_byte":2539595264,"time":[3.195,2.921,3.254,2.951,3.251,2.885,2.766,2.881,2.791,2.996],"error":[],"mean":2.9841792373774383},{"name":"Q32","sql":"SELECT WatchID, ClientIP, COUNT(*) AS c, SUM(IsRefresh), AVG(ResolutionWidth) FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY WatchID, ClientIP ORDER BY c DESC LIMIT 10;","min":3.904,"max":5,"median":3.99,"std_dev":0.33945428245426984,"read_row":99997397,"read_byte":3139579646,"time":[4.023,4.104,3.99,3.904,5,3.952,4.443,3.96,3.928],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":4.132134462519977},{"name":"Q33","sql":"SELECT WatchID, ClientIP, COUNT(*) AS c, SUM(IsRefresh), AVG(ResolutionWidth) FROM hits GROUP BY WatchID, ClientIP ORDER BY c DESC LIMIT 10;","min":13.413,"max":17.866,"median":13.705,"std_dev":1.5564967876613172,"read_row":99997397,"read_byte":1599958352,"time":[14.637,13.641,17.866,13.413,13.75,13.66],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":14.418967255739167},{"name":"Q34","sql":"SELECT URL, COUNT(*) AS c FROM hits GROUP BY URL ORDER BY c DESC LIMIT 10;","min":9.055,"max":13.58,"median":11.9815,"std_dev":1.5888815161056604,"read_row":99997397,"read_byte":9838815562,"time":[11.529,13.58,10.203,12.434,9.055,13.052],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":11.52831796738467},{"name":"Q35","sql":"SELECT 1, URL, COUNT(*) AS c FROM hits GROUP BY 1, URL ORDER BY c DESC LIMIT 10;","min":16.421,"max":19.347,"median":18.207,"std_dev":0.9395037769688723,"read_row":99997397,"read_byte":9838815562,"time":[17.064,18.207,18.297,16.988,18.32,19.347,16.421],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","request got bad status: 500 req= resp={\"error\":{\"kind\":\"HealthCheckFailed\",\"message\":\"health check failed: backend instance maybe crashed: Get \\\"http://10.1.72.45:9000/health\\\": context deadline exceeded\"}}","request got bad status: 404 req= resp=query id not found 84bdad5e-9496-4f44-884b-cfdd50363668"],"mean":17.781507711341142},{"name":"Q36","sql":"SELECT ClientIP, ClientIP - 1, ClientIP - 2, ClientIP - 3, COUNT(*) AS c FROM hits GROUP BY ClientIP, ClientIP - 1, ClientIP - 2, ClientIP - 3 ORDER BY c DESC LIMIT 10;","min":3.812,"max":4.295,"median":3.9885,"std_dev":0.15499303210144635,"read_row":99997397,"read_byte":399989588,"time":[3.93,3.854,3.918,3.812,4.295,4.047,3.853,4.065,4.128,4.204],"error":[],"mean":4.007633434875258},{"name":"Q37","sql":"SELECT URL, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND DontCountHits = 0 AND IsRefresh = 0 AND URL \u003c\u003e '' GROUP BY URL ORDER BY PageViews DESC LIMIT 10;","min":2.02,"max":2.351,"median":2.211,"std_dev":0.09814048886955651,"read_row":5970260,"read_byte":667375008,"time":[2.28,2.179,2.02,2.211,2.251,2.351,2.166,2.08,2.28],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":2.19978208507046},{"name":"Q38","sql":"SELECT Title, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND DontCountHits = 0 AND IsRefresh = 0 AND Title \u003c\u003e '' GROUP BY Title ORDER BY PageViews DESC LIMIT 10;","min":1.851,"max":2.103,"median":1.957,"std_dev":0.0862837759952589,"read_row":5970260,"read_byte":749943771,"time":[1.886,2.007,1.987,1.927,1.851,2.103,2.051,2.063,1.873,1.881],"error":[],"mean":1.9610134823444152},{"name":"Q39","sql":"SELECT URL, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND IsRefresh = 0 AND IsLink \u003c\u003e 0 AND IsDownload = 0 GROUP BY URL ORDER BY PageViews DESC LIMIT 10 OFFSET 1000;","min":1.845,"max":2.954,"median":1.9489999999999998,"std_dev":0.3316736347676734,"read_row":5970260,"read_byte":679315528,"time":[1.92,2.26,1.865,1.978,1.905,2.007,1.845,1.852,2.954,2.364],"error":[],"mean":2.072264780684102},{"name":"Q40","sql":"SELECT TraficSourceID, SearchEngineID, AdvEngineID, CASE WHEN (SearchEngineID = 0 AND AdvEngineID = 0) THEN Referer ELSE '' END AS Src, URL AS Dst, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND IsRefresh = 0 GROUP BY TraficSourceID, SearchEngineID, AdvEngineID, Src, Dst ORDER BY PageViews DESC LIMIT 10 OFFSET 1000;","min":2.404,"max":2.909,"median":2.512,"std_dev":0.13771815421359665,"read_row":5970260,"read_byte":1238372247,"time":[2.476,2.511,2.513,2.629,2.909,2.639,2.621,2.485,2.452,2.404],"error":[],"mean":2.560360911214622},{"name":"Q41","sql":"SELECT URLHash, EventDate, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND IsRefresh = 0 AND TraficSourceID IN (-1, 6) AND RefererHash = 3594120000172545465 GROUP BY URLHash, EventDate ORDER BY PageViews DESC LIMIT 10 OFFSET 100;","min":1.843,"max":2.247,"median":1.96,"std_dev":0.11807747456648958,"read_row":5970260,"read_byte":167167280,"time":[2.247,1.895,2.003,2.127,2.12,1.928,1.843,1.938,1.957,1.963],"error":[],"mean":1.998708157349446},{"name":"Q42","sql":"SELECT WindowClientWidth, WindowClientHeight, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND IsRefresh = 0 AND DontCountHits = 0 AND URLHash = 2868770270353813622 GROUP BY WindowClientWidth, WindowClientHeight ORDER BY PageViews DESC LIMIT 10 OFFSET 10000;","min":1.846,"max":2.082,"median":1.98,"std_dev":0.059086377448613274,"read_row":5970260,"read_byte":143286240,"time":[2.009,1.957,2.082,1.846,1.934,1.998,2.008,1.964,1.996,1.936],"error":[],"mean":1.9721076691063855},{"name":"Q43","sql":"SELECT DATE_TRUNC('minute', EventTime) AS M, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-14' AND EventDate \u003c= '2013-07-15' AND IsRefresh = 0 AND DontCountHits = 0 GROUP BY DATE_TRUNC('minute', EventTime) ORDER BY DATE_TRUNC('minute', EventTime) LIMIT 10 OFFSET 1000;","min":1.656,"max":2.156,"median":1.9765000000000001,"std_dev":0.14023940245166483,"read_row":5970260,"read_byte":119405200,"time":[1.974,1.656,1.895,2.048,1.888,2.156,1.979,1.926,2.087,2.142],"error":[],"mean":1.9698998115143282}]}