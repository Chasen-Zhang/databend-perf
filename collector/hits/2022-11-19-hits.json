{"metadata":{"table":"hits","tag":"v0.8.118-nightly","size":"Large"},"schema":[{"name":"Q1","sql":"SELECT COUNT(*) FROM hits;","min":0.029,"max":0.034,"median":0.0315,"std_dev":0.0013453624047073717,"read_row":1,"read_byte":1,"time":[0.029,0.031,0.031,0.031,0.032,0.033,0.033,0.032,0.031,0.034],"error":[],"mean":0.031671246224989694},{"name":"Q2","sql":"SELECT COUNT(*) FROM hits WHERE AdvEngineID \u003c\u003e 0;","min":1.133,"max":1.314,"median":1.191,"std_dev":0.05574441676078421,"read_row":89494876,"read_byte":178989752,"time":[1.314,1.197,1.212,1.216,1.147,1.185,1.146,1.133,1.181,1.283],"error":[],"mean":1.200134321814438},{"name":"Q3","sql":"SELECT SUM(AdvEngineID), COUNT(*), AVG(ResolutionWidth) FROM hits;","min":1.18,"max":1.42,"median":1.3345,"std_dev":0.09356730198098054,"read_row":99997397,"read_byte":399989588,"time":[1.199,1.374,1.34,1.385,1.21,1.42,1.182,1.18,1.407,1.329],"error":[],"mean":1.299197799903005},{"name":"Q4","sql":"SELECT AVG(UserID) FROM hits;","min":1.171,"max":2.489,"median":1.3485,"std_dev":0.36150076071842496,"read_row":99997397,"read_byte":799979176,"time":[2.489,1.425,1.429,1.212,1.562,1.335,1.317,1.362,1.171,1.248],"error":[],"mean":1.421042696131373},{"name":"Q5","sql":"SELECT COUNT(DISTINCT UserID) FROM hits;","min":4.66,"max":5.009,"median":4.8325,"std_dev":0.09239350626532149,"read_row":99997397,"read_byte":799979176,"time":[4.66,4.804,4.892,4.827,4.857,4.833,4.885,4.832,5.009,4.703],"error":[],"mean":4.829314695726359},{"name":"Q6","sql":"SELECT COUNT(DISTINCT SearchPhrase) FROM hits;","min":3.092,"max":3.35,"median":3.1765,"std_dev":0.09009378446929622,"read_row":99997397,"read_byte":1539621294,"time":[3.092,3.327,3.208,3.145,3.245,3.117,3.35,3.117,3.132,3.286],"error":[],"mean":3.2006410578570725},{"name":"Q7","sql":"SELECT MIN(EventDate), MAX(EventDate) FROM hits;","min":1.11,"max":1.325,"median":1.173,"std_dev":0.06933830110407953,"read_row":99997397,"read_byte":399989588,"time":[1.151,1.116,1.121,1.195,1.256,1.248,1.216,1.132,1.11,1.325],"error":[],"mean":1.1850143567627418},{"name":"Q8","sql":"SELECT AdvEngineID, COUNT(*) FROM hits WHERE AdvEngineID \u003c\u003e 0 GROUP BY AdvEngineID ORDER BY COUNT(*) DESC;","min":1.964,"max":2.239,"median":2.1315,"std_dev":0.08283362843676473,"read_row":89494876,"read_byte":178989752,"time":[2.179,1.964,2.201,2.127,2.136,2.051,2.239,2.057,2.152,2.017],"error":[],"mean":2.110663357333437},{"name":"Q9","sql":"SELECT RegionID, COUNT(DISTINCT UserID) AS u FROM hits GROUP BY RegionID ORDER BY u DESC LIMIT 10;","min":2.814,"max":3.102,"median":2.9445,"std_dev":0.12557741636138234,"read_row":99997397,"read_byte":1199968764,"time":[2.814,3.102,3.048,2.841],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1068 Message:Cannot send flight data to endpoint, because sender is closed. Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":2.9485807150460133},{"name":"Q10","sql":"SELECT RegionID, SUM(AdvEngineID), COUNT(*) AS c, AVG(ResolutionWidth), COUNT(DISTINCT UserID) FROM hits GROUP BY RegionID ORDER BY c DESC LIMIT 10;","min":2.879,"max":3.098,"median":3.041,"std_dev":0.07118208263944577,"read_row":99997397,"read_byte":1599958352,"time":[2.879,3.05,3.032,3.075,3,3.098],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":3.021480169474061},{"name":"Q11","sql":"SELECT MobilePhoneModel, COUNT(DISTINCT UserID) AS u FROM hits WHERE MobilePhoneModel \u003c\u003e '' GROUP BY MobilePhoneModel ORDER BY u DESC LIMIT 10;","min":2.123,"max":2.373,"median":2.2585,"std_dev":0.08586157464197824,"read_row":99997397,"read_byte":1623245000,"time":[2.173,2.185,2.373,2.337,2.236,2.123,2.188,2.373,2.324,2.281],"error":[],"mean":2.2576654541882095},{"name":"Q12","sql":"SELECT MobilePhone, MobilePhoneModel, COUNT(DISTINCT UserID) AS u FROM hits WHERE MobilePhoneModel \u003c\u003e '' GROUP BY MobilePhone, MobilePhoneModel ORDER BY u DESC LIMIT 10;","min":2.18,"max":2.407,"median":2.2915,"std_dev":0.06341805736539081,"read_row":99997397,"read_byte":1823239794,"time":[2.339,2.326,2.305,2.18,2.369,2.265,2.278,2.234,2.407,2.262],"error":[],"mean":2.29562327950057},{"name":"Q13","sql":"SELECT SearchPhrase, COUNT(*) AS c FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY SearchPhrase ORDER BY c DESC LIMIT 10;","min":3.293,"max":3.735,"median":3.599,"std_dev":0.1477140213343521,"read_row":99997397,"read_byte":1539621294,"time":[3.637,3.599,3.312,3.604,3.541,3.293,3.711,3.735,3.526],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":3.547754271076188},{"name":"Q14","sql":"SELECT SearchPhrase, COUNT(DISTINCT UserID) AS u FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY SearchPhrase ORDER BY u DESC LIMIT 10;","min":3.206,"max":4.797,"median":3.904,"std_dev":0.3782689651557473,"read_row":99997397,"read_byte":2339600470,"time":[3.836,4.062,4.074,3.972,3.206,4.797,4.043,3.758,3.729,3.776],"error":[],"mean":3.90738936807678},{"name":"Q15","sql":"SELECT SearchEngineID, SearchPhrase, COUNT(*) AS c FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY SearchEngineID, SearchPhrase ORDER BY c DESC LIMIT 10;","min":3.284,"max":4.54,"median":3.8235,"std_dev":0.328172210889344,"read_row":99997397,"read_byte":1739616088,"time":[3.824,4.089,3.607,3.284,4.54,3.8,3.947,3.823,3.602,4.154],"error":[],"mean":3.85319098870825},{"name":"Q16","sql":"SELECT UserID, COUNT(*) FROM hits GROUP BY UserID ORDER BY COUNT(*) DESC LIMIT 10;","min":3.213,"max":3.952,"median":3.744,"std_dev":0.2182986967154278,"read_row":99997397,"read_byte":799979176,"time":[3.744,3.637,3.213,3.753,3.832,3.63,3.452,3.899,3.952],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":3.672392207507113},{"name":"Q17","sql":"SELECT UserID, SearchPhrase, COUNT(*) FROM hits GROUP BY UserID, SearchPhrase ORDER BY COUNT(*) DESC LIMIT 10;","min":6.107,"max":9.565,"median":6.8895,"std_dev":1.0267935332869988,"read_row":99997397,"read_byte":2339600470,"time":[7.86,6.578,7.569,6.107,6.112,9.565,6.28,6.509,7.757,7.201],"error":[],"mean":7.085674008235619},{"name":"Q18","sql":"SELECT UserID, SearchPhrase, COUNT(*) FROM hits GROUP BY UserID, SearchPhrase LIMIT 10;","min":2.989,"max":4.141,"median":3.279,"std_dev":0.30475272307597556,"read_row":99997397,"read_byte":2339600470,"time":[3.336,3.416,3.226,3.249,4.141,2.989,3.279,3.382,3.141],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":3.338337424473131},{"name":"Q19","sql":"SELECT UserID, extract(minute FROM EventTime) AS m, SearchPhrase, COUNT(*) FROM hits GROUP BY UserID, m, SearchPhrase ORDER BY COUNT(*) DESC LIMIT 10;","min":10.259,"max":18.834,"median":14.075,"std_dev":3.1367959748211747,"read_row":99997397,"read_byte":3139579646,"time":[14.075,16.157,10.291,18.834,10.706,10.259,16.634,13.896,17.984],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":13.959091328855465},{"name":"Q20","sql":"SELECT UserID FROM hits WHERE UserID = 435090932899640449;","min":1.102,"max":1.266,"median":1.1855,"std_dev":0.045195132481275005,"read_row":465452,"read_byte":3723616,"time":[1.196,1.19,1.149,1.228,1.15,1.133,1.102,1.181,1.195,1.266],"error":[],"mean":1.1781368468337536},{"name":"Q21","sql":"SELECT COUNT(*) FROM hits WHERE URL LIKE '%google%';","min":2.569,"max":2.79,"median":2.698,"std_dev":0.0597715651459789,"read_row":99997397,"read_byte":9838815562,"time":[2.72,2.753,2.672,2.683,2.677,2.569,2.79,2.776,2.698,2.698],"error":[],"mean":2.7029326683945167},{"name":"Q22","sql":"SELECT SearchPhrase, MIN(URL), COUNT(*) AS c FROM hits WHERE URL LIKE '%google%' AND SearchPhrase \u003c\u003e '' GROUP BY SearchPhrase ORDER BY c DESC LIMIT 10;","min":3.527,"max":3.871,"median":3.705,"std_dev":0.11737819218236409,"read_row":99997397,"read_byte":11378436856,"time":[3.789,3.748,3.662,3.856,3.856,3.871,3.527,3.64,3.578,3.647],"error":[],"mean":3.7155428070492604},{"name":"Q23","sql":"SELECT SearchPhrase, MIN(URL), MIN(Title), COUNT(*) AS c, COUNT(DISTINCT UserID) FROM hits WHERE Title LIKE '%Google%' AND URL NOT LIKE '%.google.%' AND SearchPhrase \u003c\u003e '' GROUP BY SearchPhrase ORDER BY c DESC LIMIT 10;","min":5.551,"max":6.098,"median":5.605,"std_dev":0.15493240461569033,"read_row":99997397,"read_byte":22239476895,"time":[5.6,5.61,6.098,5.763,5.584,5.551,5.596,5.693,5.562,5.648],"error":[],"mean":5.668456428382939},{"name":"Q24","sql":"SELECT * FROM hits WHERE URL LIKE '%google%' ORDER BY EventTime LIMIT 10;","min":7.759,"max":8.474,"median":7.943,"std_dev":0.1900988164087299,"read_row":99997397,"read_byte":71257048833,"time":[7.996,8.474,7.759,8.058,7.969,7.892,7.82,7.917,8.042,7.835],"error":[],"mean":7.973987730844179},{"name":"Q25","sql":"SELECT SearchPhrase FROM hits WHERE SearchPhrase \u003c\u003e '' ORDER BY EventTime LIMIT 10;","min":3.514,"max":4.864,"median":3.846,"std_dev":0.38422748470144613,"read_row":99997397,"read_byte":2339600470,"time":[3.986,4.022,3.654,4.864,3.514,3.966,3.58,3.726,3.525,4.095],"error":[],"mean":3.8756404872472126},{"name":"Q26","sql":"SELECT SearchPhrase FROM hits WHERE SearchPhrase \u003c\u003e '' ORDER BY SearchPhrase LIMIT 10;","min":3.101,"max":5.007,"median":3.8275,"std_dev":0.5365486837184488,"read_row":99997397,"read_byte":1539621294,"time":[4.251,5.007,3.894,3.101,3.794,3.224,3.826,3.329,3.829,4.236],"error":[],"mean":3.8129041221921707},{"name":"Q27","sql":"SELECT SearchPhrase FROM hits WHERE SearchPhrase \u003c\u003e '' ORDER BY EventTime, SearchPhrase LIMIT 10;","min":2.952,"max":4.511,"median":3.8165,"std_dev":0.4366617569698542,"read_row":99997397,"read_byte":2339600470,"time":[3.352,2.952,3.921,3.646,4.04,3.755,3.648,4.396,4.511,3.878],"error":[],"mean":3.784093268507023},{"name":"Q28","sql":"SELECT CounterID, AVG(length(URL)) AS l, COUNT(*) AS c FROM hits WHERE URL \u003c\u003e '' GROUP BY CounterID HAVING COUNT(*) \u003e 100000 ORDER BY l DESC LIMIT 25;","min":3.202,"max":4.235,"median":3.4335,"std_dev":0.2808355568655793,"read_row":99997397,"read_byte":10238805150,"time":[3.488,3.427,3.242,3.44,4.235,3.522,3.399,3.202,3.72,3.342],"error":[],"mean":3.4912638193690118},{"name":"Q30","sql":"SELECT SUM(ResolutionWidth), SUM(ResolutionWidth + 1), SUM(ResolutionWidth + 2), SUM(ResolutionWidth + 3), SUM(ResolutionWidth + 4), SUM(ResolutionWidth + 5), SUM(ResolutionWidth + 6), SUM(ResolutionWidth + 7), SUM(ResolutionWidth + 8), SUM(ResolutionWidth + 9), SUM(ResolutionWidth + 10), SUM(ResolutionWidth + 11), SUM(ResolutionWidth + 12), SUM(ResolutionWidth + 13), SUM(ResolutionWidth + 14), SUM(ResolutionWidth + 15), SUM(ResolutionWidth + 16), SUM(ResolutionWidth + 17), SUM(ResolutionWidth + 18), SUM(ResolutionWidth + 19), SUM(ResolutionWidth + 20), SUM(ResolutionWidth + 21), SUM(ResolutionWidth + 22), SUM(ResolutionWidth + 23), SUM(ResolutionWidth + 24), SUM(ResolutionWidth + 25), SUM(ResolutionWidth + 26), SUM(ResolutionWidth + 27), SUM(ResolutionWidth + 28), SUM(ResolutionWidth + 29), SUM(ResolutionWidth + 30), SUM(ResolutionWidth + 31), SUM(ResolutionWidth + 32), SUM(ResolutionWidth + 33), SUM(ResolutionWidth + 34), SUM(ResolutionWidth + 35), SUM(ResolutionWidth + 36), SUM(ResolutionWidth + 37), SUM(ResolutionWidth + 38), SUM(ResolutionWidth + 39), SUM(ResolutionWidth + 40), SUM(ResolutionWidth + 41), SUM(ResolutionWidth + 42), SUM(ResolutionWidth + 43), SUM(ResolutionWidth + 44), SUM(ResolutionWidth + 45), SUM(ResolutionWidth + 46), SUM(ResolutionWidth + 47), SUM(ResolutionWidth + 48), SUM(ResolutionWidth + 49), SUM(ResolutionWidth + 50), SUM(ResolutionWidth + 51), SUM(ResolutionWidth + 52), SUM(ResolutionWidth + 53), SUM(ResolutionWidth + 54), SUM(ResolutionWidth + 55), SUM(ResolutionWidth + 56), SUM(ResolutionWidth + 57), SUM(ResolutionWidth + 58), SUM(ResolutionWidth + 59), SUM(ResolutionWidth + 60), SUM(ResolutionWidth + 61), SUM(ResolutionWidth + 62), SUM(ResolutionWidth + 63), SUM(ResolutionWidth + 64), SUM(ResolutionWidth + 65), SUM(ResolutionWidth + 66), SUM(ResolutionWidth + 67), SUM(ResolutionWidth + 68), SUM(ResolutionWidth + 69), SUM(ResolutionWidth + 70), SUM(ResolutionWidth + 71), SUM(ResolutionWidth + 72), SUM(ResolutionWidth + 73), SUM(ResolutionWidth + 74), SUM(ResolutionWidth + 75), SUM(ResolutionWidth + 76), SUM(ResolutionWidth + 77), SUM(ResolutionWidth + 78), SUM(ResolutionWidth + 79), SUM(ResolutionWidth + 80), SUM(ResolutionWidth + 81), SUM(ResolutionWidth + 82), SUM(ResolutionWidth + 83), SUM(ResolutionWidth + 84), SUM(ResolutionWidth + 85), SUM(ResolutionWidth + 86), SUM(ResolutionWidth + 87), SUM(ResolutionWidth + 88), SUM(ResolutionWidth + 89) FROM hits;","min":1.499,"max":1.819,"median":1.665,"std_dev":0.09129096340821469,"read_row":99997397,"read_byte":199994794,"time":[1.556,1.499,1.819,1.74,1.639,1.62,1.732,1.706,1.592,1.691],"error":[],"mean":1.6568762497120106},{"name":"Q31","sql":"SELECT SearchEngineID, ClientIP, COUNT(*) AS c, SUM(IsRefresh), AVG(ResolutionWidth) FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY SearchEngineID, ClientIP ORDER BY c DESC LIMIT 10;","min":2.916,"max":3.258,"median":3.1395,"std_dev":0.10257173099836037,"read_row":99997397,"read_byte":2539595264,"time":[3.028,3.046,3.154,3.219,2.916,3.258,3.181,3.189,3.012,3.125],"error":[],"mean":3.111093197622299},{"name":"Q32","sql":"SELECT WatchID, ClientIP, COUNT(*) AS c, SUM(IsRefresh), AVG(ResolutionWidth) FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY WatchID, ClientIP ORDER BY c DESC LIMIT 10;","min":3.778,"max":5.276,"median":4.31,"std_dev":0.5787838036417611,"read_row":99997397,"read_byte":3139579646,"time":[5.204,3.915,4.31,4.595,4.028,5.276,3.798,5.069,3.778],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":4.404382543621759},{"name":"Q33","sql":"SELECT WatchID, ClientIP, COUNT(*) AS c, SUM(IsRefresh), AVG(ResolutionWidth) FROM hits GROUP BY WatchID, ClientIP ORDER BY c DESC LIMIT 10;","min":16.584,"max":22.104,"median":20.366,"std_dev":1.7492641622622351,"read_row":99997397,"read_byte":1599958352,"time":[20.201,17.528,18.381,20.531,22.104,20.662,20.592,16.584],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":19.4923607273414},{"name":"Q34","sql":"SELECT URL, COUNT(*) AS c FROM hits GROUP BY URL ORDER BY c DESC LIMIT 10;","min":11.225,"max":16.556,"median":14.935,"std_dev":1.7614818761486026,"read_row":99997397,"read_byte":9838815562,"time":[15.095,11.225,14.935,14.269,16.556],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":14.299298424778545},{"name":"Q35","sql":"SELECT 1, URL, COUNT(*) AS c FROM hits GROUP BY 1, URL ORDER BY c DESC LIMIT 10;","min":22.217,"max":24.95,"median":24.226,"std_dev":0.9961013201477048,"read_row":99997397,"read_byte":9838815562,"time":[22.217,23.887,24.95,24.226,24.907],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","request got bad status: 500 req= resp={\"error\":{\"kind\":\"InternalError\",\"message\":\"proxy upstream failed: EOF\"}}","request got bad status: 500 req= resp={\"error\":{\"kind\":\"InternalError\",\"message\":\"proxy upstream failed: EOF\"}}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":24.01619170747642},{"name":"Q36","sql":"SELECT ClientIP, ClientIP - 1, ClientIP - 2, ClientIP - 3, COUNT(*) AS c FROM hits GROUP BY ClientIP, ClientIP - 1, ClientIP - 2, ClientIP - 3 ORDER BY c DESC LIMIT 10;","min":3.879,"max":4.597,"median":4.33,"std_dev":0.2181844841775018,"read_row":99997397,"read_byte":399989588,"time":[4.353,4.33,4.053,4.541,4.225,4.597,4.32,4.487,3.879],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":4.303796422722478},{"name":"Q37","sql":"SELECT URL, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND DontCountHits = 0 AND IsRefresh = 0 AND URL \u003c\u003e '' GROUP BY URL ORDER BY PageViews DESC LIMIT 10;","min":2.281,"max":2.572,"median":2.384,"std_dev":0.08252272414311103,"read_row":5970260,"read_byte":667375008,"time":[2.281,2.431,2.387,2.333,2.524,2.381,2.572,2.356,2.417,2.368],"error":[],"mean":2.4036048666573424},{"name":"Q38","sql":"SELECT Title, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND DontCountHits = 0 AND IsRefresh = 0 AND Title \u003c\u003e '' GROUP BY Title ORDER BY PageViews DESC LIMIT 10;","min":2.045,"max":2.296,"median":2.17,"std_dev":0.07812944387361268,"read_row":5970260,"read_byte":749943771,"time":[2.247,2.045,2.251,2.256,2.145,2.149,2.191,2.109,2.098,2.296],"error":[],"mean":2.1772941274115056},{"name":"Q39","sql":"SELECT URL, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND IsRefresh = 0 AND IsLink \u003c\u003e 0 AND IsDownload = 0 GROUP BY URL ORDER BY PageViews DESC LIMIT 10 OFFSET 1000;","min":2.082,"max":2.283,"median":2.1505,"std_dev":0.07618720364995683,"read_row":5970260,"read_byte":679315528,"time":[2.269,2.283,2.082,2.137,2.1,2.1,2.164,2.108,2.267,2.231],"error":[],"mean":2.172772819343862},{"name":"Q40","sql":"SELECT TraficSourceID, SearchEngineID, AdvEngineID, CASE WHEN (SearchEngineID = 0 AND AdvEngineID = 0) THEN Referer ELSE '' END AS Src, URL AS Dst, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND IsRefresh = 0 GROUP BY TraficSourceID, SearchEngineID, AdvEngineID, Src, Dst ORDER BY PageViews DESC LIMIT 10 OFFSET 1000;","min":2.517,"max":2.863,"median":2.706,"std_dev":0.09753290043193977,"read_row":5970260,"read_byte":1238372247,"time":[2.517,2.745,2.64,2.706,2.781,2.642,2.797,2.863,2.669],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":2.704894843499631},{"name":"Q41","sql":"SELECT URLHash, EventDate, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND IsRefresh = 0 AND TraficSourceID IN (-1, 6) AND RefererHash = 3594120000172545465 GROUP BY URLHash, EventDate ORDER BY PageViews DESC LIMIT 10 OFFSET 100;","min":1.899,"max":2.276,"median":2.0705,"std_dev":0.11767259663999935,"read_row":5970260,"read_byte":167167280,"time":[1.965,2.193,1.899,2.062,1.953,2.207,2.079,1.99,2.112,2.276],"error":[],"mean":2.0702810771192657},{"name":"Q42","sql":"SELECT WindowClientWidth, WindowClientHeight, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND IsRefresh = 0 AND DontCountHits = 0 AND URLHash = 2868770270353813622 GROUP BY WindowClientWidth, WindowClientHeight ORDER BY PageViews DESC LIMIT 10 OFFSET 10000;","min":1.977,"max":2.274,"median":2.1855,"std_dev":0.09697633731998748,"read_row":5970260,"read_byte":143286240,"time":[2.123,2.006,2.174,2.225,1.977,2.083,2.198,2.26,2.274,2.197],"error":[],"mean":2.149474543944629},{"name":"Q43","sql":"SELECT DATE_TRUNC('minute', EventTime) AS M, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-14' AND EventDate \u003c= '2013-07-15' AND IsRefresh = 0 AND DontCountHits = 0 GROUP BY DATE_TRUNC('minute', EventTime) ORDER BY DATE_TRUNC('minute', EventTime) LIMIT 10 OFFSET 1000;","min":1.878,"max":2.216,"median":2.082,"std_dev":0.0887829375499595,"read_row":5970260,"read_byte":119405200,"time":[2.044,2.121,2.1,1.878,2.081,2.201,2.039,2.083,2.216,2.08],"error":[],"mean":2.0823648062552538}]}