{"metadata":{"table":"hits","tag":"v0.8.122-nightly","size":"Large"},"schema":[{"name":"Q1","sql":"SELECT COUNT(*) FROM hits;","min":0.03,"max":0.063,"median":0.032,"std_dev":0.009393614852653902,"read_row":1,"read_byte":1,"time":[0.034,0.063,0.032,0.031,0.031,0.033,0.032,0.037,0.03,0.031],"error":[],"mean":0.03450675674640526},{"name":"Q2","sql":"SELECT COUNT(*) FROM hits WHERE AdvEngineID \u003c\u003e 0;","min":1.107,"max":1.65,"median":1.2894999999999999,"std_dev":0.14198535135710302,"read_row":89494876,"read_byte":178989752,"time":[1.282,1.37,1.291,1.65,1.304,1.107,1.136,1.288,1.351,1.217],"error":[],"mean":1.2923150774581469},{"name":"Q3","sql":"SELECT SUM(AdvEngineID), COUNT(*), AVG(ResolutionWidth) FROM hits;","min":1.111,"max":1.297,"median":1.221,"std_dev":0.05889558557311404,"read_row":99997397,"read_byte":399989588,"time":[1.242,1.111,1.189,1.2,1.149,1.254,1.297,1.245,1.155,1.287],"error":[],"mean":1.2114587133702497},{"name":"Q4","sql":"SELECT AVG(UserID) FROM hits;","min":1.171,"max":1.464,"median":1.3275000000000001,"std_dev":0.07129936886116173,"read_row":99997397,"read_byte":799979176,"time":[1.298,1.339,1.278,1.329,1.365,1.326,1.464,1.268,1.171,1.342],"error":[],"mean":1.3160600381798797},{"name":"Q5","sql":"SELECT COUNT(DISTINCT UserID) FROM hits;","min":4.666,"max":4.914,"median":4.79,"std_dev":0.07327680396960554,"read_row":99997397,"read_byte":799979176,"time":[4.836,4.795,4.761,4.867,4.785,4.871,4.914,4.725,4.731,4.666],"error":[],"mean":4.794539655980721},{"name":"Q6","sql":"SELECT COUNT(DISTINCT SearchPhrase) FROM hits;","min":3.068,"max":3.391,"median":3.1494999999999997,"std_dev":0.1014844323036789,"read_row":99997397,"read_byte":1539621294,"time":[3.099,3.068,3.079,3.231,3.323,3.206,3.391,3.136,3.163,3.123],"error":[],"mean":3.180308469233194},{"name":"Q7","sql":"SELECT MIN(EventDate), MAX(EventDate) FROM hits;","min":1.16,"max":1.338,"median":1.2494999999999998,"std_dev":0.06275675262471762,"read_row":99997397,"read_byte":399989588,"time":[1.182,1.236,1.193,1.263,1.293,1.16,1.188,1.338,1.335,1.299],"error":[],"mean":1.2471248202996958},{"name":"Q8","sql":"SELECT AdvEngineID, COUNT(*) FROM hits WHERE AdvEngineID \u003c\u003e 0 GROUP BY AdvEngineID ORDER BY COUNT(*) DESC;","min":1.963,"max":2.283,"median":2.0605,"std_dev":0.09112738337075195,"read_row":89494876,"read_byte":178989752,"time":[2.009,2.085,2.283,2.103,2.009,1.982,1.963,2.157,2.103,2.036],"error":[],"mean":2.071048292362242},{"name":"Q9","sql":"SELECT RegionID, COUNT(DISTINCT UserID) AS u FROM hits GROUP BY RegionID ORDER BY u DESC LIMIT 10;","min":2.777,"max":2.988,"median":2.8825000000000003,"std_dev":0.10549999999999993,"read_row":99997397,"read_byte":1199968764,"time":[2.988,2.777],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":2.8805686938519623},{"name":"Q10","sql":"SELECT RegionID, SUM(AdvEngineID), COUNT(*) AS c, AVG(ResolutionWidth), COUNT(DISTINCT UserID) FROM hits GROUP BY RegionID ORDER BY c DESC LIMIT 10;","min":2.808,"max":3.311,"median":2.995,"std_dev":0.18004777143858242,"read_row":99997397,"read_byte":1599958352,"time":[3.311,2.835,2.995,3.036,2.808],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":2.991724433003716},{"name":"Q11","sql":"SELECT MobilePhoneModel, COUNT(DISTINCT UserID) AS u FROM hits WHERE MobilePhoneModel \u003c\u003e '' GROUP BY MobilePhoneModel ORDER BY u DESC LIMIT 10;","min":2.14,"max":2.359,"median":2.228,"std_dev":0.07060234668921916,"read_row":99997397,"read_byte":1623245000,"time":[2.281,2.228,2.14,2.183,2.146,2.359,2.282,2.167,2.27],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":2.227332819733149},{"name":"Q12","sql":"SELECT MobilePhone, MobilePhoneModel, COUNT(DISTINCT UserID) AS u FROM hits WHERE MobilePhoneModel \u003c\u003e '' GROUP BY MobilePhone, MobilePhoneModel ORDER BY u DESC LIMIT 10;","min":2.096,"max":2.509,"median":2.288,"std_dev":0.10858938401606139,"read_row":99997397,"read_byte":1823239794,"time":[2.247,2.336,2.288,2.264,2.403,2.314,2.096,2.509,2.233],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":2.296328498987274},{"name":"Q13","sql":"SELECT SearchPhrase, COUNT(*) AS c FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY SearchPhrase ORDER BY c DESC LIMIT 10;","min":3.488,"max":4.689,"median":3.621,"std_dev":0.42563306517802335,"read_row":99997397,"read_byte":1539621294,"time":[3.621,3.559,3.606,3.626,4.491,3.659,4.689,3.488,3.504],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":3.783008937532295},{"name":"Q14","sql":"SELECT SearchPhrase, COUNT(DISTINCT UserID) AS u FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY SearchPhrase ORDER BY u DESC LIMIT 10;","min":3.727,"max":5.219,"median":3.9215,"std_dev":0.56753255413236,"read_row":99997397,"read_byte":2339600470,"time":[5.219,5.195,3.845,3.759,3.891,4.022,3.789,3.727,3.952,4.741],"error":[],"mean":4.178511199168299},{"name":"Q15","sql":"SELECT SearchEngineID, SearchPhrase, COUNT(*) AS c FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY SearchEngineID, SearchPhrase ORDER BY c DESC LIMIT 10;","min":3.299,"max":3.735,"median":3.5324999999999998,"std_dev":0.15002749747962868,"read_row":99997397,"read_byte":1739616088,"time":[3.687,3.726,3.386,3.555,3.735,3.482,3.51,3.299],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":3.5443077061441213},{"name":"Q16","sql":"SELECT UserID, COUNT(*) FROM hits GROUP BY UserID ORDER BY COUNT(*) DESC LIMIT 10;","min":3.477,"max":4.045,"median":3.675,"std_dev":0.14856005519654333,"read_row":99997397,"read_byte":799979176,"time":[4.045,3.66,3.859,3.649,3.712,3.477,3.835,3.63,3.644,3.69],"error":[],"mean":3.7171814733053465},{"name":"Q17","sql":"SELECT UserID, SearchPhrase, COUNT(*) FROM hits GROUP BY UserID, SearchPhrase ORDER BY COUNT(*) DESC LIMIT 10;","min":6.34,"max":9.528,"median":7.505,"std_dev":1.1470352911674837,"read_row":99997397,"read_byte":2339600470,"time":[6.867,6.398,8.759,6.34,9.528,7.505,8.387],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":7.599047602589891},{"name":"Q18","sql":"SELECT UserID, SearchPhrase, COUNT(*) FROM hits GROUP BY UserID, SearchPhrase LIMIT 10;","min":3.122,"max":4.065,"median":3.384,"std_dev":0.3216858370798718,"read_row":99997397,"read_byte":2339600470,"time":[3.48,3.384,3.188,3.122,3.179,3.941,3.39,3.217,4.065],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":3.4264232559964234},{"name":"Q19","sql":"SELECT UserID, extract(minute FROM EventTime) AS m, SearchPhrase, COUNT(*) FROM hits GROUP BY UserID, m, SearchPhrase ORDER BY COUNT(*) DESC LIMIT 10;","min":10.026,"max":16.577,"median":11.778,"std_dev":2.286836734443454,"read_row":99997397,"read_byte":3139579646,"time":[12.454,10.598,10.026,16.577,15.027,10.927,11.102,14.717],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":12.480156160653546},{"name":"Q20","sql":"SELECT UserID FROM hits WHERE UserID = 435090932899640449;","min":1.109,"max":1.247,"median":1.192,"std_dev":0.040968280413021994,"read_row":465452,"read_byte":3723616,"time":[1.228,1.181,1.168,1.192,1.247,1.244,1.192,1.194,1.145,1.109],"error":[],"mean":1.1892883951623592},{"name":"Q21","sql":"SELECT COUNT(*) FROM hits WHERE URL LIKE '%google%';","min":2.622,"max":2.789,"median":2.7039999999999997,"std_dev":0.05119189388956036,"read_row":99997397,"read_byte":9838815562,"time":[2.701,2.789,2.703,2.675,2.705,2.622,2.778,2.765,2.675,2.76],"error":[],"mean":2.716816544485564},{"name":"Q22","sql":"SELECT SearchPhrase, MIN(URL), COUNT(*) AS c FROM hits WHERE URL LIKE '%google%' AND SearchPhrase \u003c\u003e '' GROUP BY SearchPhrase ORDER BY c DESC LIMIT 10;","min":3.644,"max":4.64,"median":3.7955,"std_dev":0.26922592742899026,"read_row":99997397,"read_byte":11378436856,"time":[3.81,3.85,3.843,3.668,3.644,3.74,4.64,3.801,3.774,3.79],"error":[],"mean":3.8475053669647443},{"name":"Q23","sql":"SELECT SearchPhrase, MIN(URL), MIN(Title), COUNT(*) AS c, COUNT(DISTINCT UserID) FROM hits WHERE Title LIKE '%Google%' AND URL NOT LIKE '%.google.%' AND SearchPhrase \u003c\u003e '' GROUP BY SearchPhrase ORDER BY c DESC LIMIT 10;","min":5.595,"max":5.845,"median":5.6955,"std_dev":0.0838883186146915,"read_row":99997397,"read_byte":22239476895,"time":[5.636,5.784,5.606,5.595,5.768,5.707,5.812,5.684,5.658,5.845],"error":[],"mean":5.708884690132658},{"name":"Q24","sql":"SELECT * FROM hits WHERE URL LIKE '%google%' ORDER BY EventTime LIMIT 10;","min":7.904,"max":8.39,"median":8.158000000000001,"std_dev":0.1478601027999104,"read_row":99997397,"read_byte":71257048833,"time":[8.014,8.194,8.17,8.146,8.39,8.32,7.973,8.279,7.904,8.097],"error":[],"mean":8.14735756036007},{"name":"Q25","sql":"SELECT SearchPhrase FROM hits WHERE SearchPhrase \u003c\u003e '' ORDER BY EventTime LIMIT 10;","min":3.252,"max":4.908,"median":4.3965,"std_dev":0.429618016381995,"read_row":99997397,"read_byte":2339600470,"time":[4.087,4.526,4.609,4.174,4.055,4.908,4.525,4.542,4.268,3.252],"error":[],"mean":4.2711167348460295},{"name":"Q26","sql":"SELECT SearchPhrase FROM hits WHERE SearchPhrase \u003c\u003e '' ORDER BY SearchPhrase LIMIT 10;","min":3.111,"max":4.583,"median":4.014,"std_dev":0.4208161593855445,"read_row":99997397,"read_byte":1539621294,"time":[3.696,4.583,3.111,4.275,3.914,3.961,4.067,4.328,3.48,4.299],"error":[],"mean":3.9478911753859127},{"name":"Q27","sql":"SELECT SearchPhrase FROM hits WHERE SearchPhrase \u003c\u003e '' ORDER BY EventTime, SearchPhrase LIMIT 10;","min":2.735,"max":5.827,"median":3.84,"std_dev":0.7614712141637398,"read_row":99997397,"read_byte":2339600470,"time":[3.93,3.384,5.827,4.272,3.789,3.891,3.653,3.896,3.396,2.735],"error":[],"mean":3.8103762675135133},{"name":"Q28","sql":"SELECT CounterID, AVG(length(URL)) AS l, COUNT(*) AS c FROM hits WHERE URL \u003c\u003e '' GROUP BY CounterID HAVING COUNT(*) \u003e 100000 ORDER BY l DESC LIMIT 25;","min":3.183,"max":3.376,"median":3.315,"std_dev":0.054120328897744145,"read_row":99997397,"read_byte":10238805150,"time":[3.233,3.311,3.348,3.325,3.183,3.376,3.302,3.319,3.269,3.331],"error":[],"mean":3.2992520373265966},{"name":"Q30","sql":"SELECT SUM(ResolutionWidth), SUM(ResolutionWidth + 1), SUM(ResolutionWidth + 2), SUM(ResolutionWidth + 3), SUM(ResolutionWidth + 4), SUM(ResolutionWidth + 5), SUM(ResolutionWidth + 6), SUM(ResolutionWidth + 7), SUM(ResolutionWidth + 8), SUM(ResolutionWidth + 9), SUM(ResolutionWidth + 10), SUM(ResolutionWidth + 11), SUM(ResolutionWidth + 12), SUM(ResolutionWidth + 13), SUM(ResolutionWidth + 14), SUM(ResolutionWidth + 15), SUM(ResolutionWidth + 16), SUM(ResolutionWidth + 17), SUM(ResolutionWidth + 18), SUM(ResolutionWidth + 19), SUM(ResolutionWidth + 20), SUM(ResolutionWidth + 21), SUM(ResolutionWidth + 22), SUM(ResolutionWidth + 23), SUM(ResolutionWidth + 24), SUM(ResolutionWidth + 25), SUM(ResolutionWidth + 26), SUM(ResolutionWidth + 27), SUM(ResolutionWidth + 28), SUM(ResolutionWidth + 29), SUM(ResolutionWidth + 30), SUM(ResolutionWidth + 31), SUM(ResolutionWidth + 32), SUM(ResolutionWidth + 33), SUM(ResolutionWidth + 34), SUM(ResolutionWidth + 35), SUM(ResolutionWidth + 36), SUM(ResolutionWidth + 37), SUM(ResolutionWidth + 38), SUM(ResolutionWidth + 39), SUM(ResolutionWidth + 40), SUM(ResolutionWidth + 41), SUM(ResolutionWidth + 42), SUM(ResolutionWidth + 43), SUM(ResolutionWidth + 44), SUM(ResolutionWidth + 45), SUM(ResolutionWidth + 46), SUM(ResolutionWidth + 47), SUM(ResolutionWidth + 48), SUM(ResolutionWidth + 49), SUM(ResolutionWidth + 50), SUM(ResolutionWidth + 51), SUM(ResolutionWidth + 52), SUM(ResolutionWidth + 53), SUM(ResolutionWidth + 54), SUM(ResolutionWidth + 55), SUM(ResolutionWidth + 56), SUM(ResolutionWidth + 57), SUM(ResolutionWidth + 58), SUM(ResolutionWidth + 59), SUM(ResolutionWidth + 60), SUM(ResolutionWidth + 61), SUM(ResolutionWidth + 62), SUM(ResolutionWidth + 63), SUM(ResolutionWidth + 64), SUM(ResolutionWidth + 65), SUM(ResolutionWidth + 66), SUM(ResolutionWidth + 67), SUM(ResolutionWidth + 68), SUM(ResolutionWidth + 69), SUM(ResolutionWidth + 70), SUM(ResolutionWidth + 71), SUM(ResolutionWidth + 72), SUM(ResolutionWidth + 73), SUM(ResolutionWidth + 74), SUM(ResolutionWidth + 75), SUM(ResolutionWidth + 76), SUM(ResolutionWidth + 77), SUM(ResolutionWidth + 78), SUM(ResolutionWidth + 79), SUM(ResolutionWidth + 80), SUM(ResolutionWidth + 81), SUM(ResolutionWidth + 82), SUM(ResolutionWidth + 83), SUM(ResolutionWidth + 84), SUM(ResolutionWidth + 85), SUM(ResolutionWidth + 86), SUM(ResolutionWidth + 87), SUM(ResolutionWidth + 88), SUM(ResolutionWidth + 89) FROM hits;","min":1.558,"max":1.717,"median":1.6295,"std_dev":0.05227198102234123,"read_row":99997397,"read_byte":199994794,"time":[1.636,1.612,1.683,1.558,1.68,1.623,1.559,1.717,1.693,1.611],"error":[],"mean":1.6363630399466251},{"name":"Q31","sql":"SELECT SearchEngineID, ClientIP, COUNT(*) AS c, SUM(IsRefresh), AVG(ResolutionWidth) FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY SearchEngineID, ClientIP ORDER BY c DESC LIMIT 10;","min":3.19,"max":4.72,"median":3.378,"std_dev":0.4372906483234132,"read_row":99997397,"read_byte":2539595264,"time":[3.378,3.471,3.19,4.72,3.412,3.334,3.288,3.33,3.392],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":3.4786115794307477},{"name":"Q32","sql":"SELECT WatchID, ClientIP, COUNT(*) AS c, SUM(IsRefresh), AVG(ResolutionWidth) FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY WatchID, ClientIP ORDER BY c DESC LIMIT 10;","min":3.884,"max":5.31,"median":4.426,"std_dev":0.3917331228096148,"read_row":99997397,"read_byte":3139579646,"time":[4.43,4.486,3.975,4.426,5.31,4.129,4.238,4.468,3.884],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":4.355234929935324},{"name":"Q33","sql":"SELECT WatchID, ClientIP, COUNT(*) AS c, SUM(IsRefresh), AVG(ResolutionWidth) FROM hits GROUP BY WatchID, ClientIP ORDER BY c DESC LIMIT 10;","min":13.548,"max":24.53,"median":19.354,"std_dev":3.160766698516197,"read_row":99997397,"read_byte":1599958352,"time":[24.53,21.437,19.169,19.354,13.548,21.156,17.879],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":19.306238832054216},{"name":"Q34","sql":"SELECT URL, COUNT(*) AS c FROM hits GROUP BY URL ORDER BY c DESC LIMIT 10;","min":7.879,"max":16.329,"median":13.185,"std_dev":3.3672842704506984,"read_row":99997397,"read_byte":9838815562,"time":[16.329,8.14,7.879,13.185,9.135,14.084,15.445,8.556,15.71],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":11.560544684049828},{"name":"Q35","sql":"SELECT 1, URL, COUNT(*) AS c FROM hits GROUP BY 1, URL ORDER BY c DESC LIMIT 10;","min":15.657,"max":27.193,"median":20.156,"std_dev":4.637607038117827,"read_row":99997397,"read_byte":9838815562,"time":[25.583,20.156,27.193,16.649,15.657],"error":["request got bad status: 500 req= resp={\"error\":{\"kind\":\"InternalError\",\"message\":\"proxy upstream failed: EOF\"}}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","request got bad status: 404 req= resp=query id not found 828563a0-057d-43a0-94c9-95c0cfafcf5e","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":20.53912460322456},{"name":"Q36","sql":"SELECT ClientIP, ClientIP - 1, ClientIP - 2, ClientIP - 3, COUNT(*) AS c FROM hits GROUP BY ClientIP, ClientIP - 1, ClientIP - 2, ClientIP - 3 ORDER BY c DESC LIMIT 10;","min":3.842,"max":4.661,"median":3.981,"std_dev":0.2717422247916098,"read_row":99997397,"read_byte":399989588,"time":[3.926,3.842,4.359,3.981,4.006,4.661,3.975],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":4.098552993033603},{"name":"Q37","sql":"SELECT URL, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND DontCountHits = 0 AND IsRefresh = 0 AND URL \u003c\u003e '' GROUP BY URL ORDER BY PageViews DESC LIMIT 10;","min":2.312,"max":2.491,"median":2.4524999999999997,"std_dev":0.06179350694045453,"read_row":5970260,"read_byte":667375008,"time":[2.312,2.46,2.438,2.476,2.471,2.491,2.445,2.341],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":2.428450489135737},{"name":"Q38","sql":"SELECT Title, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND DontCountHits = 0 AND IsRefresh = 0 AND Title \u003c\u003e '' GROUP BY Title ORDER BY PageViews DESC LIMIT 10;","min":1.984,"max":2.249,"median":2.109,"std_dev":0.08148674738876258,"read_row":5970260,"read_byte":749943771,"time":[2.033,2.046,2.071,2.249,2.116,2.19,2.165,1.984,2.102,2.213],"error":[],"mean":2.1153323125377224},{"name":"Q39","sql":"SELECT URL, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND IsRefresh = 0 AND IsLink \u003c\u003e 0 AND IsDownload = 0 GROUP BY URL ORDER BY PageViews DESC LIMIT 10 OFFSET 1000;","min":1.859,"max":2.259,"median":2.125,"std_dev":0.102546379750823,"read_row":5970260,"read_byte":679315528,"time":[2.182,2.126,2.124,2.197,2.044,2.259,2.101,1.859,2.074,2.142],"error":[],"mean":2.108207412019569},{"name":"Q40","sql":"SELECT TraficSourceID, SearchEngineID, AdvEngineID, CASE WHEN (SearchEngineID = 0 AND AdvEngineID = 0) THEN Referer ELSE '' END AS Src, URL AS Dst, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND IsRefresh = 0 GROUP BY TraficSourceID, SearchEngineID, AdvEngineID, Src, Dst ORDER BY PageViews DESC LIMIT 10 OFFSET 1000;","min":2.637,"max":2.888,"median":2.774,"std_dev":0.0850670911692647,"read_row":5970260,"read_byte":1238372247,"time":[2.762,2.864,2.884,2.888,2.771,2.685,2.81,2.669,2.777,2.637],"error":[],"mean":2.773390893408517},{"name":"Q41","sql":"SELECT URLHash, EventDate, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND IsRefresh = 0 AND TraficSourceID IN (-1, 6) AND RefererHash = 3594120000172545465 GROUP BY URLHash, EventDate ORDER BY PageViews DESC LIMIT 10 OFFSET 100;","min":1.97,"max":2.147,"median":2.0675,"std_dev":0.05469405817819696,"read_row":5970260,"read_byte":167167280,"time":[1.97,2.096,2.079,2.147,2.055,2.109,2.114,1.993,2.056,2.007],"error":[],"mean":2.0618711448138094},{"name":"Q42","sql":"SELECT WindowClientWidth, WindowClientHeight, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND IsRefresh = 0 AND DontCountHits = 0 AND URLHash = 2868770270353813622 GROUP BY WindowClientWidth, WindowClientHeight ORDER BY PageViews DESC LIMIT 10 OFFSET 10000;","min":2.014,"max":2.311,"median":2.1325,"std_dev":0.07460321708880928,"read_row":5970260,"read_byte":143286240,"time":[2.311,2.054,2.185,2.134,2.153,2.131,2.128,2.014,2.151,2.115],"error":[],"mean":2.136316325142198},{"name":"Q43","sql":"SELECT DATE_TRUNC('minute', EventTime) AS M, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-14' AND EventDate \u003c= '2013-07-15' AND IsRefresh = 0 AND DontCountHits = 0 GROUP BY DATE_TRUNC('minute', EventTime) ORDER BY DATE_TRUNC('minute', EventTime) LIMIT 10 OFFSET 1000;","min":1.993,"max":2.197,"median":2.1215,"std_dev":0.06880959235455472,"read_row":5970260,"read_byte":119405200,"time":[2.03,2.114,2.175,2.197,2.047,2.02,2.166,1.993,2.129,2.137],"error":[],"mean":2.0996676091816533}]}