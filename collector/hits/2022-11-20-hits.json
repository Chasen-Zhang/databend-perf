{"metadata":{"table":"hits","tag":"v0.8.119-nightly","size":"Large"},"schema":[{"name":"Q1","sql":"SELECT COUNT(*) FROM hits;","min":0.023,"max":0.028,"median":0.024,"std_dev":0.0016613247725836154,"read_row":1,"read_byte":1,"time":[0.024,0.028,0.028,0.024,0.025,0.024,0.023,0.024,0.024,0.024],"error":[],"mean":0.024747146868358248},{"name":"Q2","sql":"SELECT COUNT(*) FROM hits WHERE AdvEngineID \u003c\u003e 0;","min":0.965,"max":1.258,"median":1.1535,"std_dev":0.08518121858719799,"read_row":89494876,"read_byte":178989752,"time":[1.164,1.178,1.103,1.238,1.258,1.045,0.965,1.143,1.195,1.085],"error":[],"mean":1.1341128067742328},{"name":"Q3","sql":"SELECT SUM(AdvEngineID), COUNT(*), AVG(ResolutionWidth) FROM hits;","min":1.036,"max":1.242,"median":1.121,"std_dev":0.055315097396642074,"read_row":99997397,"read_byte":399989588,"time":[1.083,1.194,1.137,1.242,1.091,1.104,1.119,1.036,1.123,1.153],"error":[],"mean":1.1268620608933146},{"name":"Q4","sql":"SELECT AVG(UserID) FROM hits;","min":1.015,"max":1.281,"median":1.1235,"std_dev":0.08401880741833939,"read_row":99997397,"read_byte":799979176,"time":[1.11,1.027,1.281,1.178,1.245,1.015,1.185,1.087,1.137,1.073],"error":[],"mean":1.1307149432464967},{"name":"Q5","sql":"SELECT COUNT(DISTINCT UserID) FROM hits;","min":4.532,"max":4.791,"median":4.7010000000000005,"std_dev":0.06965120243039603,"read_row":99997397,"read_byte":799979176,"time":[4.662,4.71,4.639,4.735,4.741,4.692,4.791,4.744,4.645,4.532],"error":[],"mean":4.688578548042397},{"name":"Q6","sql":"SELECT COUNT(DISTINCT SearchPhrase) FROM hits;","min":2.937,"max":3.189,"median":3.121,"std_dev":0.08911767501455595,"read_row":99997397,"read_byte":1539621294,"time":[2.937,3.111,3.189,3.149,2.993,2.986,3.168,3.148,2.98,3.131],"error":[],"mean":3.0779012967305817},{"name":"Q7","sql":"SELECT MIN(EventDate), MAX(EventDate) FROM hits;","min":1.011,"max":1.227,"median":1.1175000000000002,"std_dev":0.0610127855453265,"read_row":99997397,"read_byte":399989588,"time":[1.088,1.227,1.121,1.011,1.08,1.147,1.114,1.124,1.026,1.17],"error":[],"mean":1.109124279554274},{"name":"Q8","sql":"SELECT AdvEngineID, COUNT(*) FROM hits WHERE AdvEngineID \u003c\u003e 0 GROUP BY AdvEngineID ORDER BY COUNT(*) DESC;","min":1.769,"max":2.391,"median":1.9369999999999998,"std_dev":0.1646977838345131,"read_row":89494876,"read_byte":178989752,"time":[2.391,2.05,1.938,1.936,1.818,1.915,1.769,2.026,2.013,1.852],"error":[],"mean":1.9643583854898763},{"name":"Q9","sql":"SELECT RegionID, COUNT(DISTINCT UserID) AS u FROM hits GROUP BY RegionID ORDER BY u DESC LIMIT 10;","min":2.415,"max":2.72,"median":2.5919999999999996,"std_dev":0.11436208943526699,"read_row":99997397,"read_byte":1199968764,"time":[2.415,2.541,2.643,2.72],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1068 Message:Cannot send flight data to endpoint, because sender is closed. Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":2.5771931409480344},{"name":"Q10","sql":"SELECT RegionID, SUM(AdvEngineID), COUNT(*) AS c, AVG(ResolutionWidth), COUNT(DISTINCT UserID) FROM hits GROUP BY RegionID ORDER BY c DESC LIMIT 10;","min":2.522,"max":2.787,"median":2.6755,"std_dev":0.08773539764542024,"read_row":99997397,"read_byte":1599958352,"time":[2.696,2.714,2.787,2.655,2.565,2.777,2.644,2.522],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":2.6685486571391333},{"name":"Q11","sql":"SELECT MobilePhoneModel, COUNT(DISTINCT UserID) AS u FROM hits WHERE MobilePhoneModel \u003c\u003e '' GROUP BY MobilePhoneModel ORDER BY u DESC LIMIT 10;","min":1.96,"max":2.492,"median":2.106,"std_dev":0.1455828286577782,"read_row":99997397,"read_byte":1623245000,"time":[2.009,2.136,2.125,1.96,2.087,2.492,2.004,2.027,2.23,2.128],"error":[],"mean":2.115092976223499},{"name":"Q12","sql":"SELECT MobilePhone, MobilePhoneModel, COUNT(DISTINCT UserID) AS u FROM hits WHERE MobilePhoneModel \u003c\u003e '' GROUP BY MobilePhone, MobilePhoneModel ORDER BY u DESC LIMIT 10;","min":1.95,"max":2.237,"median":2.113,"std_dev":0.0995498510270416,"read_row":99997397,"read_byte":1823239794,"time":[1.991,1.95,2.236,2.056,2.167,2.113,2.218,2.096,2.237],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":2.1158576388190267},{"name":"Q13","sql":"SELECT SearchPhrase, COUNT(*) AS c FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY SearchPhrase ORDER BY c DESC LIMIT 10;","min":2.85,"max":3.576,"median":3.2185,"std_dev":0.210079532558505,"read_row":99997397,"read_byte":1539621294,"time":[3.576,3.538,3.336,3.205,3.299,2.982,3.205,3.232,2.85,3.164],"error":[],"mean":3.2318262863284897},{"name":"Q14","sql":"SELECT SearchPhrase, COUNT(DISTINCT UserID) AS u FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY SearchPhrase ORDER BY u DESC LIMIT 10;","min":3.116,"max":3.933,"median":3.5004999999999997,"std_dev":0.2773807671775388,"read_row":99997397,"read_byte":2339600470,"time":[3.197,3.116,3.548,3.164,3.453,3.453,3.669,3.933,3.836,3.79],"error":[],"mean":3.504889089299119},{"name":"Q15","sql":"SELECT SearchEngineID, SearchPhrase, COUNT(*) AS c FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY SearchEngineID, SearchPhrase ORDER BY c DESC LIMIT 10;","min":2.975,"max":3.686,"median":3.3505000000000003,"std_dev":0.19556492528058297,"read_row":99997397,"read_byte":1739616088,"time":[3.399,3.13,3.686,3.218,3.174,3.374,3.529,2.975,3.327,3.414],"error":[],"mean":3.316838928653448},{"name":"Q16","sql":"SELECT UserID, COUNT(*) FROM hits GROUP BY UserID ORDER BY COUNT(*) DESC LIMIT 10;","min":3.168,"max":4.21,"median":3.4450000000000003,"std_dev":0.2962794120420789,"read_row":99997397,"read_byte":799979176,"time":[3.231,4.21,3.64,3.714,3.687,3.272,3.358,3.357,3.532,3.168],"error":[],"mean":3.5050052033831327},{"name":"Q17","sql":"SELECT UserID, SearchPhrase, COUNT(*) FROM hits GROUP BY UserID, SearchPhrase ORDER BY COUNT(*) DESC LIMIT 10;","min":5.992,"max":7.131,"median":6.556,"std_dev":0.3245384566989608,"read_row":99997397,"read_byte":2339600470,"time":[6.226,6.317,7.131,6.556,6.706,6.294,6.7,6.741,5.992],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":6.510069452702461},{"name":"Q18","sql":"SELECT UserID, SearchPhrase, COUNT(*) FROM hits GROUP BY UserID, SearchPhrase LIMIT 10;","min":2.792,"max":3.175,"median":3.003,"std_dev":0.0949197555833347,"read_row":99997397,"read_byte":2339600470,"time":[2.792,3.009,2.974,2.994,3.021,3.175,2.997,2.994,3.041,3.121],"error":[],"mean":3.0102831971437514},{"name":"Q19","sql":"SELECT UserID, extract(minute FROM EventTime) AS m, SearchPhrase, COUNT(*) FROM hits GROUP BY UserID, m, SearchPhrase ORDER BY COUNT(*) DESC LIMIT 10;","min":9.979,"max":20.78,"median":12.039,"std_dev":3.6161516001215612,"read_row":99997397,"read_byte":3139579646,"time":[12.039,12.649,20.78,18.272,10.049,12.156,10.117,11.762,9.979],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":12.66553457133091},{"name":"Q20","sql":"SELECT UserID FROM hits WHERE UserID = 435090932899640449;","min":0.971,"max":1.208,"median":1.069,"std_dev":0.0642919123996168,"read_row":465452,"read_byte":3723616,"time":[1.102,0.971,1.05,1.075,1.208,1.046,0.987,1.12,1.103,1.063],"error":[],"mean":1.0705923009750546},{"name":"Q21","sql":"SELECT COUNT(*) FROM hits WHERE URL LIKE '%google%';","min":2.353,"max":2.942,"median":2.46,"std_dev":0.1655472440120946,"read_row":99997397,"read_byte":9838815562,"time":[2.942,2.511,2.357,2.441,2.353,2.52,2.369,2.479,2.371,2.518],"error":[],"mean":2.481000248801281},{"name":"Q22","sql":"SELECT SearchPhrase, MIN(URL), COUNT(*) AS c FROM hits WHERE URL LIKE '%google%' AND SearchPhrase \u003c\u003e '' GROUP BY SearchPhrase ORDER BY c DESC LIMIT 10;","min":3.019,"max":4.401,"median":3.3565,"std_dev":0.348644933994458,"read_row":99997397,"read_byte":11378436856,"time":[3.36,4.401,3.019,3.388,3.353,3.471,3.314,3.194,3.453,3.288],"error":[],"mean":3.408318038633284},{"name":"Q23","sql":"SELECT SearchPhrase, MIN(URL), MIN(Title), COUNT(*) AS c, COUNT(DISTINCT UserID) FROM hits WHERE Title LIKE '%Google%' AND URL NOT LIKE '%.google.%' AND SearchPhrase \u003c\u003e '' GROUP BY SearchPhrase ORDER BY c DESC LIMIT 10;","min":4.784,"max":5.078,"median":4.8465,"std_dev":0.09157996505786634,"read_row":99997397,"read_byte":22239476895,"time":[4.911,4.963,4.784,4.811,4.796,5.078,4.929,4.801,4.794,4.882],"error":[],"mean":4.874049031078527},{"name":"Q24","sql":"SELECT * FROM hits WHERE URL LIKE '%google%' ORDER BY EventTime LIMIT 10;","min":6.732,"max":7.4,"median":6.9025,"std_dev":0.1681389009123112,"read_row":99997397,"read_byte":71257048833,"time":[7.005,6.873,7.4,6.873,6.965,6.906,6.732,6.851,6.899,7.007],"error":[],"mean":6.949117545731699},{"name":"Q25","sql":"SELECT SearchPhrase FROM hits WHERE SearchPhrase \u003c\u003e '' ORDER BY EventTime LIMIT 10;","min":3.02,"max":4.471,"median":3.649,"std_dev":0.47983930643497735,"read_row":99997397,"read_byte":2339600470,"time":[3.645,3.456,4.397,4.203,3.653,3.373,3.02,3.131,3.819,4.471],"error":[],"mean":3.6861223600049837},{"name":"Q26","sql":"SELECT SearchPhrase FROM hits WHERE SearchPhrase \u003c\u003e '' ORDER BY SearchPhrase LIMIT 10;","min":3.241,"max":3.991,"median":3.76,"std_dev":0.2705035304760365,"read_row":99997397,"read_byte":1539621294,"time":[3.354,3.354,3.451,3.991,3.851,3.671,3.963,3.849,3.887,3.241],"error":[],"mean":3.65104870252402},{"name":"Q27","sql":"SELECT SearchPhrase FROM hits WHERE SearchPhrase \u003c\u003e '' ORDER BY EventTime, SearchPhrase LIMIT 10;","min":3.449,"max":4.549,"median":4.163,"std_dev":0.39168170751261816,"read_row":99997397,"read_byte":2339600470,"time":[4.234,4.549,4.363,4.092,3.55,4.397,3.68,3.726,4.472,3.449],"error":[],"mean":4.03186340770733},{"name":"Q28","sql":"SELECT CounterID, AVG(length(URL)) AS l, COUNT(*) AS c FROM hits WHERE URL \u003c\u003e '' GROUP BY CounterID HAVING COUNT(*) \u003e 100000 ORDER BY l DESC LIMIT 25;","min":2.813,"max":3.246,"median":2.891,"std_dev":0.1617379361807242,"read_row":99997397,"read_byte":10238805150,"time":[3.176,3.244,2.99,3.246,2.899,2.879,2.813,2.883,2.877,2.845],"error":[],"mean":2.980922897746607},{"name":"Q30","sql":"SELECT SUM(ResolutionWidth), SUM(ResolutionWidth + 1), SUM(ResolutionWidth + 2), SUM(ResolutionWidth + 3), SUM(ResolutionWidth + 4), SUM(ResolutionWidth + 5), SUM(ResolutionWidth + 6), SUM(ResolutionWidth + 7), SUM(ResolutionWidth + 8), SUM(ResolutionWidth + 9), SUM(ResolutionWidth + 10), SUM(ResolutionWidth + 11), SUM(ResolutionWidth + 12), SUM(ResolutionWidth + 13), SUM(ResolutionWidth + 14), SUM(ResolutionWidth + 15), SUM(ResolutionWidth + 16), SUM(ResolutionWidth + 17), SUM(ResolutionWidth + 18), SUM(ResolutionWidth + 19), SUM(ResolutionWidth + 20), SUM(ResolutionWidth + 21), SUM(ResolutionWidth + 22), SUM(ResolutionWidth + 23), SUM(ResolutionWidth + 24), SUM(ResolutionWidth + 25), SUM(ResolutionWidth + 26), SUM(ResolutionWidth + 27), SUM(ResolutionWidth + 28), SUM(ResolutionWidth + 29), SUM(ResolutionWidth + 30), SUM(ResolutionWidth + 31), SUM(ResolutionWidth + 32), SUM(ResolutionWidth + 33), SUM(ResolutionWidth + 34), SUM(ResolutionWidth + 35), SUM(ResolutionWidth + 36), SUM(ResolutionWidth + 37), SUM(ResolutionWidth + 38), SUM(ResolutionWidth + 39), SUM(ResolutionWidth + 40), SUM(ResolutionWidth + 41), SUM(ResolutionWidth + 42), SUM(ResolutionWidth + 43), SUM(ResolutionWidth + 44), SUM(ResolutionWidth + 45), SUM(ResolutionWidth + 46), SUM(ResolutionWidth + 47), SUM(ResolutionWidth + 48), SUM(ResolutionWidth + 49), SUM(ResolutionWidth + 50), SUM(ResolutionWidth + 51), SUM(ResolutionWidth + 52), SUM(ResolutionWidth + 53), SUM(ResolutionWidth + 54), SUM(ResolutionWidth + 55), SUM(ResolutionWidth + 56), SUM(ResolutionWidth + 57), SUM(ResolutionWidth + 58), SUM(ResolutionWidth + 59), SUM(ResolutionWidth + 60), SUM(ResolutionWidth + 61), SUM(ResolutionWidth + 62), SUM(ResolutionWidth + 63), SUM(ResolutionWidth + 64), SUM(ResolutionWidth + 65), SUM(ResolutionWidth + 66), SUM(ResolutionWidth + 67), SUM(ResolutionWidth + 68), SUM(ResolutionWidth + 69), SUM(ResolutionWidth + 70), SUM(ResolutionWidth + 71), SUM(ResolutionWidth + 72), SUM(ResolutionWidth + 73), SUM(ResolutionWidth + 74), SUM(ResolutionWidth + 75), SUM(ResolutionWidth + 76), SUM(ResolutionWidth + 77), SUM(ResolutionWidth + 78), SUM(ResolutionWidth + 79), SUM(ResolutionWidth + 80), SUM(ResolutionWidth + 81), SUM(ResolutionWidth + 82), SUM(ResolutionWidth + 83), SUM(ResolutionWidth + 84), SUM(ResolutionWidth + 85), SUM(ResolutionWidth + 86), SUM(ResolutionWidth + 87), SUM(ResolutionWidth + 88), SUM(ResolutionWidth + 89) FROM hits;","min":1.522,"max":1.679,"median":1.548,"std_dev":0.05042112652450363,"read_row":99997397,"read_byte":199994794,"time":[1.549,1.522,1.542,1.616,1.539,1.543,1.567,1.547,1.679,1.647],"error":[],"mean":1.5743090614171706},{"name":"Q31","sql":"SELECT SearchEngineID, ClientIP, COUNT(*) AS c, SUM(IsRefresh), AVG(ResolutionWidth) FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY SearchEngineID, ClientIP ORDER BY c DESC LIMIT 10;","min":2.862,"max":3.167,"median":2.98,"std_dev":0.10199196046747994,"read_row":99997397,"read_byte":2539595264,"time":[3.091,3.098,2.869,2.893,2.862,2.968,3.045,2.907,3.167,2.992],"error":[],"mean":2.9874695731869303},{"name":"Q32","sql":"SELECT WatchID, ClientIP, COUNT(*) AS c, SUM(IsRefresh), AVG(ResolutionWidth) FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY WatchID, ClientIP ORDER BY c DESC LIMIT 10;","min":3.652,"max":4.324,"median":3.853,"std_dev":0.23257495804817654,"read_row":99997397,"read_byte":3139579646,"time":[3.853,4.253,3.733,3.984,3.791,4.324,4.109,3.652,3.704],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":3.926900494107355},{"name":"Q33","sql":"SELECT WatchID, ClientIP, COUNT(*) AS c, SUM(IsRefresh), AVG(ResolutionWidth) FROM hits GROUP BY WatchID, ClientIP ORDER BY c DESC LIMIT 10;","min":14.002,"max":22.671,"median":18.921,"std_dev":2.518580252800358,"read_row":99997397,"read_byte":1599958352,"time":[22.671,14.002,18.976,18.177,17.225,20.699,18.921],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":18.489281910127215},{"name":"Q34","sql":"SELECT URL, COUNT(*) AS c FROM hits GROUP BY URL ORDER BY c DESC LIMIT 10;","min":7.96,"max":35.364,"median":11.499,"std_dev":7.773608482519953,"read_row":99997397,"read_byte":9838815562,"time":[10.001,14.161,15.56,13.184,10.301,35.364,11.499,7.96,10.452],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":12.933377047396883},{"name":"Q35","sql":"SELECT 1, URL, COUNT(*) AS c FROM hits GROUP BY 1, URL ORDER BY c DESC LIMIT 10;","min":15.487,"max":24.286,"median":18.777,"std_dev":3.198651990379003,"read_row":99997397,"read_byte":9838815562,"time":[19.112,18.442,17.756,24.286,23.821,15.487],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","request got bad status: 500 req= resp={\"error\":{\"kind\":\"InternalError\",\"message\":\"proxy upstream failed: EOF\"}}","request got bad status: 404 req= resp=query id not found 51f2d8e6-9a49-45ca-b49e-3327a2696b2a","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":19.56397480350583},{"name":"Q36","sql":"SELECT ClientIP, ClientIP - 1, ClientIP - 2, ClientIP - 3, COUNT(*) AS c FROM hits GROUP BY ClientIP, ClientIP - 1, ClientIP - 2, ClientIP - 3 ORDER BY c DESC LIMIT 10;","min":3.72,"max":4.554,"median":4.215,"std_dev":0.2681911631653809,"read_row":99997397,"read_byte":399989588,"time":[4.167,4.263,4.398,3.982,3.954,3.72,4.554,4.462],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":4.178781745387506},{"name":"Q37","sql":"SELECT URL, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND DontCountHits = 0 AND IsRefresh = 0 AND URL \u003c\u003e '' GROUP BY URL ORDER BY PageViews DESC LIMIT 10;","min":1.905,"max":2.361,"median":2.107,"std_dev":0.13054860206068852,"read_row":5970260,"read_byte":667375008,"time":[1.905,2.056,2.082,2.361,2.132,2.033,2.191,2.238],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":2.1207536843490256},{"name":"Q38","sql":"SELECT Title, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND DontCountHits = 0 AND IsRefresh = 0 AND Title \u003c\u003e '' GROUP BY Title ORDER BY PageViews DESC LIMIT 10;","min":1.746,"max":2.146,"median":1.896,"std_dev":0.11720106654804809,"read_row":5970260,"read_byte":749943771,"time":[2.101,1.746,1.924,1.927,1.831,1.823,1.884,1.851,1.908,2.146],"error":[],"mean":1.9106130916264819},{"name":"Q39","sql":"SELECT URL, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND IsRefresh = 0 AND IsLink \u003c\u003e 0 AND IsDownload = 0 GROUP BY URL ORDER BY PageViews DESC LIMIT 10 OFFSET 1000;","min":1.951,"max":2.157,"median":2.0935,"std_dev":0.06616864816512422,"read_row":5970260,"read_byte":679315528,"time":[2.107,2.157,1.951,2.104,2.045,2.127,1.967,2.078,2.083,2.142],"error":[],"mean":2.0750268120823967},{"name":"Q40","sql":"SELECT TraficSourceID, SearchEngineID, AdvEngineID, CASE WHEN (SearchEngineID = 0 AND AdvEngineID = 0) THEN Referer ELSE '' END AS Src, URL AS Dst, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND IsRefresh = 0 GROUP BY TraficSourceID, SearchEngineID, AdvEngineID, Src, Dst ORDER BY PageViews DESC LIMIT 10 OFFSET 1000;","min":2.319,"max":2.554,"median":2.5010000000000003,"std_dev":0.07246136901825688,"read_row":5970260,"read_byte":1238372247,"time":[2.554,2.319,2.515,2.498,2.433,2.497,2.378,2.518,2.549,2.504],"error":[],"mean":2.4754174336903296},{"name":"Q41","sql":"SELECT URLHash, EventDate, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND IsRefresh = 0 AND TraficSourceID IN (-1, 6) AND RefererHash = 3594120000172545465 GROUP BY URLHash, EventDate ORDER BY PageViews DESC LIMIT 10 OFFSET 100;","min":1.645,"max":2.056,"median":1.8755,"std_dev":0.11466891470664578,"read_row":5970260,"read_byte":167167280,"time":[1.835,1.645,1.966,2.056,1.953,1.798,1.793,1.988,1.916,1.822],"error":[],"mean":1.8736311892574826},{"name":"Q42","sql":"SELECT WindowClientWidth, WindowClientHeight, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND IsRefresh = 0 AND DontCountHits = 0 AND URLHash = 2868770270353813622 GROUP BY WindowClientWidth, WindowClientHeight ORDER BY PageViews DESC LIMIT 10 OFFSET 10000;","min":1.715,"max":2.648,"median":1.8639999999999999,"std_dev":0.26000492303031497,"read_row":5970260,"read_byte":143286240,"time":[1.905,1.962,1.748,2.648,1.762,1.78,1.823,1.927,2.062,1.715],"error":[],"mean":1.9180947061921507},{"name":"Q43","sql":"SELECT DATE_TRUNC('minute', EventTime) AS M, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-14' AND EventDate \u003c= '2013-07-15' AND IsRefresh = 0 AND DontCountHits = 0 GROUP BY DATE_TRUNC('minute', EventTime) ORDER BY DATE_TRUNC('minute', EventTime) LIMIT 10 OFFSET 1000;","min":1.66,"max":2.065,"median":1.9315,"std_dev":0.11640124569780172,"read_row":5970260,"read_byte":119405200,"time":[1.66,1.887,1.896,1.837,2.06,1.983,1.967,2.065,2.017,1.863],"error":[],"mean":1.9198445183932704}]}