{"metadata":{"table":"hits","tag":"v0.8.117-nightly","size":"Large"},"schema":[{"name":"Q1","sql":"SELECT COUNT(*) FROM hits;","min":0.032,"max":0.038,"median":0.0325,"std_dev":0.0017320508075688765,"read_row":1,"read_byte":1,"time":[0.038,0.032,0.033,0.032,0.032,0.032,0.033,0.033,0.033,0.032],"error":[],"mean":0.0329578539426804},{"name":"Q2","sql":"SELECT COUNT(*) FROM hits WHERE AdvEngineID \u003c\u003e 0;","min":1.131,"max":1.441,"median":1.2535,"std_dev":0.09179547919151577,"read_row":89494876,"read_byte":178989752,"time":[1.441,1.319,1.292,1.145,1.184,1.29,1.231,1.131,1.154,1.276],"error":[],"mean":1.2429954332280841},{"name":"Q3","sql":"SELECT SUM(AdvEngineID), COUNT(*), AVG(ResolutionWidth) FROM hits;","min":1.174,"max":1.403,"median":1.2109999999999999,"std_dev":0.08409334099677573,"read_row":99997397,"read_byte":399989588,"time":[1.214,1.219,1.174,1.176,1.189,1.403,1.208,1.401,1.2,1.305],"error":[],"mean":1.2461875737037733},{"name":"Q4","sql":"SELECT AVG(UserID) FROM hits;","min":1.173,"max":1.525,"median":1.3355000000000001,"std_dev":0.09934430028944786,"read_row":99997397,"read_byte":799979176,"time":[1.348,1.476,1.362,1.233,1.525,1.327,1.264,1.344,1.327,1.173],"error":[],"mean":1.3342501116120493},{"name":"Q5","sql":"SELECT COUNT(DISTINCT UserID) FROM hits;","min":4.639,"max":4.916,"median":4.805,"std_dev":0.10205297643871043,"read_row":99997397,"read_byte":799979176,"time":[4.68,4.819,4.885,4.679,4.893,4.916,4.798,4.812,4.639,4.642],"error":[],"mean":4.775207910796798},{"name":"Q6","sql":"SELECT COUNT(DISTINCT SearchPhrase) FROM hits;","min":3.044,"max":3.849,"median":3.1465,"std_dev":0.21967450921761503,"read_row":99997397,"read_byte":1539621294,"time":[3.268,3.105,3.044,3.11,3.849,3.16,3.178,3.133,3.099,3.185],"error":[],"mean":3.206290722525355},{"name":"Q7","sql":"SELECT MIN(EventDate), MAX(EventDate) FROM hits;","min":1.074,"max":1.442,"median":1.1915,"std_dev":0.11044021006861585,"read_row":99997397,"read_byte":399989588,"time":[1.178,1.301,1.136,1.101,1.074,1.265,1.098,1.205,1.296,1.442],"error":[],"mean":1.2047148654851398},{"name":"Q8","sql":"SELECT AdvEngineID, COUNT(*) FROM hits WHERE AdvEngineID \u003c\u003e 0 GROUP BY AdvEngineID ORDER BY COUNT(*) DESC;","min":1.87,"max":2.232,"median":2.093,"std_dev":0.10652492666038312,"read_row":89494876,"read_byte":178989752,"time":[2.188,2.159,2.089,1.87,1.927,2.097,2.103,2.072,2.015,2.232],"error":[],"mean":2.0724107749197005},{"name":"Q9","sql":"SELECT RegionID, COUNT(DISTINCT UserID) AS u FROM hits GROUP BY RegionID ORDER BY u DESC LIMIT 10;","min":2.729,"max":3.05,"median":2.8225,"std_dev":0.0936719675249751,"read_row":99997397,"read_byte":1199968764,"time":[2.924,3.05,2.775,2.729,2.808,2.862,2.801,2.837],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":2.846740391937957},{"name":"Q10","sql":"SELECT RegionID, SUM(AdvEngineID), COUNT(*) AS c, AVG(ResolutionWidth), COUNT(DISTINCT UserID) FROM hits GROUP BY RegionID ORDER BY c DESC LIMIT 10;","min":2.852,"max":3.077,"median":3.025,"std_dev":0.09618154131063245,"read_row":99997397,"read_byte":1599958352,"time":[2.852,3.077,3.025],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":2.9830976190561183},{"name":"Q11","sql":"SELECT MobilePhoneModel, COUNT(DISTINCT UserID) AS u FROM hits WHERE MobilePhoneModel \u003c\u003e '' GROUP BY MobilePhoneModel ORDER BY u DESC LIMIT 10;","min":1.983,"max":2.394,"median":2.2385,"std_dev":0.11746186615238155,"read_row":99997397,"read_byte":1623245000,"time":[2.16,2.356,2.394,1.983,2.293,2.293,2.182,2.221,2.256,2.093],"error":[],"mean":2.21993144801152},{"name":"Q12","sql":"SELECT MobilePhone, MobilePhoneModel, COUNT(DISTINCT UserID) AS u FROM hits WHERE MobilePhoneModel \u003c\u003e '' GROUP BY MobilePhone, MobilePhoneModel ORDER BY u DESC LIMIT 10;","min":2.101,"max":2.375,"median":2.234,"std_dev":0.08702758183472642,"read_row":99997397,"read_byte":1823239794,"time":[2.19,2.101,2.277,2.336,2.214,2.281,2.105,2.375,2.167,2.254],"error":[],"mean":2.22830044766829},{"name":"Q13","sql":"SELECT SearchPhrase, COUNT(*) AS c FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY SearchPhrase ORDER BY c DESC LIMIT 10;","min":3.238,"max":4.346,"median":3.792,"std_dev":0.2973579959876274,"read_row":99997397,"read_byte":1539621294,"time":[3.983,3.792,3.929,4.346,3.639,3.238,4.094,3.678,3.705],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":3.8109088589212097},{"name":"Q14","sql":"SELECT SearchPhrase, COUNT(DISTINCT UserID) AS u FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY SearchPhrase ORDER BY u DESC LIMIT 10;","min":3.23,"max":4.329,"median":3.747,"std_dev":0.27571541062175137,"read_row":99997397,"read_byte":2339600470,"time":[3.747,3.737,3.527,3.64,3.23,3.759,3.879,4.329,3.786],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":3.727039974469578},{"name":"Q15","sql":"SELECT SearchEngineID, SearchPhrase, COUNT(*) AS c FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY SearchEngineID, SearchPhrase ORDER BY c DESC LIMIT 10;","min":3.324,"max":5.087,"median":3.708,"std_dev":0.5282234754344035,"read_row":99997397,"read_byte":1739616088,"time":[3.324,3.959,3.477,3.617,3.747,5.087,3.459,3.669,4.617,3.818],"error":[],"mean":3.8447129627568692},{"name":"Q16","sql":"SELECT UserID, COUNT(*) FROM hits GROUP BY UserID ORDER BY COUNT(*) DESC LIMIT 10;","min":3.433,"max":4.008,"median":3.6494999999999997,"std_dev":0.1594397691920056,"read_row":99997397,"read_byte":799979176,"time":[3.477,3.675,3.545,4.008,3.643,3.741,3.433,3.8,3.656,3.568],"error":[],"mean":3.651187449208141},{"name":"Q17","sql":"SELECT UserID, SearchPhrase, COUNT(*) FROM hits GROUP BY UserID, SearchPhrase ORDER BY COUNT(*) DESC LIMIT 10;","min":5.971,"max":8.418,"median":6.869999999999999,"std_dev":0.769096742939404,"read_row":99997397,"read_byte":2339600470,"time":[8.418,7.877,6.927,6.371,7.588,7.539,6.813,6.137,6.489,5.971],"error":[],"mean":6.971533173557127},{"name":"Q18","sql":"SELECT UserID, SearchPhrase, COUNT(*) FROM hits GROUP BY UserID, SearchPhrase LIMIT 10;","min":3.134,"max":4.25,"median":3.3049999999999997,"std_dev":0.3575903941662863,"read_row":99997397,"read_byte":2339600470,"time":[4.25,3.134,3.243,3.22,4.036,3.534,3.354,3.256,3.522,3.23],"error":[],"mean":3.460786256091285},{"name":"Q19","sql":"SELECT UserID, extract(minute FROM EventTime) AS m, SearchPhrase, COUNT(*) FROM hits GROUP BY UserID, m, SearchPhrase ORDER BY COUNT(*) DESC LIMIT 10;","min":11.149,"max":28.951,"median":21.112000000000002,"std_dev":5.662622068220693,"read_row":99997397,"read_byte":3139579646,"time":[28.951,12.552,23.015,14.54,21.057,22.195,11.149,21.167],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":18.447492594632767},{"name":"Q20","sql":"SELECT UserID FROM hits WHERE UserID = 435090932899640449;","min":1.074,"max":1.245,"median":1.149,"std_dev":0.05892232174651644,"read_row":465452,"read_byte":3723616,"time":[1.152,1.074,1.159,1.158,1.075,1.075,1.237,1.146,1.113,1.245],"error":[],"mean":1.1419009959298005},{"name":"Q21","sql":"SELECT COUNT(*) FROM hits WHERE URL LIKE '%google%';","min":2.559,"max":2.779,"median":2.6945,"std_dev":0.0675056293948882,"read_row":99997397,"read_byte":9838815562,"time":[2.631,2.559,2.765,2.666,2.607,2.697,2.779,2.692,2.754,2.697],"error":[],"mean":2.6838465898936334},{"name":"Q22","sql":"SELECT SearchPhrase, MIN(URL), COUNT(*) AS c FROM hits WHERE URL LIKE '%google%' AND SearchPhrase \u003c\u003e '' GROUP BY SearchPhrase ORDER BY c DESC LIMIT 10;","min":3.533,"max":4.582,"median":3.733,"std_dev":0.2850903190218847,"read_row":99997397,"read_byte":11378436856,"time":[3.62,3.895,3.809,3.599,3.692,3.663,3.774,3.934,3.533,4.582],"error":[],"mean":3.8002681656536534},{"name":"Q23","sql":"SELECT SearchPhrase, MIN(URL), MIN(Title), COUNT(*) AS c, COUNT(DISTINCT UserID) FROM hits WHERE Title LIKE '%Google%' AND URL NOT LIKE '%.google.%' AND SearchPhrase \u003c\u003e '' GROUP BY SearchPhrase ORDER BY c DESC LIMIT 10;","min":5.381,"max":5.74,"median":5.5954999999999995,"std_dev":0.10476836354549018,"read_row":99997397,"read_byte":22239476895,"time":[5.664,5.569,5.74,5.381,5.537,5.556,5.622,5.738,5.693,5.543],"error":[],"mean":5.603313938827503},{"name":"Q24","sql":"SELECT * FROM hits WHERE URL LIKE '%google%' ORDER BY EventTime LIMIT 10;","min":7.744,"max":8.083,"median":7.952500000000001,"std_dev":0.10530284896430862,"read_row":99997397,"read_byte":71257048833,"time":[7.901,7.744,8.006,7.841,7.885,8.081,7.902,8.083,8.003,8.033],"error":[],"mean":7.947200021305136},{"name":"Q25","sql":"SELECT SearchPhrase FROM hits WHERE SearchPhrase \u003c\u003e '' ORDER BY EventTime LIMIT 10;","min":3.62,"max":5.36,"median":4.1795,"std_dev":0.5218751191616631,"read_row":99997397,"read_byte":2339600470,"time":[4.173,4.246,4.432,3.947,4.186,3.838,3.62,5.36,3.692,4.942],"error":[],"mean":4.213313007102385},{"name":"Q26","sql":"SELECT SearchPhrase FROM hits WHERE SearchPhrase \u003c\u003e '' ORDER BY SearchPhrase LIMIT 10;","min":3.13,"max":4.238,"median":3.6,"std_dev":0.3328272975583585,"read_row":99997397,"read_byte":1539621294,"time":[3.13,3.825,3.589,3.646,3.202,4.021,3.611,4.238,3.299,3.556],"error":[],"mean":3.5965440255758505},{"name":"Q27","sql":"SELECT SearchPhrase FROM hits WHERE SearchPhrase \u003c\u003e '' ORDER BY EventTime, SearchPhrase LIMIT 10;","min":3.32,"max":4.795,"median":4.3919999999999995,"std_dev":0.44823722513865355,"read_row":99997397,"read_byte":2339600470,"time":[4.795,3.32,4.723,3.759,3.93,4.521,4.648,4.467,4.317,4.223],"error":[],"mean":4.245148848340858},{"name":"Q28","sql":"SELECT CounterID, AVG(length(URL)) AS l, COUNT(*) AS c FROM hits WHERE URL \u003c\u003e '' GROUP BY CounterID HAVING COUNT(*) \u003e 100000 ORDER BY l DESC LIMIT 25;","min":3.019,"max":3.457,"median":3.294,"std_dev":0.12854633405896876,"read_row":99997397,"read_byte":10238805150,"time":[3.159,3.449,3.289,3.457,3.019,3.323,3.371,3.299,3.179,3.237],"error":[],"mean":3.275649175396143},{"name":"Q30","sql":"SELECT SUM(ResolutionWidth), SUM(ResolutionWidth + 1), SUM(ResolutionWidth + 2), SUM(ResolutionWidth + 3), SUM(ResolutionWidth + 4), SUM(ResolutionWidth + 5), SUM(ResolutionWidth + 6), SUM(ResolutionWidth + 7), SUM(ResolutionWidth + 8), SUM(ResolutionWidth + 9), SUM(ResolutionWidth + 10), SUM(ResolutionWidth + 11), SUM(ResolutionWidth + 12), SUM(ResolutionWidth + 13), SUM(ResolutionWidth + 14), SUM(ResolutionWidth + 15), SUM(ResolutionWidth + 16), SUM(ResolutionWidth + 17), SUM(ResolutionWidth + 18), SUM(ResolutionWidth + 19), SUM(ResolutionWidth + 20), SUM(ResolutionWidth + 21), SUM(ResolutionWidth + 22), SUM(ResolutionWidth + 23), SUM(ResolutionWidth + 24), SUM(ResolutionWidth + 25), SUM(ResolutionWidth + 26), SUM(ResolutionWidth + 27), SUM(ResolutionWidth + 28), SUM(ResolutionWidth + 29), SUM(ResolutionWidth + 30), SUM(ResolutionWidth + 31), SUM(ResolutionWidth + 32), SUM(ResolutionWidth + 33), SUM(ResolutionWidth + 34), SUM(ResolutionWidth + 35), SUM(ResolutionWidth + 36), SUM(ResolutionWidth + 37), SUM(ResolutionWidth + 38), SUM(ResolutionWidth + 39), SUM(ResolutionWidth + 40), SUM(ResolutionWidth + 41), SUM(ResolutionWidth + 42), SUM(ResolutionWidth + 43), SUM(ResolutionWidth + 44), SUM(ResolutionWidth + 45), SUM(ResolutionWidth + 46), SUM(ResolutionWidth + 47), SUM(ResolutionWidth + 48), SUM(ResolutionWidth + 49), SUM(ResolutionWidth + 50), SUM(ResolutionWidth + 51), SUM(ResolutionWidth + 52), SUM(ResolutionWidth + 53), SUM(ResolutionWidth + 54), SUM(ResolutionWidth + 55), SUM(ResolutionWidth + 56), SUM(ResolutionWidth + 57), SUM(ResolutionWidth + 58), SUM(ResolutionWidth + 59), SUM(ResolutionWidth + 60), SUM(ResolutionWidth + 61), SUM(ResolutionWidth + 62), SUM(ResolutionWidth + 63), SUM(ResolutionWidth + 64), SUM(ResolutionWidth + 65), SUM(ResolutionWidth + 66), SUM(ResolutionWidth + 67), SUM(ResolutionWidth + 68), SUM(ResolutionWidth + 69), SUM(ResolutionWidth + 70), SUM(ResolutionWidth + 71), SUM(ResolutionWidth + 72), SUM(ResolutionWidth + 73), SUM(ResolutionWidth + 74), SUM(ResolutionWidth + 75), SUM(ResolutionWidth + 76), SUM(ResolutionWidth + 77), SUM(ResolutionWidth + 78), SUM(ResolutionWidth + 79), SUM(ResolutionWidth + 80), SUM(ResolutionWidth + 81), SUM(ResolutionWidth + 82), SUM(ResolutionWidth + 83), SUM(ResolutionWidth + 84), SUM(ResolutionWidth + 85), SUM(ResolutionWidth + 86), SUM(ResolutionWidth + 87), SUM(ResolutionWidth + 88), SUM(ResolutionWidth + 89) FROM hits;","min":1.638,"max":1.809,"median":1.681,"std_dev":0.04843438860974711,"read_row":99997397,"read_byte":199994794,"time":[1.638,1.712,1.69,1.668,1.809,1.691,1.74,1.668,1.641,1.672],"error":[],"mean":1.6922217518820686},{"name":"Q31","sql":"SELECT SearchEngineID, ClientIP, COUNT(*) AS c, SUM(IsRefresh), AVG(ResolutionWidth) FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY SearchEngineID, ClientIP ORDER BY c DESC LIMIT 10;","min":3.117,"max":3.463,"median":3.254,"std_dev":0.11588691806143514,"read_row":99997397,"read_byte":2539595264,"time":[3.432,3.337,3.303,3.463,3.117,3.254,3.158,3.198,3.168],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":3.2679634036970078},{"name":"Q32","sql":"SELECT WatchID, ClientIP, COUNT(*) AS c, SUM(IsRefresh), AVG(ResolutionWidth) FROM hits WHERE SearchPhrase \u003c\u003e '' GROUP BY WatchID, ClientIP ORDER BY c DESC LIMIT 10;","min":4.019,"max":6.063,"median":4.574,"std_dev":0.6943647954323451,"read_row":99997397,"read_byte":3139579646,"time":[4.019,4.574,4.172,5.338,5.524,6.063,5.437,4.309,4.291],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":4.810082362641381},{"name":"Q33","sql":"SELECT WatchID, ClientIP, COUNT(*) AS c, SUM(IsRefresh), AVG(ResolutionWidth) FROM hits GROUP BY WatchID, ClientIP ORDER BY c DESC LIMIT 10;","min":13.319,"max":19.46,"median":14.827,"std_dev":2.2474513183985607,"read_row":99997397,"read_byte":1599958352,"time":[13.319,14.827,13.349,15.797,19.46,13.844,18.149],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":15.380561756581255},{"name":"Q34","sql":"SELECT URL, COUNT(*) AS c FROM hits GROUP BY URL ORDER BY c DESC LIMIT 10;","min":8.565,"max":19.399,"median":14.940000000000001,"std_dev":3.9165072110714925,"read_row":99997397,"read_byte":9838815562,"time":[13.28,8.565,19.399,18.832,9.72,15.641,14.239,18.959],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}"],"mean":14.25536580145971},{"name":"Q35","sql":"SELECT 1, URL, COUNT(*) AS c FROM hits GROUP BY 1, URL ORDER BY c DESC LIMIT 10;","min":19.03,"max":40.744,"median":26.387,"std_dev":8.073306277480125,"read_row":99997397,"read_byte":9838815562,"time":[33.429,20.652,31.857,19.03,40.744,20.917],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: broken pipe, source: Some(hyper::Error(Body, Error { kind: Io(Kind(BrokenPipe)) })) Kind:}","query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":26.63066659828577},{"name":"Q36","sql":"SELECT ClientIP, ClientIP - 1, ClientIP - 2, ClientIP - 3, COUNT(*) AS c FROM hits GROUP BY ClientIP, ClientIP - 1, ClientIP - 2, ClientIP - 3 ORDER BY c DESC LIMIT 10;","min":3.714,"max":4.594,"median":3.929,"std_dev":0.2753526134402852,"read_row":99997397,"read_byte":399989588,"time":[4.594,3.827,4.283,3.714,3.798,4.005,3.929,3.821,4.256],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":4.016117395982165},{"name":"Q37","sql":"SELECT URL, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND DontCountHits = 0 AND IsRefresh = 0 AND URL \u003c\u003e '' GROUP BY URL ORDER BY PageViews DESC LIMIT 10;","min":2.308,"max":2.724,"median":2.4154999999999998,"std_dev":0.1253314006943193,"read_row":5970260,"read_byte":667375008,"time":[2.425,2.521,2.308,2.502,2.344,2.318,2.724,2.406,2.316,2.528],"error":[],"mean":2.4360696933191477},{"name":"Q38","sql":"SELECT Title, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND DontCountHits = 0 AND IsRefresh = 0 AND Title \u003c\u003e '' GROUP BY Title ORDER BY PageViews DESC LIMIT 10;","min":1.99,"max":2.413,"median":2.1420000000000003,"std_dev":0.11943885464956532,"read_row":5970260,"read_byte":749943771,"time":[2.072,2.107,1.99,2.181,2.326,2.093,2.165,2.119,2.238,2.413],"error":[],"mean":2.167179195439583},{"name":"Q39","sql":"SELECT URL, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND IsRefresh = 0 AND IsLink \u003c\u003e 0 AND IsDownload = 0 GROUP BY URL ORDER BY PageViews DESC LIMIT 10 OFFSET 1000;","min":1.953,"max":2.748,"median":2.1295,"std_dev":0.2058867649947418,"read_row":5970260,"read_byte":679315528,"time":[2.748,2.118,1.953,2.141,2.269,2.08,2.295,2.074,2.109,2.191],"error":[],"mean":2.189006153851293},{"name":"Q40","sql":"SELECT TraficSourceID, SearchEngineID, AdvEngineID, CASE WHEN (SearchEngineID = 0 AND AdvEngineID = 0) THEN Referer ELSE '' END AS Src, URL AS Dst, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND IsRefresh = 0 GROUP BY TraficSourceID, SearchEngineID, AdvEngineID, Src, Dst ORDER BY PageViews DESC LIMIT 10 OFFSET 1000;","min":2.537,"max":2.875,"median":2.696,"std_dev":0.09864914759382186,"read_row":5970260,"read_byte":1238372247,"time":[2.703,2.768,2.666,2.731,2.875,2.696,2.596,2.537,2.576],"error":["query has error: \u0026{Code:1067 Message:error reading a body from connection: connection reset, source: Some(hyper::Error(Body, Error { kind: Io(Kind(ConnectionReset)) })) Kind:}"],"mean":2.681309640913792},{"name":"Q41","sql":"SELECT URLHash, EventDate, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND IsRefresh = 0 AND TraficSourceID IN (-1, 6) AND RefererHash = 3594120000172545465 GROUP BY URLHash, EventDate ORDER BY PageViews DESC LIMIT 10 OFFSET 100;","min":1.938,"max":2.72,"median":2.167,"std_dev":0.20210551699545473,"read_row":5970260,"read_byte":167167280,"time":[2.204,2.09,2.082,2.142,2.357,2.181,2.72,2.329,2.153,1.938],"error":[],"mean":2.2109603339030257},{"name":"Q42","sql":"SELECT WindowClientWidth, WindowClientHeight, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-01' AND EventDate \u003c= '2013-07-31' AND IsRefresh = 0 AND DontCountHits = 0 AND URLHash = 2868770270353813622 GROUP BY WindowClientWidth, WindowClientHeight ORDER BY PageViews DESC LIMIT 10 OFFSET 10000;","min":1.887,"max":2.164,"median":2.022,"std_dev":0.07383603456307769,"read_row":5970260,"read_byte":143286240,"time":[2.015,2.051,2.007,2.022,1.887,2.104,2.164,2.113,1.977,2.022],"error":[],"mean":2.0348534856047644},{"name":"Q43","sql":"SELECT DATE_TRUNC('minute', EventTime) AS M, COUNT(*) AS PageViews FROM hits WHERE CounterID = 62 AND EventDate \u003e= '2013-07-14' AND EventDate \u003c= '2013-07-15' AND IsRefresh = 0 AND DontCountHits = 0 GROUP BY DATE_TRUNC('minute', EventTime) ORDER BY DATE_TRUNC('minute', EventTime) LIMIT 10 OFFSET 1000;","min":1.976,"max":2.242,"median":2.108,"std_dev":0.09042394594353866,"read_row":5970260,"read_byte":119405200,"time":[1.979,1.976,2.198,2.242,2.131,2.097,2.119,2.197,2.026,2.024],"error":[],"mean":2.096953921522373}]}