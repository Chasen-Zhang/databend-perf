{"metadata":{"table":"ontime","tag":"v0.7.19-nightly","size":"XXXLarge"},"schema":[{"name":"Q1","sql":"SELECT DayOfWeek, count(*) AS c FROM default.ontime WHERE Year \u003e= 2000 AND Year \u003c= 2008 GROUP BY DayOfWeek ORDER BY c DESC;","min":0.144,"max":0.672,"median":0.1545,"std_dev":0.1553510862530417,"read_row":61000000,"read_byte":183000000,"time":[0.146,0.16,0.144,0.672,0.15,0.168,0.154,0.174,0.155,0.145],"error":[],"mean":0.17928232736679026},{"name":"Q2","sql":"SELECT DayOfWeek, count(*) AS c FROM default.ontime WHERE DepDelay\u003e10 AND Year \u003e= 2000 AND Year \u003c= 2008 GROUP BY DayOfWeek ORDER BY c DESC;","min":0.207,"max":0.294,"median":0.217,"std_dev":0.02593376177880872,"read_row":61000000,"read_byte":427000000,"time":[0.257,0.218,0.214,0.207,0.294,0.214,0.219,0.216,0.224,0.209],"error":[],"mean":0.22588255994882742},{"name":"Q3","sql":"SELECT Origin, count(*) AS c FROM default.ontime WHERE DepDelay\u003e10 AND Year \u003e= 2000 AND Year \u003c= 2008 GROUP BY Origin ORDER BY c DESC LIMIT 10;","min":0.284,"max":0.33,"median":0.2945,"std_dev":0.013137731919932005,"read_row":61000000,"read_byte":1037000488,"time":[0.286,0.296,0.29,0.295,0.33,0.304,0.311,0.294,0.284,0.29],"error":[],"mean":0.29772063313421465},{"name":"Q4","sql":"SELECT IATA_CODE_Reporting_Airline AS Carrier, count() FROM default.ontime WHERE DepDelay\u003e10 AND Year = 2007 GROUP BY Carrier ORDER BY count() DESC;","min":0.098,"max":0.139,"median":0.12,"std_dev":0.013341664064126336,"read_row":8000000,"read_byte":128000064,"time":[0.127,0.12,0.12,0.098,0.123,0.12,0.103,0.098,0.132,0.139],"error":[],"mean":0.11722306371346942},{"name":"Q5","sql":"SELECT IATA_CODE_Reporting_Airline AS Carrier, avg(cast(DepDelay\u003e10 as Int8))*1000 AS c3 FROM default.ontime WHERE Year=2007 GROUP BY Carrier ORDER BY c3 DESC;","min":0.109,"max":0.161,"median":0.138,"std_dev":0.015850552040859646,"read_row":8000000,"read_byte":128000064,"time":[0.142,0.141,0.135,0.148,0.134,0.161,0.151,0.122,0.113,0.109],"error":[],"mean":0.13464416378997618},{"name":"Q6","sql":"SELECT IATA_CODE_Reporting_Airline AS Carrier, avg(cast(DepDelay\u003e10 as Int8))*1000 AS c3 FROM default.ontime WHERE Year\u003e=2000 AND Year \u003c=2008 GROUP BY Carrier ORDER BY c3 DESC;","min":0.329,"max":0.69,"median":0.36,"std_dev":0.1306087286516487,"read_row":61000000,"read_byte":976000488,"time":[0.339,0.383,0.354,0.661,0.366,0.334,0.341,0.369,0.69,0.329],"error":[],"mean":0.4004659982133037},{"name":"Q7","sql":"SELECT IATA_CODE_Reporting_Airline AS Carrier, avg(DepDelay) * 1000 AS c3 FROM default.ontime WHERE Year \u003e= 2000 AND Year \u003c= 2008 GROUP BY Carrier;","min":0.323,"max":0.524,"median":0.333,"std_dev":0.07202194110130607,"read_row":61000000,"read_byte":976000488,"time":[0.328,0.329,0.339,0.35,0.328,0.337,0.498,0.326,0.524,0.323],"error":[],"mean":0.3622281502344325},{"name":"Q8","sql":"SELECT Year, avg(DepDelay) FROM default.ontime GROUP BY Year;","min":0.431,"max":0.5,"median":0.4385,"std_dev":0.024094720491334935,"read_row":202687655,"read_byte":1216125930,"time":[0.441,0.451,0.436,0.431,0.431,0.5],"error":["query has error: map[backtrace:   0: common_exception::exception_code::\u003cimpl common_exception::exception::ErrorCode\u003e::StorageOther\n             at workspace/common/exception/src/exception_code.rs:36:66\n      common_exception::exception_into::\u003cimpl core::convert::From\u003cstd::io::error::Error\u003e for common_exception::exception::ErrorCode\u003e::from\n             at workspace/common/exception/src/exception_into.rs:114:18\n   1: \u003ccore::result::Result\u003cT,F\u003e as core::ops::try_trait::FromResidual\u003ccore::result::Result\u003ccore::convert::Infallible,E\u003e\u003e\u003e::from_residual\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/result.rs:2106:27\n      databend_query::storages::fuse::io::read::block_reader::BlockReader::read_column::{{closure}}::{{closure}}\n             at workspace/query/src/storages/fuse/io/read/block_reader.rs:200:25\n      \u003ccore::future::from_generator::GenFuture\u003cT\u003e as core::future::future::Future\u003e::poll\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/future/mod.rs:91:19\n   2: tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n   3: std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n   4: tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n   5: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::LocalNotified\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:448:21\n      tokio::coop::with_budget::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\n      std::thread::local::LocalKey\u003cT\u003e::try_with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:442:16\n      std::thread::local::LocalKey\u003cT\u003e::with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:418:9\n      tokio::coop::with_budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\n      tokio::coop::budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\n      tokio::runtime::thread_pool::worker::Context::run_task\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\n   6: tokio::runtime::thread_pool::worker::Context::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:398:24\n      tokio::runtime::thread_pool::worker::run::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\n      tokio::macros::scoped_tls::ScopedKey\u003cT\u003e::set\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\n      tokio::runtime::thread_pool::worker::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\n   7: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\n      \u003ctokio::runtime::blocking::task::BlockingTask\u003cT\u003e as core::future::future::Future\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n      tokio::runtime::task::raw::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\n   8: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::UnownedTask\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\n      tokio::runtime::blocking::pool::Task::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\n      tokio::runtime::blocking::pool::Inner::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\n      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys_common/backtrace.rs:122:18\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:498:17\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:497:30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/ops/function.rs:227:5\n  10: \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      std::sys::unix::thread::Thread::new::thread_start\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys/unix/thread.rs:108:17\n  11: start_thread\n  12: clone\n code:4000 message:other error (op: read, path: us-east-2/tnc6qwc1v/1/27/_b/d8ec4073017c4c4c91cbec3a551786f4.parquet, source: response part: Parts { status: 500, version: HTTP/1.1, headers: {\"x-amz-request-id\": \"8NAWZZSBM69SC6RH\", \"x-amz-id-2\": \"OCGWGRwGROo71KwS21QjmYgZrpy1aj4vU7c9em+08Y3ucgx4OCMhTydpvYH/m9NsxnjtencCNPs=\", \"content-type\": \"application/xml\", \"transfer-encoding\": \"chunked\", \"date\": \"Sat, 16 Apr 2022 08:38:12 GMT\", \"server\": \"AmazonS3\", \"connection\": \"close\"} }, body: \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003cError\u003e\u003cCode\u003eInternalError\u003c/Code\u003e\u003cMessage\u003eWe encountered an internal error. Please try again.\u003c/Message\u003e\u003cRequestId\u003e8NAWZZSBM69SC6RH\u003c/RequestId\u003e\u003cHostId\u003eOCGWGRwGROo71KwS21QjmYgZrpy1aj4vU7c9em+08Y3ucgx4OCMhTydpvYH/m9NsxnjtencCNPs=\u003c/HostId\u003e\u003c/Error\u003e\") (while in processor thread 18)]","query has error: map[backtrace:   0: common_exception::exception_code::\u003cimpl common_exception::exception::ErrorCode\u003e::StorageOther\n             at workspace/common/exception/src/exception_code.rs:36:66\n      common_exception::exception_into::\u003cimpl core::convert::From\u003cstd::io::error::Error\u003e for common_exception::exception::ErrorCode\u003e::from\n             at workspace/common/exception/src/exception_into.rs:114:18\n   1: \u003ccore::result::Result\u003cT,F\u003e as core::ops::try_trait::FromResidual\u003ccore::result::Result\u003ccore::convert::Infallible,E\u003e\u003e\u003e::from_residual\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/result.rs:2106:27\n      databend_query::storages::fuse::io::read::block_reader::BlockReader::read_column::{{closure}}::{{closure}}\n             at workspace/query/src/storages/fuse/io/read/block_reader.rs:200:25\n      \u003ccore::future::from_generator::GenFuture\u003cT\u003e as core::future::future::Future\u003e::poll\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/future/mod.rs:91:19\n   2: tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n   3: std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n   4: tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n   5: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::LocalNotified\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:448:21\n      tokio::coop::with_budget::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\n      std::thread::local::LocalKey\u003cT\u003e::try_with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:442:16\n      std::thread::local::LocalKey\u003cT\u003e::with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:418:9\n      tokio::coop::with_budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\n      tokio::coop::budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\n      tokio::runtime::thread_pool::worker::Context::run_task\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\n   6: tokio::runtime::thread_pool::worker::Context::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:398:24\n      tokio::runtime::thread_pool::worker::run::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\n      tokio::macros::scoped_tls::ScopedKey\u003cT\u003e::set\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\n      tokio::runtime::thread_pool::worker::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\n   7: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\n      \u003ctokio::runtime::blocking::task::BlockingTask\u003cT\u003e as core::future::future::Future\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n      tokio::runtime::task::raw::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\n   8: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::UnownedTask\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\n      tokio::runtime::blocking::pool::Task::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\n      tokio::runtime::blocking::pool::Inner::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\n      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys_common/backtrace.rs:122:18\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:498:17\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:497:30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/ops/function.rs:227:5\n  10: \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      std::sys::unix::thread::Thread::new::thread_start\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys/unix/thread.rs:108:17\n  11: start_thread\n  12: clone\n code:4000 message:other error (op: read, path: us-east-2/tnc6qwc1v/1/27/_b/d8ec4073017c4c4c91cbec3a551786f4.parquet, source: response part: Parts { status: 500, version: HTTP/1.1, headers: {\"x-amz-request-id\": \"X7CBQ9G743078F7G\", \"x-amz-id-2\": \"P5b5ifd5FE3iMtIxRBHCzHTzHTvpv62gjgOB/b9cb7n5Z/UiJrGxlTQ/pySM4fhJWtiYWUQC71o=\", \"content-type\": \"application/xml\", \"transfer-encoding\": \"chunked\", \"date\": \"Sat, 16 Apr 2022 08:38:17 GMT\", \"server\": \"AmazonS3\", \"connection\": \"close\"} }, body: \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003cError\u003e\u003cCode\u003eInternalError\u003c/Code\u003e\u003cMessage\u003eWe encountered an internal error. Please try again.\u003c/Message\u003e\u003cRequestId\u003eX7CBQ9G743078F7G\u003c/RequestId\u003e\u003cHostId\u003eP5b5ifd5FE3iMtIxRBHCzHTzHTvpv62gjgOB/b9cb7n5Z/UiJrGxlTQ/pySM4fhJWtiYWUQC71o=\u003c/HostId\u003e\u003c/Error\u003e\") (while in processor thread 29)]","query has error: map[backtrace:   0: common_exception::exception_code::\u003cimpl common_exception::exception::ErrorCode\u003e::StorageOther\n             at workspace/common/exception/src/exception_code.rs:36:66\n      common_exception::exception_into::\u003cimpl core::convert::From\u003cstd::io::error::Error\u003e for common_exception::exception::ErrorCode\u003e::from\n             at workspace/common/exception/src/exception_into.rs:114:18\n   1: \u003ccore::result::Result\u003cT,F\u003e as core::ops::try_trait::FromResidual\u003ccore::result::Result\u003ccore::convert::Infallible,E\u003e\u003e\u003e::from_residual\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/result.rs:2106:27\n      databend_query::storages::fuse::io::read::block_reader::BlockReader::read_column::{{closure}}::{{closure}}\n             at workspace/query/src/storages/fuse/io/read/block_reader.rs:200:25\n      \u003ccore::future::from_generator::GenFuture\u003cT\u003e as core::future::future::Future\u003e::poll\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/future/mod.rs:91:19\n   2: tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n   3: std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n   4: tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n   5: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::LocalNotified\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:448:21\n      tokio::coop::with_budget::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\n      std::thread::local::LocalKey\u003cT\u003e::try_with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:442:16\n      std::thread::local::LocalKey\u003cT\u003e::with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:418:9\n      tokio::coop::with_budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\n      tokio::coop::budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\n      tokio::runtime::thread_pool::worker::Context::run_task\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\n   6: tokio::runtime::thread_pool::worker::Context::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:398:24\n      tokio::runtime::thread_pool::worker::run::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\n      tokio::macros::scoped_tls::ScopedKey\u003cT\u003e::set\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\n      tokio::runtime::thread_pool::worker::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\n   7: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\n      \u003ctokio::runtime::blocking::task::BlockingTask\u003cT\u003e as core::future::future::Future\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n      tokio::runtime::task::raw::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\n   8: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::UnownedTask\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\n      tokio::runtime::blocking::pool::Task::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\n      tokio::runtime::blocking::pool::Inner::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\n      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys_common/backtrace.rs:122:18\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:498:17\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:497:30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/ops/function.rs:227:5\n  10: \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      std::sys::unix::thread::Thread::new::thread_start\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys/unix/thread.rs:108:17\n  11: start_thread\n  12: clone\n code:4000 message:other error (op: read, path: us-east-2/tnc6qwc1v/1/27/_b/d8ec4073017c4c4c91cbec3a551786f4.parquet, source: response part: Parts { status: 500, version: HTTP/1.1, headers: {\"x-amz-request-id\": \"9TNDPP04MP80CHXC\", \"x-amz-id-2\": \"5hBmKWNNL8uO9aJJud26ALMssGGJUTt2Y30f5KsuwOud7CwUwMsoYX79bf6wHm4QDmv9elQ+VSM=\", \"content-type\": \"application/xml\", \"transfer-encoding\": \"chunked\", \"date\": \"Sat, 16 Apr 2022 08:38:22 GMT\", \"server\": \"AmazonS3\", \"connection\": \"close\"} }, body: \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003cError\u003e\u003cCode\u003eInternalError\u003c/Code\u003e\u003cMessage\u003eWe encountered an internal error. Please try again.\u003c/Message\u003e\u003cRequestId\u003e9TNDPP04MP80CHXC\u003c/RequestId\u003e\u003cHostId\u003e5hBmKWNNL8uO9aJJud26ALMssGGJUTt2Y30f5KsuwOud7CwUwMsoYX79bf6wHm4QDmv9elQ+VSM=\u003c/HostId\u003e\u003c/Error\u003e\") (while in processor thread 17)]","query has error: map[backtrace:   0: common_exception::exception_code::\u003cimpl common_exception::exception::ErrorCode\u003e::StorageOther\n             at workspace/common/exception/src/exception_code.rs:36:66\n      common_exception::exception_into::\u003cimpl core::convert::From\u003cstd::io::error::Error\u003e for common_exception::exception::ErrorCode\u003e::from\n             at workspace/common/exception/src/exception_into.rs:114:18\n   1: \u003ccore::result::Result\u003cT,F\u003e as core::ops::try_trait::FromResidual\u003ccore::result::Result\u003ccore::convert::Infallible,E\u003e\u003e\u003e::from_residual\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/result.rs:2106:27\n      databend_query::storages::fuse::io::read::block_reader::BlockReader::read_column::{{closure}}::{{closure}}\n             at workspace/query/src/storages/fuse/io/read/block_reader.rs:200:25\n      \u003ccore::future::from_generator::GenFuture\u003cT\u003e as core::future::future::Future\u003e::poll\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/future/mod.rs:91:19\n   2: tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n   3: std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n   4: tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n   5: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::LocalNotified\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:448:21\n      tokio::coop::with_budget::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\n      std::thread::local::LocalKey\u003cT\u003e::try_with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:442:16\n      std::thread::local::LocalKey\u003cT\u003e::with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:418:9\n      tokio::coop::with_budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\n      tokio::coop::budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\n      tokio::runtime::thread_pool::worker::Context::run_task\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\n   6: tokio::runtime::thread_pool::worker::Context::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:398:24\n      tokio::runtime::thread_pool::worker::run::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\n      tokio::macros::scoped_tls::ScopedKey\u003cT\u003e::set\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\n      tokio::runtime::thread_pool::worker::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\n   7: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\n      \u003ctokio::runtime::blocking::task::BlockingTask\u003cT\u003e as core::future::future::Future\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n      tokio::runtime::task::raw::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\n   8: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::UnownedTask\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\n      tokio::runtime::blocking::pool::Task::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\n      tokio::runtime::blocking::pool::Inner::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\n      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys_common/backtrace.rs:122:18\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:498:17\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:497:30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/ops/function.rs:227:5\n  10: \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      std::sys::unix::thread::Thread::new::thread_start\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys/unix/thread.rs:108:17\n  11: start_thread\n  12: clone\n code:4000 message:other error (op: read, path: us-east-2/tnc6qwc1v/1/27/_b/d8ec4073017c4c4c91cbec3a551786f4.parquet, source: response part: Parts { status: 500, version: HTTP/1.1, headers: {\"x-amz-request-id\": \"1KJ4YBE9YNQE4DF2\", \"x-amz-id-2\": \"xtchlRRmKdmY5uXejOvPIyTYqpLIBUeeqhnBv2+aqD5vSBnknV/SihKhPIEhXOdLChddcpzEjuk=\", \"content-type\": \"application/xml\", \"transfer-encoding\": \"chunked\", \"date\": \"Sat, 16 Apr 2022 08:38:28 GMT\", \"server\": \"AmazonS3\", \"connection\": \"close\"} }, body: \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003cError\u003e\u003cCode\u003eInternalError\u003c/Code\u003e\u003cMessage\u003eWe encountered an internal error. Please try again.\u003c/Message\u003e\u003cRequestId\u003e1KJ4YBE9YNQE4DF2\u003c/RequestId\u003e\u003cHostId\u003extchlRRmKdmY5uXejOvPIyTYqpLIBUeeqhnBv2+aqD5vSBnknV/SihKhPIEhXOdLChddcpzEjuk=\u003c/HostId\u003e\u003c/Error\u003e\") (while in processor thread 28)]"],"mean":0.44771779981991977},{"name":"Q9","sql":"SELECT Year, count(*) as c1 FROM default.ontime GROUP BY Year;","min":0.266,"max":0.284,"median":0.272,"std_dev":0.005732115042211099,"read_row":202687655,"read_byte":405375310,"time":[0.273,0.284,0.268,0.278,0.272,0.266,0.27],"error":["query has error: map[backtrace:   0: common_exception::exception_code::\u003cimpl common_exception::exception::ErrorCode\u003e::StorageOther\n             at workspace/common/exception/src/exception_code.rs:36:66\n      common_exception::exception_into::\u003cimpl core::convert::From\u003cstd::io::error::Error\u003e for common_exception::exception::ErrorCode\u003e::from\n             at workspace/common/exception/src/exception_into.rs:114:18\n   1: \u003ccore::result::Result\u003cT,F\u003e as core::ops::try_trait::FromResidual\u003ccore::result::Result\u003ccore::convert::Infallible,E\u003e\u003e\u003e::from_residual\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/result.rs:2106:27\n      databend_query::storages::fuse::io::read::block_reader::BlockReader::read_column::{{closure}}::{{closure}}\n             at workspace/query/src/storages/fuse/io/read/block_reader.rs:200:25\n      \u003ccore::future::from_generator::GenFuture\u003cT\u003e as core::future::future::Future\u003e::poll\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/future/mod.rs:91:19\n   2: tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n   3: std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n   4: tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n   5: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::LocalNotified\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:448:21\n      tokio::coop::with_budget::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\n      std::thread::local::LocalKey\u003cT\u003e::try_with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:442:16\n      std::thread::local::LocalKey\u003cT\u003e::with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:418:9\n      tokio::coop::with_budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\n      tokio::coop::budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\n      tokio::runtime::thread_pool::worker::Context::run_task\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\n   6: tokio::runtime::thread_pool::worker::Context::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:398:24\n      tokio::runtime::thread_pool::worker::run::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\n      tokio::macros::scoped_tls::ScopedKey\u003cT\u003e::set\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\n      tokio::runtime::thread_pool::worker::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\n   7: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\n      \u003ctokio::runtime::blocking::task::BlockingTask\u003cT\u003e as core::future::future::Future\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n      tokio::runtime::task::raw::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\n   8: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::UnownedTask\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\n      tokio::runtime::blocking::pool::Task::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\n      tokio::runtime::blocking::pool::Inner::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\n      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys_common/backtrace.rs:122:18\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:498:17\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:497:30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/ops/function.rs:227:5\n  10: \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      std::sys::unix::thread::Thread::new::thread_start\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys/unix/thread.rs:108:17\n  11: start_thread\n  12: clone\n code:4000 message:other error (op: read, path: us-east-2/tnc6qwc1v/1/27/_b/d8ec4073017c4c4c91cbec3a551786f4.parquet, source: response part: Parts { status: 500, version: HTTP/1.1, headers: {\"x-amz-request-id\": \"MTMSK9QGBWJ1DNDZ\", \"x-amz-id-2\": \"nrBezAHvpI6ofjsJnDxkqx72yTDRc99AiHwmYtgTyukVkxfshTKpXntVoi0ohtxMUYSR6HMtM+8=\", \"content-type\": \"application/xml\", \"transfer-encoding\": \"chunked\", \"date\": \"Sat, 16 Apr 2022 08:38:42 GMT\", \"server\": \"AmazonS3\", \"connection\": \"close\"} }, body: \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003cError\u003e\u003cCode\u003eInternalError\u003c/Code\u003e\u003cMessage\u003eWe encountered an internal error. Please try again.\u003c/Message\u003e\u003cRequestId\u003eMTMSK9QGBWJ1DNDZ\u003c/RequestId\u003e\u003cHostId\u003enrBezAHvpI6ofjsJnDxkqx72yTDRc99AiHwmYtgTyukVkxfshTKpXntVoi0ohtxMUYSR6HMtM+8=\u003c/HostId\u003e\u003c/Error\u003e\") (while in processor thread 13)]","query has error: map[backtrace:   0: common_exception::exception_code::\u003cimpl common_exception::exception::ErrorCode\u003e::StorageOther\n             at workspace/common/exception/src/exception_code.rs:36:66\n      common_exception::exception_into::\u003cimpl core::convert::From\u003cstd::io::error::Error\u003e for common_exception::exception::ErrorCode\u003e::from\n             at workspace/common/exception/src/exception_into.rs:114:18\n   1: \u003ccore::result::Result\u003cT,F\u003e as core::ops::try_trait::FromResidual\u003ccore::result::Result\u003ccore::convert::Infallible,E\u003e\u003e\u003e::from_residual\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/result.rs:2106:27\n      databend_query::storages::fuse::io::read::block_reader::BlockReader::read_column::{{closure}}::{{closure}}\n             at workspace/query/src/storages/fuse/io/read/block_reader.rs:200:25\n      \u003ccore::future::from_generator::GenFuture\u003cT\u003e as core::future::future::Future\u003e::poll\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/future/mod.rs:91:19\n   2: tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n   3: std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n   4: tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n   5: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::LocalNotified\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:448:21\n      tokio::coop::with_budget::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\n      std::thread::local::LocalKey\u003cT\u003e::try_with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:442:16\n      std::thread::local::LocalKey\u003cT\u003e::with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:418:9\n      tokio::coop::with_budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\n      tokio::coop::budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\n      tokio::runtime::thread_pool::worker::Context::run_task\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\n   6: tokio::runtime::thread_pool::worker::Context::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:398:24\n      tokio::runtime::thread_pool::worker::run::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\n      tokio::macros::scoped_tls::ScopedKey\u003cT\u003e::set\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\n      tokio::runtime::thread_pool::worker::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\n   7: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\n      \u003ctokio::runtime::blocking::task::BlockingTask\u003cT\u003e as core::future::future::Future\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n      tokio::runtime::task::raw::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\n   8: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::UnownedTask\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\n      tokio::runtime::blocking::pool::Task::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\n      tokio::runtime::blocking::pool::Inner::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\n      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys_common/backtrace.rs:122:18\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:498:17\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:497:30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/ops/function.rs:227:5\n  10: \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      std::sys::unix::thread::Thread::new::thread_start\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys/unix/thread.rs:108:17\n  11: start_thread\n  12: clone\n code:4000 message:other error (op: read, path: us-east-2/tnc6qwc1v/1/27/_b/d8ec4073017c4c4c91cbec3a551786f4.parquet, source: response part: Parts { status: 500, version: HTTP/1.1, headers: {\"x-amz-request-id\": \"GF7JF5QV52B44APT\", \"x-amz-id-2\": \"l1cfca4c8AAZbCFkHlSy2dLuhM6yKN8lx561IEtCACmGBWgw/zuQWECWcle7ylLI+Sq2itlFBtM=\", \"content-type\": \"application/xml\", \"transfer-encoding\": \"chunked\", \"date\": \"Sat, 16 Apr 2022 08:38:49 GMT\", \"server\": \"AmazonS3\", \"connection\": \"close\"} }, body: \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003cError\u003e\u003cCode\u003eInternalError\u003c/Code\u003e\u003cMessage\u003eWe encountered an internal error. Please try again.\u003c/Message\u003e\u003cRequestId\u003eGF7JF5QV52B44APT\u003c/RequestId\u003e\u003cHostId\u003el1cfca4c8AAZbCFkHlSy2dLuhM6yKN8lx561IEtCACmGBWgw/zuQWECWcle7ylLI+Sq2itlFBtM=\u003c/HostId\u003e\u003c/Error\u003e\") (while in processor thread 24)]","query has error: map[backtrace:   0: common_exception::exception_code::\u003cimpl common_exception::exception::ErrorCode\u003e::StorageOther\n             at workspace/common/exception/src/exception_code.rs:36:66\n      common_exception::exception_into::\u003cimpl core::convert::From\u003cstd::io::error::Error\u003e for common_exception::exception::ErrorCode\u003e::from\n             at workspace/common/exception/src/exception_into.rs:114:18\n   1: \u003ccore::result::Result\u003cT,F\u003e as core::ops::try_trait::FromResidual\u003ccore::result::Result\u003ccore::convert::Infallible,E\u003e\u003e\u003e::from_residual\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/result.rs:2106:27\n      databend_query::storages::fuse::io::read::block_reader::BlockReader::read_column::{{closure}}::{{closure}}\n             at workspace/query/src/storages/fuse/io/read/block_reader.rs:200:25\n      \u003ccore::future::from_generator::GenFuture\u003cT\u003e as core::future::future::Future\u003e::poll\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/future/mod.rs:91:19\n   2: tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n   3: std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n   4: tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n   5: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::LocalNotified\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:448:21\n      tokio::coop::with_budget::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\n      std::thread::local::LocalKey\u003cT\u003e::try_with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:442:16\n      std::thread::local::LocalKey\u003cT\u003e::with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:418:9\n      tokio::coop::with_budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\n      tokio::coop::budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\n      tokio::runtime::thread_pool::worker::Context::run_task\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\n   6: tokio::runtime::thread_pool::worker::Context::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:398:24\n      tokio::runtime::thread_pool::worker::run::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\n      tokio::macros::scoped_tls::ScopedKey\u003cT\u003e::set\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\n      tokio::runtime::thread_pool::worker::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\n   7: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\n      \u003ctokio::runtime::blocking::task::BlockingTask\u003cT\u003e as core::future::future::Future\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n      tokio::runtime::task::raw::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\n   8: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::UnownedTask\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\n      tokio::runtime::blocking::pool::Task::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\n      tokio::runtime::blocking::pool::Inner::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\n      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys_common/backtrace.rs:122:18\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:498:17\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:497:30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/ops/function.rs:227:5\n  10: \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      std::sys::unix::thread::Thread::new::thread_start\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys/unix/thread.rs:108:17\n  11: start_thread\n  12: clone\n code:4000 message:other error (op: read, path: us-east-2/tnc6qwc1v/1/27/_b/d8ec4073017c4c4c91cbec3a551786f4.parquet, source: response part: Parts { status: 500, version: HTTP/1.1, headers: {\"x-amz-request-id\": \"386EYHRZYQ0R929Z\", \"x-amz-id-2\": \"JPzRwE0vjjVJ5dC7uSD0V4v4Ybi/iVXmZUHSYsHYQVwNq6guosqQoGVGUH1ARMRmQq+irMkXgzU=\", \"content-type\": \"application/xml\", \"transfer-encoding\": \"chunked\", \"date\": \"Sat, 16 Apr 2022 08:38:55 GMT\", \"server\": \"AmazonS3\", \"connection\": \"close\"} }, body: \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003cError\u003e\u003cCode\u003eInternalError\u003c/Code\u003e\u003cMessage\u003eWe encountered an internal error. Please try again.\u003c/Message\u003e\u003cRequestId\u003e386EYHRZYQ0R929Z\u003c/RequestId\u003e\u003cHostId\u003eJPzRwE0vjjVJ5dC7uSD0V4v4Ybi/iVXmZUHSYsHYQVwNq6guosqQoGVGUH1ARMRmQq+irMkXgzU=\u003c/HostId\u003e\u003c/Error\u003e\") (while in processor thread 11)]"],"mean":0.2729404104222904},{"name":"Q10","sql":"SELECT avg(cnt) FROM (SELECT Year,Month,count(*) AS cnt FROM default.ontime WHERE DepDel15=1 GROUP BY Year,Month) a;","min":0.393,"max":0.413,"median":0.408,"std_dev":0.008498365855987957,"read_row":202687655,"read_byte":1418813585,"time":[0.408,0.413,0.393],"error":["query has error: map[backtrace:   0: common_exception::exception_code::\u003cimpl common_exception::exception::ErrorCode\u003e::StorageOther\n             at workspace/common/exception/src/exception_code.rs:36:66\n      common_exception::exception_into::\u003cimpl core::convert::From\u003cstd::io::error::Error\u003e for common_exception::exception::ErrorCode\u003e::from\n             at workspace/common/exception/src/exception_into.rs:114:18\n   1: \u003ccore::result::Result\u003cT,F\u003e as core::ops::try_trait::FromResidual\u003ccore::result::Result\u003ccore::convert::Infallible,E\u003e\u003e\u003e::from_residual\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/result.rs:2106:27\n      databend_query::storages::fuse::io::read::block_reader::BlockReader::read_column::{{closure}}::{{closure}}\n             at workspace/query/src/storages/fuse/io/read/block_reader.rs:200:25\n      \u003ccore::future::from_generator::GenFuture\u003cT\u003e as core::future::future::Future\u003e::poll\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/future/mod.rs:91:19\n   2: tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n   3: std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n   4: tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n   5: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::LocalNotified\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:448:21\n      tokio::coop::with_budget::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\n      std::thread::local::LocalKey\u003cT\u003e::try_with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:442:16\n      std::thread::local::LocalKey\u003cT\u003e::with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:418:9\n      tokio::coop::with_budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\n      tokio::coop::budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\n      tokio::runtime::thread_pool::worker::Context::run_task\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\n   6: tokio::runtime::thread_pool::worker::Context::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:398:24\n      tokio::runtime::thread_pool::worker::run::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\n      tokio::macros::scoped_tls::ScopedKey\u003cT\u003e::set\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\n      tokio::runtime::thread_pool::worker::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\n   7: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\n      \u003ctokio::runtime::blocking::task::BlockingTask\u003cT\u003e as core::future::future::Future\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n      tokio::runtime::task::raw::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\n   8: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::UnownedTask\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\n      tokio::runtime::blocking::pool::Task::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\n      tokio::runtime::blocking::pool::Inner::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\n      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys_common/backtrace.rs:122:18\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:498:17\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:497:30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/ops/function.rs:227:5\n  10: \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      std::sys::unix::thread::Thread::new::thread_start\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys/unix/thread.rs:108:17\n  11: start_thread\n  12: clone\n code:4000 message:other error (op: read, path: us-east-2/tnc6qwc1v/1/27/_b/be3b945771e44087962870a70cee442c.parquet, source: response part: Parts { status: 500, version: HTTP/1.1, headers: {\"x-amz-request-id\": \"SBPB3TMQMJNMTN0H\", \"x-amz-id-2\": \"fN9jiXk/+OMd/a0O6AaaDg5xzxQf7DcLdwgjHRdJ/W2LI4CKlgyx45mISHTOnwg9PChIj1ZR6yo=\", \"content-type\": \"application/xml\", \"transfer-encoding\": \"chunked\", \"date\": \"Sat, 16 Apr 2022 08:39:07 GMT\", \"server\": \"AmazonS3\", \"connection\": \"close\"} }, body: \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003cError\u003e\u003cCode\u003eInternalError\u003c/Code\u003e\u003cMessage\u003eWe encountered an internal error. Please try again.\u003c/Message\u003e\u003cRequestId\u003eSBPB3TMQMJNMTN0H\u003c/RequestId\u003e\u003cHostId\u003efN9jiXk/+OMd/a0O6AaaDg5xzxQf7DcLdwgjHRdJ/W2LI4CKlgyx45mISHTOnwg9PChIj1ZR6yo=\u003c/HostId\u003e\u003c/Error\u003e\") (while in processor thread 35)]","query has error: map[backtrace:   0: common_exception::exception_code::\u003cimpl common_exception::exception::ErrorCode\u003e::StorageOther\n             at workspace/common/exception/src/exception_code.rs:36:66\n      common_exception::exception_into::\u003cimpl core::convert::From\u003cstd::io::error::Error\u003e for common_exception::exception::ErrorCode\u003e::from\n             at workspace/common/exception/src/exception_into.rs:114:18\n   1: \u003ccore::result::Result\u003cT,F\u003e as core::ops::try_trait::FromResidual\u003ccore::result::Result\u003ccore::convert::Infallible,E\u003e\u003e\u003e::from_residual\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/result.rs:2106:27\n      databend_query::storages::fuse::io::read::block_reader::BlockReader::read_column::{{closure}}::{{closure}}\n             at workspace/query/src/storages/fuse/io/read/block_reader.rs:200:25\n      \u003ccore::future::from_generator::GenFuture\u003cT\u003e as core::future::future::Future\u003e::poll\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/future/mod.rs:91:19\n   2: tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n   3: std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n   4: tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n   5: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::LocalNotified\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:448:21\n      tokio::coop::with_budget::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\n      std::thread::local::LocalKey\u003cT\u003e::try_with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:442:16\n      std::thread::local::LocalKey\u003cT\u003e::with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:418:9\n      tokio::coop::with_budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\n      tokio::coop::budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\n      tokio::runtime::thread_pool::worker::Context::run_task\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\n   6: tokio::runtime::thread_pool::worker::Context::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:398:24\n      tokio::runtime::thread_pool::worker::run::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\n      tokio::macros::scoped_tls::ScopedKey\u003cT\u003e::set\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\n      tokio::runtime::thread_pool::worker::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\n   7: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\n      \u003ctokio::runtime::blocking::task::BlockingTask\u003cT\u003e as core::future::future::Future\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n      tokio::runtime::task::raw::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\n   8: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::UnownedTask\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\n      tokio::runtime::blocking::pool::Task::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\n      tokio::runtime::blocking::pool::Inner::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\n      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys_common/backtrace.rs:122:18\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:498:17\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:497:30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/ops/function.rs:227:5\n  10: \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      std::sys::unix::thread::Thread::new::thread_start\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys/unix/thread.rs:108:17\n  11: start_thread\n  12: clone\n code:4000 message:other error (op: read, path: us-east-2/tnc6qwc1v/1/27/_b/d8ec4073017c4c4c91cbec3a551786f4.parquet, source: response part: Parts { status: 500, version: HTTP/1.1, headers: {\"x-amz-request-id\": \"C1S6KA6H8GHJH8RT\", \"x-amz-id-2\": \"GrZo+LUT1g2dTN8emRYBTXlI6YXdt0fLU1FkAXkrNmO6cuymW6qT1IZzAeZtD4NKnogdAAmmIK0=\", \"content-type\": \"application/xml\", \"transfer-encoding\": \"chunked\", \"date\": \"Sat, 16 Apr 2022 08:39:12 GMT\", \"server\": \"AmazonS3\", \"connection\": \"close\"} }, body: \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003cError\u003e\u003cCode\u003eInternalError\u003c/Code\u003e\u003cMessage\u003eWe encountered an internal error. Please try again.\u003c/Message\u003e\u003cRequestId\u003eC1S6KA6H8GHJH8RT\u003c/RequestId\u003e\u003cHostId\u003eGrZo+LUT1g2dTN8emRYBTXlI6YXdt0fLU1FkAXkrNmO6cuymW6qT1IZzAeZtD4NKnogdAAmmIK0=\u003c/HostId\u003e\u003c/Error\u003e\") (while in processor thread 6)]","query has error: map[backtrace:   0: common_exception::exception_code::\u003cimpl common_exception::exception::ErrorCode\u003e::StorageOther\n             at workspace/common/exception/src/exception_code.rs:36:66\n      common_exception::exception_into::\u003cimpl core::convert::From\u003cstd::io::error::Error\u003e for common_exception::exception::ErrorCode\u003e::from\n             at workspace/common/exception/src/exception_into.rs:114:18\n   1: \u003ccore::result::Result\u003cT,F\u003e as core::ops::try_trait::FromResidual\u003ccore::result::Result\u003ccore::convert::Infallible,E\u003e\u003e\u003e::from_residual\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/result.rs:2106:27\n      databend_query::storages::fuse::io::read::block_reader::BlockReader::read_column::{{closure}}::{{closure}}\n             at workspace/query/src/storages/fuse/io/read/block_reader.rs:200:25\n      \u003ccore::future::from_generator::GenFuture\u003cT\u003e as core::future::future::Future\u003e::poll\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/future/mod.rs:91:19\n   2: tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n   3: std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n   4: tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n   5: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::LocalNotified\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:448:21\n      tokio::coop::with_budget::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\n      std::thread::local::LocalKey\u003cT\u003e::try_with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:442:16\n      std::thread::local::LocalKey\u003cT\u003e::with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:418:9\n      tokio::coop::with_budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\n      tokio::coop::budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\n      tokio::runtime::thread_pool::worker::Context::run_task\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\n   6: tokio::runtime::thread_pool::worker::Context::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:398:24\n      tokio::runtime::thread_pool::worker::run::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\n      tokio::macros::scoped_tls::ScopedKey\u003cT\u003e::set\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\n      tokio::runtime::thread_pool::worker::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\n   7: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\n      \u003ctokio::runtime::blocking::task::BlockingTask\u003cT\u003e as core::future::future::Future\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n      tokio::runtime::task::raw::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\n   8: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::UnownedTask\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\n      tokio::runtime::blocking::pool::Task::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\n      tokio::runtime::blocking::pool::Inner::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\n      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys_common/backtrace.rs:122:18\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:498:17\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:497:30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/ops/function.rs:227:5\n  10: \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      std::sys::unix::thread::Thread::new::thread_start\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys/unix/thread.rs:108:17\n  11: start_thread\n  12: clone\n code:4000 message:other error (op: read, path: us-east-2/tnc6qwc1v/1/27/_b/d8ec4073017c4c4c91cbec3a551786f4.parquet, source: response part: Parts { status: 500, version: HTTP/1.1, headers: {\"x-amz-request-id\": \"B486XVRQXDFVYM3G\", \"x-amz-id-2\": \"yvGStOHWt3qWBZLo0KVR4fIagqwcUC0HlRYoB20XXJDArrPEyMQTnzFkYMQDbQINJPFg2IiCCG4=\", \"content-type\": \"application/xml\", \"transfer-encoding\": \"chunked\", \"date\": \"Sat, 16 Apr 2022 08:39:17 GMT\", \"server\": \"AmazonS3\", \"connection\": \"close\"} }, body: \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003cError\u003e\u003cCode\u003eInternalError\u003c/Code\u003e\u003cMessage\u003eWe encountered an internal error. Please try again.\u003c/Message\u003e\u003cRequestId\u003eB486XVRQXDFVYM3G\u003c/RequestId\u003e\u003cHostId\u003eyvGStOHWt3qWBZLo0KVR4fIagqwcUC0HlRYoB20XXJDArrPEyMQTnzFkYMQDbQINJPFg2IiCCG4=\u003c/HostId\u003e\u003c/Error\u003e\") (while in processor thread 4)]","query has error: map[backtrace:   0: common_exception::exception_code::\u003cimpl common_exception::exception::ErrorCode\u003e::StorageOther\n             at workspace/common/exception/src/exception_code.rs:36:66\n      common_exception::exception_into::\u003cimpl core::convert::From\u003cstd::io::error::Error\u003e for common_exception::exception::ErrorCode\u003e::from\n             at workspace/common/exception/src/exception_into.rs:114:18\n   1: \u003ccore::result::Result\u003cT,F\u003e as core::ops::try_trait::FromResidual\u003ccore::result::Result\u003ccore::convert::Infallible,E\u003e\u003e\u003e::from_residual\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/result.rs:2106:27\n      databend_query::storages::fuse::io::read::block_reader::BlockReader::read_column::{{closure}}::{{closure}}\n             at workspace/query/src/storages/fuse/io/read/block_reader.rs:200:25\n      \u003ccore::future::from_generator::GenFuture\u003cT\u003e as core::future::future::Future\u003e::poll\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/future/mod.rs:91:19\n   2: tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n   3: std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n   4: tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n   5: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::LocalNotified\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:448:21\n      tokio::coop::with_budget::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\n      std::thread::local::LocalKey\u003cT\u003e::try_with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:442:16\n      std::thread::local::LocalKey\u003cT\u003e::with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:418:9\n      tokio::coop::with_budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\n      tokio::coop::budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\n      tokio::runtime::thread_pool::worker::Context::run_task\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\n   6: tokio::runtime::thread_pool::worker::Context::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:398:24\n      tokio::runtime::thread_pool::worker::run::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\n      tokio::macros::scoped_tls::ScopedKey\u003cT\u003e::set\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\n      tokio::runtime::thread_pool::worker::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\n   7: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\n      \u003ctokio::runtime::blocking::task::BlockingTask\u003cT\u003e as core::future::future::Future\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n      tokio::runtime::task::raw::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\n   8: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::UnownedTask\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\n      tokio::runtime::blocking::pool::Task::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\n      tokio::runtime::blocking::pool::Inner::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\n      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys_common/backtrace.rs:122:18\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:498:17\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:497:30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/ops/function.rs:227:5\n  10: \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      std::sys::unix::thread::Thread::new::thread_start\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys/unix/thread.rs:108:17\n  11: start_thread\n  12: clone\n code:4000 message:other error (op: read, path: us-east-2/tnc6qwc1v/1/27/_b/d8ec4073017c4c4c91cbec3a551786f4.parquet, source: response part: Parts { status: 500, version: HTTP/1.1, headers: {\"x-amz-request-id\": \"5JMHRM46ND60EVJE\", \"x-amz-id-2\": \"R8p2IiuOXsbyUBnbbrJn5MPJ50mV6zBMIMxcic8sfGCoNzTQf7jTG63c1FhXpiI3Suq36pi5BrI=\", \"content-type\": \"application/xml\", \"transfer-encoding\": \"chunked\", \"date\": \"Sat, 16 Apr 2022 08:39:23 GMT\", \"server\": \"AmazonS3\", \"connection\": \"close\"} }, body: \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003cError\u003e\u003cCode\u003eInternalError\u003c/Code\u003e\u003cMessage\u003eWe encountered an internal error. Please try again.\u003c/Message\u003e\u003cRequestId\u003e5JMHRM46ND60EVJE\u003c/RequestId\u003e\u003cHostId\u003eR8p2IiuOXsbyUBnbbrJn5MPJ50mV6zBMIMxcic8sfGCoNzTQf7jTG63c1FhXpiI3Suq36pi5BrI=\u003c/HostId\u003e\u003c/Error\u003e\") (while in processor thread 8)]","query has error: map[backtrace:   0: common_exception::exception_code::\u003cimpl common_exception::exception::ErrorCode\u003e::StorageOther\n             at workspace/common/exception/src/exception_code.rs:36:66\n      common_exception::exception_into::\u003cimpl core::convert::From\u003cstd::io::error::Error\u003e for common_exception::exception::ErrorCode\u003e::from\n             at workspace/common/exception/src/exception_into.rs:114:18\n   1: \u003ccore::result::Result\u003cT,F\u003e as core::ops::try_trait::FromResidual\u003ccore::result::Result\u003ccore::convert::Infallible,E\u003e\u003e\u003e::from_residual\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/result.rs:2106:27\n      databend_query::storages::fuse::io::read::block_reader::BlockReader::read_column::{{closure}}::{{closure}}\n             at workspace/query/src/storages/fuse/io/read/block_reader.rs:200:25\n      \u003ccore::future::from_generator::GenFuture\u003cT\u003e as core::future::future::Future\u003e::poll\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/future/mod.rs:91:19\n   2: tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n   3: std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n   4: tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n   5: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::LocalNotified\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:448:21\n      tokio::coop::with_budget::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\n      std::thread::local::LocalKey\u003cT\u003e::try_with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:442:16\n      std::thread::local::LocalKey\u003cT\u003e::with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:418:9\n      tokio::coop::with_budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\n      tokio::coop::budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\n      tokio::runtime::thread_pool::worker::Context::run_task\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\n   6: tokio::runtime::thread_pool::worker::Context::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:398:24\n      tokio::runtime::thread_pool::worker::run::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\n      tokio::macros::scoped_tls::ScopedKey\u003cT\u003e::set\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\n      tokio::runtime::thread_pool::worker::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\n   7: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\n      \u003ctokio::runtime::blocking::task::BlockingTask\u003cT\u003e as core::future::future::Future\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n      tokio::runtime::task::raw::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\n   8: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::UnownedTask\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\n      tokio::runtime::blocking::pool::Task::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\n      tokio::runtime::blocking::pool::Inner::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\n      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys_common/backtrace.rs:122:18\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:498:17\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:497:30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/ops/function.rs:227:5\n  10: \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      std::sys::unix::thread::Thread::new::thread_start\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys/unix/thread.rs:108:17\n  11: start_thread\n  12: clone\n code:4000 message:other error (op: read, path: us-east-2/tnc6qwc1v/1/27/_b/d8ec4073017c4c4c91cbec3a551786f4.parquet, source: response part: Parts { status: 500, version: HTTP/1.1, headers: {\"x-amz-request-id\": \"F828CWDVHPYQM5YE\", \"x-amz-id-2\": \"9FgQIUHGphy3Angz9hE7U+UHy0xepwQC23t5IWeOaLDc44x27PbipplIXNaVDrc+/RiP7FCZh7g=\", \"content-type\": \"application/xml\", \"transfer-encoding\": \"chunked\", \"date\": \"Sat, 16 Apr 2022 08:39:28 GMT\", \"server\": \"AmazonS3\", \"connection\": \"close\"} }, body: \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003cError\u003e\u003cCode\u003eInternalError\u003c/Code\u003e\u003cMessage\u003eWe encountered an internal error. Please try again.\u003c/Message\u003e\u003cRequestId\u003eF828CWDVHPYQM5YE\u003c/RequestId\u003e\u003cHostId\u003e9FgQIUHGphy3Angz9hE7U+UHy0xepwQC23t5IWeOaLDc44x27PbipplIXNaVDrc+/RiP7FCZh7g=\u003c/HostId\u003e\u003c/Error\u003e\") (while in processor thread 26)]","query has error: map[backtrace:   0: common_exception::exception_code::\u003cimpl common_exception::exception::ErrorCode\u003e::StorageOther\n             at workspace/common/exception/src/exception_code.rs:36:66\n      common_exception::exception_into::\u003cimpl core::convert::From\u003cstd::io::error::Error\u003e for common_exception::exception::ErrorCode\u003e::from\n             at workspace/common/exception/src/exception_into.rs:114:18\n   1: \u003ccore::result::Result\u003cT,F\u003e as core::ops::try_trait::FromResidual\u003ccore::result::Result\u003ccore::convert::Infallible,E\u003e\u003e\u003e::from_residual\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/result.rs:2106:27\n      databend_query::storages::fuse::io::read::block_reader::BlockReader::read_column::{{closure}}::{{closure}}\n             at workspace/query/src/storages/fuse/io/read/block_reader.rs:200:25\n      \u003ccore::future::from_generator::GenFuture\u003cT\u003e as core::future::future::Future\u003e::poll\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/future/mod.rs:91:19\n   2: tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n   3: std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n   4: tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n   5: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::LocalNotified\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:448:21\n      tokio::coop::with_budget::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\n      std::thread::local::LocalKey\u003cT\u003e::try_with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:442:16\n      std::thread::local::LocalKey\u003cT\u003e::with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:418:9\n      tokio::coop::with_budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\n      tokio::coop::budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\n      tokio::runtime::thread_pool::worker::Context::run_task\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\n   6: tokio::runtime::thread_pool::worker::Context::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:398:24\n      tokio::runtime::thread_pool::worker::run::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\n      tokio::macros::scoped_tls::ScopedKey\u003cT\u003e::set\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\n      tokio::runtime::thread_pool::worker::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\n   7: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\n      \u003ctokio::runtime::blocking::task::BlockingTask\u003cT\u003e as core::future::future::Future\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n      tokio::runtime::task::raw::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\n   8: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::UnownedTask\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\n      tokio::runtime::blocking::pool::Task::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\n      tokio::runtime::blocking::pool::Inner::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\n      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys_common/backtrace.rs:122:18\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:498:17\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:497:30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/ops/function.rs:227:5\n  10: \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      std::sys::unix::thread::Thread::new::thread_start\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys/unix/thread.rs:108:17\n  11: start_thread\n  12: clone\n code:4000 message:other error (op: read, path: us-east-2/tnc6qwc1v/1/27/_b/d8ec4073017c4c4c91cbec3a551786f4.parquet, source: response part: Parts { status: 500, version: HTTP/1.1, headers: {\"x-amz-request-id\": \"2FTRB8SJV3381ZQ6\", \"x-amz-id-2\": \"+cq+hjydYUV8LgdIio3MOlEbQxl96dHBjPLCfrJPXl9/uOkntbC6YtgavDS60/er7tVv1bwpU5I=\", \"content-type\": \"application/xml\", \"transfer-encoding\": \"chunked\", \"date\": \"Sat, 16 Apr 2022 08:39:33 GMT\", \"server\": \"AmazonS3\", \"connection\": \"close\"} }, body: \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003cError\u003e\u003cCode\u003eInternalError\u003c/Code\u003e\u003cMessage\u003eWe encountered an internal error. Please try again.\u003c/Message\u003e\u003cRequestId\u003e2FTRB8SJV3381ZQ6\u003c/RequestId\u003e\u003cHostId\u003e+cq+hjydYUV8LgdIio3MOlEbQxl96dHBjPLCfrJPXl9/uOkntbC6YtgavDS60/er7tVv1bwpU5I=\u003c/HostId\u003e\u003c/Error\u003e\") (while in processor thread 16)]","query has error: map[backtrace:   0: common_exception::exception_code::\u003cimpl common_exception::exception::ErrorCode\u003e::StorageOther\n             at workspace/common/exception/src/exception_code.rs:36:66\n      common_exception::exception_into::\u003cimpl core::convert::From\u003cstd::io::error::Error\u003e for common_exception::exception::ErrorCode\u003e::from\n             at workspace/common/exception/src/exception_into.rs:114:18\n   1: \u003ccore::result::Result\u003cT,F\u003e as core::ops::try_trait::FromResidual\u003ccore::result::Result\u003ccore::convert::Infallible,E\u003e\u003e\u003e::from_residual\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/result.rs:2106:27\n      databend_query::storages::fuse::io::read::block_reader::BlockReader::read_column::{{closure}}::{{closure}}\n             at workspace/query/src/storages/fuse/io/read/block_reader.rs:200:25\n      \u003ccore::future::from_generator::GenFuture\u003cT\u003e as core::future::future::Future\u003e::poll\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/future/mod.rs:91:19\n   2: tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n   3: std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n   4: tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n   5: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::LocalNotified\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:448:21\n      tokio::coop::with_budget::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\n      std::thread::local::LocalKey\u003cT\u003e::try_with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:442:16\n      std::thread::local::LocalKey\u003cT\u003e::with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:418:9\n      tokio::coop::with_budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\n      tokio::coop::budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\n      tokio::runtime::thread_pool::worker::Context::run_task\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\n   6: tokio::runtime::thread_pool::worker::Context::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:398:24\n      tokio::runtime::thread_pool::worker::run::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\n      tokio::macros::scoped_tls::ScopedKey\u003cT\u003e::set\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\n      tokio::runtime::thread_pool::worker::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\n   7: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\n      \u003ctokio::runtime::blocking::task::BlockingTask\u003cT\u003e as core::future::future::Future\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n      tokio::runtime::task::raw::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\n   8: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::UnownedTask\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\n      tokio::runtime::blocking::pool::Task::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\n      tokio::runtime::blocking::pool::Inner::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\n      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys_common/backtrace.rs:122:18\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:498:17\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:497:30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/ops/function.rs:227:5\n  10: \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      std::sys::unix::thread::Thread::new::thread_start\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys/unix/thread.rs:108:17\n  11: start_thread\n  12: clone\n code:4000 message:other error (op: read, path: us-east-2/tnc6qwc1v/1/27/_b/1a0fd6dae0ce4e9a900ca5747721cb4f.parquet, source: response part: Parts { status: 500, version: HTTP/1.1, headers: {\"x-amz-request-id\": \"VQWTYKRAVB9PAJVC\", \"x-amz-id-2\": \"9e08aUpnP6VUi0G4ar9HzQt5EGKH5p5nZDCHVeAYwHp6J//b6SFG5XOgoZxP9Wbm58oEPG2HiaY=\", \"content-type\": \"application/xml\", \"transfer-encoding\": \"chunked\", \"date\": \"Sat, 16 Apr 2022 08:39:39 GMT\", \"server\": \"AmazonS3\", \"connection\": \"close\"} }, body: \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003cError\u003e\u003cCode\u003eInternalError\u003c/Code\u003e\u003cMessage\u003eWe encountered an internal error. Please try again.\u003c/Message\u003e\u003cRequestId\u003eVQWTYKRAVB9PAJVC\u003c/RequestId\u003e\u003cHostId\u003e9e08aUpnP6VUi0G4ar9HzQt5EGKH5p5nZDCHVeAYwHp6J//b6SFG5XOgoZxP9Wbm58oEPG2HiaY=\u003c/HostId\u003e\u003c/Error\u003e\") (while in processor thread 22)]"],"mean":0.4045767503335481},{"name":"Q11","sql":"SELECT avg(c1) FROM (SELECT Year,Month,count(*) AS c1 FROM default.ontime GROUP BY Year,Month) a;","min":0.371,"max":0.394,"median":0.379,"std_dev":0.007430343195303975,"read_row":202687655,"read_byte":608062965,"time":[0.386,0.375,0.373,0.394,0.39,0.385,0.371,0.375,0.376,0.382],"error":[],"mean":0.3806278262927551},{"name":"Q12","sql":"SELECT OriginCityName, DestCityName, count(*) AS c FROM default.ontime GROUP BY OriginCityName, DestCityName ORDER BY c DESC LIMIT 10;","min":2.649,"max":2.755,"median":2.6995,"std_dev":0.027865570153865538,"read_row":202687655,"read_byte":8577734458,"time":[2.675,2.695,2.697,2.72,2.702,2.704,2.678,2.649,2.755,2.724],"error":[],"mean":2.6997563266115225},{"name":"Q13","sql":"SELECT OriginCityName, count(*) AS c FROM default.ontime GROUP BY OriginCityName ORDER BY c DESC LIMIT 10;","min":1.033,"max":1.077,"median":1.0495,"std_dev":0.013268006632497598,"read_row":202687655,"read_byte":4288897398,"time":[1.073,1.033,1.058,1.05,1.042,1.049,1.077,1.041,1.056,1.045],"error":[],"mean":1.0523167564323097},{"name":"Q14","sql":"SELECT count(*) FROM default.ontime;","min":0.007,"max":0.017,"median":0.0095,"std_dev":0.0027129319932501076,"read_row":1,"read_byte":1,"time":[0.013,0.01,0.01,0.01,0.017,0.009,0.009,0.009,0.008,0.007],"error":[],"mean":0.009897620159608152}]}