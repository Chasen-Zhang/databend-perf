{"metadata":{"table":"ontime","tag":"v0.7.19-nightly","size":"XXXLarge"},"schema":[{"name":"Q1","sql":"SELECT DayOfWeek, count(*) AS c FROM default.ontime WHERE Year \u003e= 2000 AND Year \u003c= 2008 GROUP BY DayOfWeek ORDER BY c DESC;","min":0.139,"max":0.166,"median":0.1445,"std_dev":0.00879147314162991,"read_row":61000000,"read_byte":183000000,"time":[0.145,0.148,0.166,0.163,0.139,0.144,0.142,0.144,0.143,0.155],"error":[],"mean":0.14864904638313337},{"name":"Q2","sql":"SELECT DayOfWeek, count(*) AS c FROM default.ontime WHERE DepDelay\u003e10 AND Year \u003e= 2000 AND Year \u003c= 2008 GROUP BY DayOfWeek ORDER BY c DESC;","min":0.209,"max":0.301,"median":0.238,"std_dev":0.030451337419188727,"read_row":61000000,"read_byte":427000000,"time":[0.253,0.301,0.27,0.209,0.289,0.238,0.23,0.217,0.227],"error":["query has error: map[backtrace:   0: common_exception::exception_code::\u003cimpl common_exception::exception::ErrorCode\u003e::StorageOther\n             at workspace/common/exception/src/exception_code.rs:36:66\n      common_exception::exception_into::\u003cimpl core::convert::From\u003cstd::io::error::Error\u003e for common_exception::exception::ErrorCode\u003e::from\n             at workspace/common/exception/src/exception_into.rs:114:18\n   1: \u003ccore::result::Result\u003cT,F\u003e as core::ops::try_trait::FromResidual\u003ccore::result::Result\u003ccore::convert::Infallible,E\u003e\u003e\u003e::from_residual\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/result.rs:2106:27\n      databend_query::storages::fuse::io::read::block_reader::BlockReader::read_column::{{closure}}::{{closure}}\n             at workspace/query/src/storages/fuse/io/read/block_reader.rs:200:25\n      \u003ccore::future::from_generator::GenFuture\u003cT\u003e as core::future::future::Future\u003e::poll\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/future/mod.rs:91:19\n   2: tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n   3: std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n   4: tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n   5: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::LocalNotified\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:448:21\n      tokio::coop::with_budget::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\n      std::thread::local::LocalKey\u003cT\u003e::try_with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:442:16\n      std::thread::local::LocalKey\u003cT\u003e::with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:418:9\n      tokio::coop::with_budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\n      tokio::coop::budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\n      tokio::runtime::thread_pool::worker::Context::run_task\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\n   6: tokio::runtime::thread_pool::worker::Context::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:398:24\n      tokio::runtime::thread_pool::worker::run::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\n      tokio::macros::scoped_tls::ScopedKey\u003cT\u003e::set\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\n      tokio::runtime::thread_pool::worker::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\n   7: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\n      \u003ctokio::runtime::blocking::task::BlockingTask\u003cT\u003e as core::future::future::Future\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n      tokio::runtime::task::raw::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\n   8: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::UnownedTask\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\n      tokio::runtime::blocking::pool::Task::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\n      tokio::runtime::blocking::pool::Inner::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\n      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys_common/backtrace.rs:122:18\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:498:17\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:497:30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/ops/function.rs:227:5\n  10: \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      std::sys::unix::thread::Thread::new::thread_start\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys/unix/thread.rs:108:17\n  11: start_thread\n  12: clone\n code:4000 message:other error (op: read, path: us-east-2/tnc6qwc1v/1/27/_b/90a713e0135b43f0b854a13e35908f7a.parquet, source: response part: Parts { status: 500, version: HTTP/1.1, headers: {\"x-amz-request-id\": \"V4BKRAKH3W0R512R\", \"x-amz-id-2\": \"hFWaUiEV1HCUS8CNXNaYHQitDc9r8jzNd3cBBOItbDsSHW2rcTDXrO1gL8af1Bn7a1UWfVgunqE=\", \"content-type\": \"application/xml\", \"transfer-encoding\": \"chunked\", \"date\": \"Sat, 16 Apr 2022 09:07:38 GMT\", \"server\": \"AmazonS3\", \"connection\": \"close\"} }, body: \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003cError\u003e\u003cCode\u003eInternalError\u003c/Code\u003e\u003cMessage\u003eWe encountered an internal error. Please try again.\u003c/Message\u003e\u003cRequestId\u003eV4BKRAKH3W0R512R\u003c/RequestId\u003e\u003cHostId\u003ehFWaUiEV1HCUS8CNXNaYHQitDc9r8jzNd3cBBOItbDsSHW2rcTDXrO1gL8af1Bn7a1UWfVgunqE=\u003c/HostId\u003e\u003c/Error\u003e\") (while in processor thread 34)]"],"mean":0.24640749946880552},{"name":"Q3","sql":"SELECT Origin, count(*) AS c FROM default.ontime WHERE DepDelay\u003e10 AND Year \u003e= 2000 AND Year \u003c= 2008 GROUP BY Origin ORDER BY c DESC LIMIT 10;","min":0.288,"max":0.315,"median":0.298,"std_dev":0.008556284240252898,"read_row":61000000,"read_byte":1037000488,"time":[0.304,0.303,0.288,0.315,0.288,0.304,0.297,0.289,0.299,0.29],"error":[],"mean":0.29757804093940954},{"name":"Q4","sql":"SELECT IATA_CODE_Reporting_Airline AS Carrier, count() FROM default.ontime WHERE DepDelay\u003e10 AND Year = 2007 GROUP BY Carrier ORDER BY count() DESC;","min":0.095,"max":0.131,"median":0.115,"std_dev":0.012304877081872863,"read_row":8000000,"read_byte":128000064,"time":[0.095,0.115,0.127,0.097,0.1,0.124,0.131,0.104,0.115,0.119],"error":[],"mean":0.11202031827749377},{"name":"Q5","sql":"SELECT IATA_CODE_Reporting_Airline AS Carrier, avg(cast(DepDelay\u003e10 as Int8))*1000 AS c3 FROM default.ontime WHERE Year=2007 GROUP BY Carrier ORDER BY c3 DESC;","min":0.111,"max":0.142,"median":0.1195,"std_dev":0.01176817742898194,"read_row":8000000,"read_byte":128000064,"time":[0.138,0.134,0.115,0.111,0.142,0.12,0.115,0.142,0.119,0.115],"error":[],"mean":0.12455768504088965},{"name":"Q6","sql":"SELECT IATA_CODE_Reporting_Airline AS Carrier, avg(cast(DepDelay\u003e10 as Int8))*1000 AS c3 FROM default.ontime WHERE Year\u003e=2000 AND Year \u003c=2008 GROUP BY Carrier ORDER BY c3 DESC;","min":0.329,"max":0.357,"median":0.331,"std_dev":0.008421020142887288,"read_row":61000000,"read_byte":976000488,"time":[0.33,0.331,0.337,0.329,0.33,0.336,0.33,0.34,0.357],"error":["query has error: map[backtrace:   0: common_exception::exception_code::\u003cimpl common_exception::exception::ErrorCode\u003e::StorageOther\n             at workspace/common/exception/src/exception_code.rs:36:66\n      common_exception::exception_into::\u003cimpl core::convert::From\u003cstd::io::error::Error\u003e for common_exception::exception::ErrorCode\u003e::from\n             at workspace/common/exception/src/exception_into.rs:114:18\n   1: \u003ccore::result::Result\u003cT,F\u003e as core::ops::try_trait::FromResidual\u003ccore::result::Result\u003ccore::convert::Infallible,E\u003e\u003e\u003e::from_residual\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/result.rs:2106:27\n      databend_query::storages::fuse::io::read::block_reader::BlockReader::read_column::{{closure}}::{{closure}}\n             at workspace/query/src/storages/fuse/io/read/block_reader.rs:200:25\n      \u003ccore::future::from_generator::GenFuture\u003cT\u003e as core::future::future::Future\u003e::poll\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/future/mod.rs:91:19\n   2: tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n   3: std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n   4: tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n   5: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::LocalNotified\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:448:21\n      tokio::coop::with_budget::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\n      std::thread::local::LocalKey\u003cT\u003e::try_with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:442:16\n      std::thread::local::LocalKey\u003cT\u003e::with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:418:9\n      tokio::coop::with_budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\n      tokio::coop::budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\n      tokio::runtime::thread_pool::worker::Context::run_task\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\n   6: tokio::runtime::thread_pool::worker::Context::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:398:24\n      tokio::runtime::thread_pool::worker::run::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\n      tokio::macros::scoped_tls::ScopedKey\u003cT\u003e::set\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\n      tokio::runtime::thread_pool::worker::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\n   7: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\n      \u003ctokio::runtime::blocking::task::BlockingTask\u003cT\u003e as core::future::future::Future\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n      tokio::runtime::task::raw::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\n   8: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::UnownedTask\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\n      tokio::runtime::blocking::pool::Task::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\n      tokio::runtime::blocking::pool::Inner::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\n      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys_common/backtrace.rs:122:18\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:498:17\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:497:30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/ops/function.rs:227:5\n  10: \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      std::sys::unix::thread::Thread::new::thread_start\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys/unix/thread.rs:108:17\n  11: start_thread\n  12: clone\n code:4000 message:other error (op: read, path: us-east-2/tnc6qwc1v/1/27/_b/e8b1ae4ad04f488d96a1b4611d9c714f.parquet, source: response part: Parts { status: 500, version: HTTP/1.1, headers: {\"x-amz-request-id\": \"GKKKMVHVFJCYVCFY\", \"x-amz-id-2\": \"Ds7bc+IcV7EuoywXBrLFJgQ3JDqnz+8HybWDujIebBipUgSKOUsBibDJCxPv9MhvYn6C6xVZPIM=\", \"content-type\": \"application/xml\", \"transfer-encoding\": \"chunked\", \"date\": \"Sat, 16 Apr 2022 09:08:05 GMT\", \"server\": \"AmazonS3\", \"connection\": \"close\"} }, body: \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003cError\u003e\u003cCode\u003eInternalError\u003c/Code\u003e\u003cMessage\u003eWe encountered an internal error. Please try again.\u003c/Message\u003e\u003cRequestId\u003eGKKKMVHVFJCYVCFY\u003c/RequestId\u003e\u003cHostId\u003eDs7bc+IcV7EuoywXBrLFJgQ3JDqnz+8HybWDujIebBipUgSKOUsBibDJCxPv9MhvYn6C6xVZPIM=\u003c/HostId\u003e\u003c/Error\u003e\") (while in processor thread 32)]"],"mean":0.3354527340460251},{"name":"Q7","sql":"SELECT IATA_CODE_Reporting_Airline AS Carrier, avg(DepDelay) * 1000 AS c3 FROM default.ontime WHERE Year \u003e= 2000 AND Year \u003c= 2008 GROUP BY Carrier;","min":0.325,"max":0.345,"median":0.336,"std_dev":0.006363175307973212,"read_row":61000000,"read_byte":976000488,"time":[0.334,0.333,0.331,0.345,0.342,0.338,0.328,0.342,0.341,0.325],"error":[],"mean":0.33583954165420843},{"name":"Q8","sql":"SELECT Year, avg(DepDelay) FROM default.ontime GROUP BY Year;","min":0.437,"max":0.506,"median":0.455,"std_dev":0.021432063207571343,"read_row":202687655,"read_byte":1216125930,"time":[0.506,0.456,0.454,0.437,0.461,0.452],"error":["query has error: map[backtrace:   0: common_exception::exception_code::\u003cimpl common_exception::exception::ErrorCode\u003e::StorageOther\n             at workspace/common/exception/src/exception_code.rs:36:66\n      common_exception::exception_into::\u003cimpl core::convert::From\u003cstd::io::error::Error\u003e for common_exception::exception::ErrorCode\u003e::from\n             at workspace/common/exception/src/exception_into.rs:114:18\n   1: \u003ccore::result::Result\u003cT,F\u003e as core::ops::try_trait::FromResidual\u003ccore::result::Result\u003ccore::convert::Infallible,E\u003e\u003e\u003e::from_residual\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/result.rs:2106:27\n      databend_query::storages::fuse::io::read::block_reader::BlockReader::read_column::{{closure}}::{{closure}}\n             at workspace/query/src/storages/fuse/io/read/block_reader.rs:200:25\n      \u003ccore::future::from_generator::GenFuture\u003cT\u003e as core::future::future::Future\u003e::poll\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/future/mod.rs:91:19\n   2: tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n   3: std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n   4: tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n   5: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::LocalNotified\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:448:21\n      tokio::coop::with_budget::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\n      std::thread::local::LocalKey\u003cT\u003e::try_with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:442:16\n      std::thread::local::LocalKey\u003cT\u003e::with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:418:9\n      tokio::coop::with_budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\n      tokio::coop::budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\n      tokio::runtime::thread_pool::worker::Context::run_task\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\n   6: tokio::runtime::thread_pool::worker::Context::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:398:24\n      tokio::runtime::thread_pool::worker::run::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\n      tokio::macros::scoped_tls::ScopedKey\u003cT\u003e::set\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\n      tokio::runtime::thread_pool::worker::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\n   7: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\n      \u003ctokio::runtime::blocking::task::BlockingTask\u003cT\u003e as core::future::future::Future\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n      tokio::runtime::task::raw::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\n   8: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::UnownedTask\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\n      tokio::runtime::blocking::pool::Task::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\n      tokio::runtime::blocking::pool::Inner::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\n      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys_common/backtrace.rs:122:18\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:498:17\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:497:30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/ops/function.rs:227:5\n  10: \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      std::sys::unix::thread::Thread::new::thread_start\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys/unix/thread.rs:108:17\n  11: start_thread\n  12: clone\n code:4000 message:other error (op: read, path: us-east-2/tnc6qwc1v/1/27/_b/d8ec4073017c4c4c91cbec3a551786f4.parquet, source: response part: Parts { status: 500, version: HTTP/1.1, headers: {\"x-amz-request-id\": \"K09Z7Q304D5H2WH0\", \"x-amz-id-2\": \"XeP/sxItE5CrLTk+mXqOiJYsI4Gi43dcFFaASlDdo3il1eDnJstDCzpdrsTnYSN6tniv5vLiFcM=\", \"content-type\": \"application/xml\", \"transfer-encoding\": \"chunked\", \"date\": \"Sat, 16 Apr 2022 09:08:38 GMT\", \"server\": \"AmazonS3\", \"connection\": \"close\"} }, body: \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003cError\u003e\u003cCode\u003eInternalError\u003c/Code\u003e\u003cMessage\u003eWe encountered an internal error. Please try again.\u003c/Message\u003e\u003cRequestId\u003eK09Z7Q304D5H2WH0\u003c/RequestId\u003e\u003cHostId\u003eXeP/sxItE5CrLTk+mXqOiJYsI4Gi43dcFFaASlDdo3il1eDnJstDCzpdrsTnYSN6tniv5vLiFcM=\u003c/HostId\u003e\u003c/Error\u003e\") (while in processor thread 28)]","query has error: map[backtrace:   0: common_exception::exception_code::\u003cimpl common_exception::exception::ErrorCode\u003e::StorageOther\n             at workspace/common/exception/src/exception_code.rs:36:66\n      common_exception::exception_into::\u003cimpl core::convert::From\u003cstd::io::error::Error\u003e for common_exception::exception::ErrorCode\u003e::from\n             at workspace/common/exception/src/exception_into.rs:114:18\n   1: \u003ccore::result::Result\u003cT,F\u003e as core::ops::try_trait::FromResidual\u003ccore::result::Result\u003ccore::convert::Infallible,E\u003e\u003e\u003e::from_residual\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/result.rs:2106:27\n      databend_query::storages::fuse::io::read::block_reader::BlockReader::read_column::{{closure}}::{{closure}}\n             at workspace/query/src/storages/fuse/io/read/block_reader.rs:200:25\n      \u003ccore::future::from_generator::GenFuture\u003cT\u003e as core::future::future::Future\u003e::poll\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/future/mod.rs:91:19\n   2: tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n   3: std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n   4: tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n   5: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::LocalNotified\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:448:21\n      tokio::coop::with_budget::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\n      std::thread::local::LocalKey\u003cT\u003e::try_with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:442:16\n      std::thread::local::LocalKey\u003cT\u003e::with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:418:9\n      tokio::coop::with_budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\n      tokio::coop::budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\n      tokio::runtime::thread_pool::worker::Context::run_task\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\n   6: tokio::runtime::thread_pool::worker::Context::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:398:24\n      tokio::runtime::thread_pool::worker::run::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\n      tokio::macros::scoped_tls::ScopedKey\u003cT\u003e::set\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\n      tokio::runtime::thread_pool::worker::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\n   7: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\n      \u003ctokio::runtime::blocking::task::BlockingTask\u003cT\u003e as core::future::future::Future\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n      tokio::runtime::task::raw::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\n   8: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::UnownedTask\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\n      tokio::runtime::blocking::pool::Task::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\n      tokio::runtime::blocking::pool::Inner::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\n      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys_common/backtrace.rs:122:18\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:498:17\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:497:30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/ops/function.rs:227:5\n  10: \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      std::sys::unix::thread::Thread::new::thread_start\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys/unix/thread.rs:108:17\n  11: start_thread\n  12: clone\n code:4000 message:other error (op: read, path: us-east-2/tnc6qwc1v/1/27/_b/d8ec4073017c4c4c91cbec3a551786f4.parquet, source: response part: Parts { status: 500, version: HTTP/1.1, headers: {\"x-amz-request-id\": \"P56QH85BXN8EQEDD\", \"x-amz-id-2\": \"2MtgGOXWhVYeN+yZrnsVbch66nu4K36ttOaZPyjFvKJtI73/l+oR/RngqHgpoMbos3ecrGaN+BM=\", \"content-type\": \"application/xml\", \"transfer-encoding\": \"chunked\", \"date\": \"Sat, 16 Apr 2022 09:08:46 GMT\", \"server\": \"AmazonS3\", \"connection\": \"close\"} }, body: \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003cError\u003e\u003cCode\u003eInternalError\u003c/Code\u003e\u003cMessage\u003eWe encountered an internal error. Please try again.\u003c/Message\u003e\u003cRequestId\u003eP56QH85BXN8EQEDD\u003c/RequestId\u003e\u003cHostId\u003e2MtgGOXWhVYeN+yZrnsVbch66nu4K36ttOaZPyjFvKJtI73/l+oR/RngqHgpoMbos3ecrGaN+BM=\u003c/HostId\u003e\u003c/Error\u003e\") (while in processor thread 24)]","query has error: map[backtrace:   0: common_exception::exception_code::\u003cimpl common_exception::exception::ErrorCode\u003e::StorageOther\n             at workspace/common/exception/src/exception_code.rs:36:66\n      common_exception::exception_into::\u003cimpl core::convert::From\u003cstd::io::error::Error\u003e for common_exception::exception::ErrorCode\u003e::from\n             at workspace/common/exception/src/exception_into.rs:114:18\n   1: \u003ccore::result::Result\u003cT,F\u003e as core::ops::try_trait::FromResidual\u003ccore::result::Result\u003ccore::convert::Infallible,E\u003e\u003e\u003e::from_residual\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/result.rs:2106:27\n      databend_query::storages::fuse::io::read::block_reader::BlockReader::read_column::{{closure}}::{{closure}}\n             at workspace/query/src/storages/fuse/io/read/block_reader.rs:200:25\n      \u003ccore::future::from_generator::GenFuture\u003cT\u003e as core::future::future::Future\u003e::poll\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/future/mod.rs:91:19\n   2: tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n   3: std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n   4: tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n   5: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::LocalNotified\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:448:21\n      tokio::coop::with_budget::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\n      std::thread::local::LocalKey\u003cT\u003e::try_with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:442:16\n      std::thread::local::LocalKey\u003cT\u003e::with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:418:9\n      tokio::coop::with_budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\n      tokio::coop::budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\n      tokio::runtime::thread_pool::worker::Context::run_task\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\n   6: tokio::runtime::thread_pool::worker::Context::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:398:24\n      tokio::runtime::thread_pool::worker::run::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\n      tokio::macros::scoped_tls::ScopedKey\u003cT\u003e::set\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\n      tokio::runtime::thread_pool::worker::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\n   7: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\n      \u003ctokio::runtime::blocking::task::BlockingTask\u003cT\u003e as core::future::future::Future\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n      tokio::runtime::task::raw::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\n   8: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::UnownedTask\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\n      tokio::runtime::blocking::pool::Task::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\n      tokio::runtime::blocking::pool::Inner::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\n      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys_common/backtrace.rs:122:18\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:498:17\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:497:30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/ops/function.rs:227:5\n  10: \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      std::sys::unix::thread::Thread::new::thread_start\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys/unix/thread.rs:108:17\n  11: start_thread\n  12: clone\n code:4000 message:other error (op: read, path: us-east-2/tnc6qwc1v/1/27/_b/d8ec4073017c4c4c91cbec3a551786f4.parquet, source: response part: Parts { status: 500, version: HTTP/1.1, headers: {\"x-amz-request-id\": \"35WW194PVE5MKEFZ\", \"x-amz-id-2\": \"hvxvv56SRGrVpMznQ1Ogi29mqsZJHpCGl+uKbJ/lVdAuPoVR0rgtmLaAS7nmeB+fsY3TbHOT6aA=\", \"content-type\": \"application/xml\", \"transfer-encoding\": \"chunked\", \"date\": \"Sat, 16 Apr 2022 09:08:52 GMT\", \"server\": \"AmazonS3\", \"connection\": \"close\"} }, body: \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003cError\u003e\u003cCode\u003eInternalError\u003c/Code\u003e\u003cMessage\u003eWe encountered an internal error. Please try again.\u003c/Message\u003e\u003cRequestId\u003e35WW194PVE5MKEFZ\u003c/RequestId\u003e\u003cHostId\u003ehvxvv56SRGrVpMznQ1Ogi29mqsZJHpCGl+uKbJ/lVdAuPoVR0rgtmLaAS7nmeB+fsY3TbHOT6aA=\u003c/HostId\u003e\u003c/Error\u003e\") (while in processor thread 4)]","query has error: map[backtrace:   0: common_exception::exception_code::\u003cimpl common_exception::exception::ErrorCode\u003e::StorageOther\n             at workspace/common/exception/src/exception_code.rs:36:66\n      common_exception::exception_into::\u003cimpl core::convert::From\u003cstd::io::error::Error\u003e for common_exception::exception::ErrorCode\u003e::from\n             at workspace/common/exception/src/exception_into.rs:114:18\n   1: \u003ccore::result::Result\u003cT,F\u003e as core::ops::try_trait::FromResidual\u003ccore::result::Result\u003ccore::convert::Infallible,E\u003e\u003e\u003e::from_residual\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/result.rs:2106:27\n      databend_query::storages::fuse::io::read::block_reader::BlockReader::read_column::{{closure}}::{{closure}}\n             at workspace/query/src/storages/fuse/io/read/block_reader.rs:200:25\n      \u003ccore::future::from_generator::GenFuture\u003cT\u003e as core::future::future::Future\u003e::poll\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/future/mod.rs:91:19\n   2: tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n   3: std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n   4: tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n   5: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::LocalNotified\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:448:21\n      tokio::coop::with_budget::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\n      std::thread::local::LocalKey\u003cT\u003e::try_with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:442:16\n      std::thread::local::LocalKey\u003cT\u003e::with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:418:9\n      tokio::coop::with_budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\n      tokio::coop::budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\n      tokio::runtime::thread_pool::worker::Context::run_task\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\n   6: tokio::runtime::thread_pool::worker::Context::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:398:24\n      tokio::runtime::thread_pool::worker::run::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\n      tokio::macros::scoped_tls::ScopedKey\u003cT\u003e::set\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\n      tokio::runtime::thread_pool::worker::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\n   7: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\n      \u003ctokio::runtime::blocking::task::BlockingTask\u003cT\u003e as core::future::future::Future\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n      tokio::runtime::task::raw::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\n   8: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::UnownedTask\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\n      tokio::runtime::blocking::pool::Task::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\n      tokio::runtime::blocking::pool::Inner::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\n      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys_common/backtrace.rs:122:18\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:498:17\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:497:30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/ops/function.rs:227:5\n  10: \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      std::sys::unix::thread::Thread::new::thread_start\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys/unix/thread.rs:108:17\n  11: start_thread\n  12: clone\n code:4000 message:other error (op: read, path: us-east-2/tnc6qwc1v/1/27/_b/d8ec4073017c4c4c91cbec3a551786f4.parquet, source: response part: Parts { status: 500, version: HTTP/1.1, headers: {\"x-amz-request-id\": \"5SM79ZZT9X7JJQQ5\", \"x-amz-id-2\": \"uOfdP9Lyo81f0OdrTXXQZCA2g0a6fJlyrmIS4GhkoCO2NJJEsiFF5bXQn8xPqYaNCixQ+/SrSQU=\", \"content-type\": \"application/xml\", \"transfer-encoding\": \"chunked\", \"date\": \"Sat, 16 Apr 2022 09:08:56 GMT\", \"server\": \"AmazonS3\", \"connection\": \"close\"} }, body: \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003cError\u003e\u003cCode\u003eInternalError\u003c/Code\u003e\u003cMessage\u003eWe encountered an internal error. Please try again.\u003c/Message\u003e\u003cRequestId\u003e5SM79ZZT9X7JJQQ5\u003c/RequestId\u003e\u003cHostId\u003euOfdP9Lyo81f0OdrTXXQZCA2g0a6fJlyrmIS4GhkoCO2NJJEsiFF5bXQn8xPqYaNCixQ+/SrSQU=\u003c/HostId\u003e\u003c/Error\u003e\") (while in processor thread 7)]"],"mean":0.46052018266797196},{"name":"Q9","sql":"SELECT Year, count(*) as c1 FROM default.ontime GROUP BY Year;","min":0.266,"max":0.305,"median":0.279,"std_dev":0.011682000505156163,"read_row":202687655,"read_byte":405375310,"time":[0.279,0.29,0.284,0.271,0.305,0.271,0.266,0.287,0.271],"error":["query has error: map[backtrace:   0: common_exception::exception_code::\u003cimpl common_exception::exception::ErrorCode\u003e::StorageOther\n             at workspace/common/exception/src/exception_code.rs:36:66\n      common_exception::exception_into::\u003cimpl core::convert::From\u003cstd::io::error::Error\u003e for common_exception::exception::ErrorCode\u003e::from\n             at workspace/common/exception/src/exception_into.rs:114:18\n   1: \u003ccore::result::Result\u003cT,F\u003e as core::ops::try_trait::FromResidual\u003ccore::result::Result\u003ccore::convert::Infallible,E\u003e\u003e\u003e::from_residual\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/result.rs:2106:27\n      databend_query::storages::fuse::io::read::block_reader::BlockReader::read_column::{{closure}}::{{closure}}\n             at workspace/query/src/storages/fuse/io/read/block_reader.rs:200:25\n      \u003ccore::future::from_generator::GenFuture\u003cT\u003e as core::future::future::Future\u003e::poll\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/future/mod.rs:91:19\n   2: tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n   3: std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n   4: tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n   5: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::LocalNotified\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:448:21\n      tokio::coop::with_budget::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\n      std::thread::local::LocalKey\u003cT\u003e::try_with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:442:16\n      std::thread::local::LocalKey\u003cT\u003e::with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:418:9\n      tokio::coop::with_budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\n      tokio::coop::budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\n      tokio::runtime::thread_pool::worker::Context::run_task\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\n   6: tokio::runtime::thread_pool::worker::Context::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:398:24\n      tokio::runtime::thread_pool::worker::run::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\n      tokio::macros::scoped_tls::ScopedKey\u003cT\u003e::set\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\n      tokio::runtime::thread_pool::worker::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\n   7: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\n      \u003ctokio::runtime::blocking::task::BlockingTask\u003cT\u003e as core::future::future::Future\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n      tokio::runtime::task::raw::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\n   8: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::UnownedTask\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\n      tokio::runtime::blocking::pool::Task::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\n      tokio::runtime::blocking::pool::Inner::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\n      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys_common/backtrace.rs:122:18\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:498:17\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:497:30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/ops/function.rs:227:5\n  10: \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      std::sys::unix::thread::Thread::new::thread_start\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys/unix/thread.rs:108:17\n  11: start_thread\n  12: clone\n code:4000 message:other error (op: read, path: us-east-2/tnc6qwc1v/1/27/_b/d8ec4073017c4c4c91cbec3a551786f4.parquet, source: response part: Parts { status: 500, version: HTTP/1.1, headers: {\"x-amz-request-id\": \"CZFT4NDMZAEP2TSC\", \"x-amz-id-2\": \"/RietZXtcTkTmTKz4iNr8Mph4A1Agdb7qN2QR0HKBnyDZBxmNDm6J9Izhg2MLW+3rI1BllTp0Ts=\", \"content-type\": \"application/xml\", \"transfer-encoding\": \"chunked\", \"date\": \"Sat, 16 Apr 2022 09:09:05 GMT\", \"server\": \"AmazonS3\", \"connection\": \"close\"} }, body: \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003cError\u003e\u003cCode\u003eInternalError\u003c/Code\u003e\u003cMessage\u003eWe encountered an internal error. Please try again.\u003c/Message\u003e\u003cRequestId\u003eCZFT4NDMZAEP2TSC\u003c/RequestId\u003e\u003cHostId\u003e/RietZXtcTkTmTKz4iNr8Mph4A1Agdb7qN2QR0HKBnyDZBxmNDm6J9Izhg2MLW+3rI1BllTp0Ts=\u003c/HostId\u003e\u003c/Error\u003e\") (while in processor thread 15)]"],"mean":0.2802056352405835},{"name":"Q10","sql":"SELECT avg(cnt) FROM (SELECT Year,Month,count(*) AS cnt FROM default.ontime WHERE DepDel15=1 GROUP BY Year,Month) a;","min":0.4,"max":0.908,"median":0.409,"std_dev":0.20034430363751302,"read_row":202687655,"read_byte":1418813585,"time":[0.409,0.407,0.4,0.908,0.413],"error":["query has error: map[backtrace:   0: common_exception::exception_code::\u003cimpl common_exception::exception::ErrorCode\u003e::StorageOther\n             at workspace/common/exception/src/exception_code.rs:36:66\n      common_exception::exception_into::\u003cimpl core::convert::From\u003cstd::io::error::Error\u003e for common_exception::exception::ErrorCode\u003e::from\n             at workspace/common/exception/src/exception_into.rs:114:18\n   1: \u003ccore::result::Result\u003cT,F\u003e as core::ops::try_trait::FromResidual\u003ccore::result::Result\u003ccore::convert::Infallible,E\u003e\u003e\u003e::from_residual\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/result.rs:2106:27\n      databend_query::storages::fuse::io::read::block_reader::BlockReader::read_column::{{closure}}::{{closure}}\n             at workspace/query/src/storages/fuse/io/read/block_reader.rs:200:25\n      \u003ccore::future::from_generator::GenFuture\u003cT\u003e as core::future::future::Future\u003e::poll\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/future/mod.rs:91:19\n   2: tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n   3: std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n   4: tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n   5: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::LocalNotified\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:448:21\n      tokio::coop::with_budget::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\n      std::thread::local::LocalKey\u003cT\u003e::try_with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:442:16\n      std::thread::local::LocalKey\u003cT\u003e::with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:418:9\n      tokio::coop::with_budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\n      tokio::coop::budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\n      tokio::runtime::thread_pool::worker::Context::run_task\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\n   6: tokio::runtime::thread_pool::worker::Context::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:398:24\n      tokio::runtime::thread_pool::worker::run::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\n      tokio::macros::scoped_tls::ScopedKey\u003cT\u003e::set\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\n      tokio::runtime::thread_pool::worker::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\n   7: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\n      \u003ctokio::runtime::blocking::task::BlockingTask\u003cT\u003e as core::future::future::Future\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n      tokio::runtime::task::raw::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\n   8: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::UnownedTask\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\n      tokio::runtime::blocking::pool::Task::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\n      tokio::runtime::blocking::pool::Inner::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\n      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys_common/backtrace.rs:122:18\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:498:17\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:497:30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/ops/function.rs:227:5\n  10: \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      std::sys::unix::thread::Thread::new::thread_start\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys/unix/thread.rs:108:17\n  11: start_thread\n  12: clone\n code:4000 message:other error (op: read, path: us-east-2/tnc6qwc1v/1/27/_b/d8ec4073017c4c4c91cbec3a551786f4.parquet, source: response part: Parts { status: 500, version: HTTP/1.1, headers: {\"x-amz-request-id\": \"R2FCBB4RPRK7EQBB\", \"x-amz-id-2\": \"0GgPDx8K1dl6/WieSBBXbRnnd/tzCpAR0Zefg4jof/yfdTYO6koWhxelrD13/+JXsbv0DHdYnQg=\", \"content-type\": \"application/xml\", \"transfer-encoding\": \"chunked\", \"date\": \"Sat, 16 Apr 2022 09:09:17 GMT\", \"server\": \"AmazonS3\", \"connection\": \"close\"} }, body: \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003cError\u003e\u003cCode\u003eInternalError\u003c/Code\u003e\u003cMessage\u003eWe encountered an internal error. Please try again.\u003c/Message\u003e\u003cRequestId\u003eR2FCBB4RPRK7EQBB\u003c/RequestId\u003e\u003cHostId\u003e0GgPDx8K1dl6/WieSBBXbRnnd/tzCpAR0Zefg4jof/yfdTYO6koWhxelrD13/+JXsbv0DHdYnQg=\u003c/HostId\u003e\u003c/Error\u003e\") (while in processor thread 27)]","query has error: map[backtrace:   0: common_exception::exception_code::\u003cimpl common_exception::exception::ErrorCode\u003e::StorageOther\n             at workspace/common/exception/src/exception_code.rs:36:66\n      common_exception::exception_into::\u003cimpl core::convert::From\u003cstd::io::error::Error\u003e for common_exception::exception::ErrorCode\u003e::from\n             at workspace/common/exception/src/exception_into.rs:114:18\n   1: \u003ccore::result::Result\u003cT,F\u003e as core::ops::try_trait::FromResidual\u003ccore::result::Result\u003ccore::convert::Infallible,E\u003e\u003e\u003e::from_residual\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/result.rs:2106:27\n      databend_query::storages::fuse::io::read::block_reader::BlockReader::read_column::{{closure}}::{{closure}}\n             at workspace/query/src/storages/fuse/io/read/block_reader.rs:200:25\n      \u003ccore::future::from_generator::GenFuture\u003cT\u003e as core::future::future::Future\u003e::poll\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/future/mod.rs:91:19\n   2: tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n   3: std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n   4: tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n   5: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::LocalNotified\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:448:21\n      tokio::coop::with_budget::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\n      std::thread::local::LocalKey\u003cT\u003e::try_with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:442:16\n      std::thread::local::LocalKey\u003cT\u003e::with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:418:9\n      tokio::coop::with_budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\n      tokio::coop::budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\n      tokio::runtime::thread_pool::worker::Context::run_task\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\n   6: tokio::runtime::thread_pool::worker::Context::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:398:24\n      tokio::runtime::thread_pool::worker::run::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\n      tokio::macros::scoped_tls::ScopedKey\u003cT\u003e::set\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\n      tokio::runtime::thread_pool::worker::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\n   7: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\n      \u003ctokio::runtime::blocking::task::BlockingTask\u003cT\u003e as core::future::future::Future\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n      tokio::runtime::task::raw::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\n   8: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::UnownedTask\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\n      tokio::runtime::blocking::pool::Task::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\n      tokio::runtime::blocking::pool::Inner::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\n      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys_common/backtrace.rs:122:18\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:498:17\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:497:30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/ops/function.rs:227:5\n  10: \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      std::sys::unix::thread::Thread::new::thread_start\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys/unix/thread.rs:108:17\n  11: start_thread\n  12: clone\n code:4000 message:other error (op: read, path: us-east-2/tnc6qwc1v/1/27/_b/d8ec4073017c4c4c91cbec3a551786f4.parquet, source: response part: Parts { status: 500, version: HTTP/1.1, headers: {\"x-amz-request-id\": \"1FR2XPYMG9XYQ25Q\", \"x-amz-id-2\": \"8FqEOcE4TO23chewBmkS9kjoyYsflcciUnMhuYcyk0qm3vIhmQz5Ne/NWxdtvr8bsWlxVzpOPFA=\", \"content-type\": \"application/xml\", \"transfer-encoding\": \"chunked\", \"date\": \"Sat, 16 Apr 2022 09:09:23 GMT\", \"server\": \"AmazonS3\", \"connection\": \"close\"} }, body: \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003cError\u003e\u003cCode\u003eInternalError\u003c/Code\u003e\u003cMessage\u003eWe encountered an internal error. Please try again.\u003c/Message\u003e\u003cRequestId\u003e1FR2XPYMG9XYQ25Q\u003c/RequestId\u003e\u003cHostId\u003e8FqEOcE4TO23chewBmkS9kjoyYsflcciUnMhuYcyk0qm3vIhmQz5Ne/NWxdtvr8bsWlxVzpOPFA=\u003c/HostId\u003e\u003c/Error\u003e\") (while in processor thread 18)]","query has error: map[backtrace:   0: common_exception::exception_code::\u003cimpl common_exception::exception::ErrorCode\u003e::StorageOther\n             at workspace/common/exception/src/exception_code.rs:36:66\n      common_exception::exception_into::\u003cimpl core::convert::From\u003cstd::io::error::Error\u003e for common_exception::exception::ErrorCode\u003e::from\n             at workspace/common/exception/src/exception_into.rs:114:18\n   1: \u003ccore::result::Result\u003cT,F\u003e as core::ops::try_trait::FromResidual\u003ccore::result::Result\u003ccore::convert::Infallible,E\u003e\u003e\u003e::from_residual\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/result.rs:2106:27\n      databend_query::storages::fuse::io::read::block_reader::BlockReader::read_column::{{closure}}::{{closure}}\n             at workspace/query/src/storages/fuse/io/read/block_reader.rs:200:25\n      \u003ccore::future::from_generator::GenFuture\u003cT\u003e as core::future::future::Future\u003e::poll\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/future/mod.rs:91:19\n   2: tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n   3: std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n   4: tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n   5: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::LocalNotified\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:448:21\n      tokio::coop::with_budget::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\n      std::thread::local::LocalKey\u003cT\u003e::try_with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:442:16\n      std::thread::local::LocalKey\u003cT\u003e::with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:418:9\n      tokio::coop::with_budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\n      tokio::coop::budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\n      tokio::runtime::thread_pool::worker::Context::run_task\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\n   6: tokio::runtime::thread_pool::worker::Context::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:398:24\n      tokio::runtime::thread_pool::worker::run::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\n      tokio::macros::scoped_tls::ScopedKey\u003cT\u003e::set\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\n      tokio::runtime::thread_pool::worker::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\n   7: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\n      \u003ctokio::runtime::blocking::task::BlockingTask\u003cT\u003e as core::future::future::Future\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n      tokio::runtime::task::raw::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\n   8: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::UnownedTask\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\n      tokio::runtime::blocking::pool::Task::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\n      tokio::runtime::blocking::pool::Inner::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\n      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys_common/backtrace.rs:122:18\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:498:17\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:497:30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/ops/function.rs:227:5\n  10: \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      std::sys::unix::thread::Thread::new::thread_start\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys/unix/thread.rs:108:17\n  11: start_thread\n  12: clone\n code:4000 message:other error (op: read, path: us-east-2/tnc6qwc1v/1/27/_b/d8ec4073017c4c4c91cbec3a551786f4.parquet, source: response part: Parts { status: 500, version: HTTP/1.1, headers: {\"x-amz-request-id\": \"3PTHBM237CPN6R43\", \"x-amz-id-2\": \"9Epc5aC1+o/ocvE4mP7daz6meNaRJci75ssGCIKQE3kmPWXsvXeCj/uk3jGtWs0x5tOesx3fk6k=\", \"content-type\": \"application/xml\", \"transfer-encoding\": \"chunked\", \"date\": \"Sat, 16 Apr 2022 09:09:29 GMT\", \"server\": \"AmazonS3\", \"connection\": \"close\"} }, body: \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003cError\u003e\u003cCode\u003eInternalError\u003c/Code\u003e\u003cMessage\u003eWe encountered an internal error. Please try again.\u003c/Message\u003e\u003cRequestId\u003e3PTHBM237CPN6R43\u003c/RequestId\u003e\u003cHostId\u003e9Epc5aC1+o/ocvE4mP7daz6meNaRJci75ssGCIKQE3kmPWXsvXeCj/uk3jGtWs0x5tOesx3fk6k=\u003c/HostId\u003e\u003c/Error\u003e\") (while in processor thread 12)]","query has error: map[backtrace:   0: common_exception::exception_code::\u003cimpl common_exception::exception::ErrorCode\u003e::StorageOther\n             at workspace/common/exception/src/exception_code.rs:36:66\n      common_exception::exception_into::\u003cimpl core::convert::From\u003cstd::io::error::Error\u003e for common_exception::exception::ErrorCode\u003e::from\n             at workspace/common/exception/src/exception_into.rs:114:18\n   1: \u003ccore::result::Result\u003cT,F\u003e as core::ops::try_trait::FromResidual\u003ccore::result::Result\u003ccore::convert::Infallible,E\u003e\u003e\u003e::from_residual\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/result.rs:2106:27\n      databend_query::storages::fuse::io::read::block_reader::BlockReader::read_column::{{closure}}::{{closure}}\n             at workspace/query/src/storages/fuse/io/read/block_reader.rs:200:25\n      \u003ccore::future::from_generator::GenFuture\u003cT\u003e as core::future::future::Future\u003e::poll\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/future/mod.rs:91:19\n   2: tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n   3: std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n   4: tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n   5: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::LocalNotified\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:448:21\n      tokio::coop::with_budget::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\n      std::thread::local::LocalKey\u003cT\u003e::try_with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:442:16\n      std::thread::local::LocalKey\u003cT\u003e::with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:418:9\n      tokio::coop::with_budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\n      tokio::coop::budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\n      tokio::runtime::thread_pool::worker::Context::run_task\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\n   6: tokio::runtime::thread_pool::worker::Context::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:398:24\n      tokio::runtime::thread_pool::worker::run::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\n      tokio::macros::scoped_tls::ScopedKey\u003cT\u003e::set\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\n      tokio::runtime::thread_pool::worker::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\n   7: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\n      \u003ctokio::runtime::blocking::task::BlockingTask\u003cT\u003e as core::future::future::Future\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n      tokio::runtime::task::raw::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\n   8: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::UnownedTask\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\n      tokio::runtime::blocking::pool::Task::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\n      tokio::runtime::blocking::pool::Inner::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\n      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys_common/backtrace.rs:122:18\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:498:17\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:497:30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/ops/function.rs:227:5\n  10: \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      std::sys::unix::thread::Thread::new::thread_start\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys/unix/thread.rs:108:17\n  11: start_thread\n  12: clone\n code:4000 message:other error (op: read, path: us-east-2/tnc6qwc1v/1/27/_b/d8ec4073017c4c4c91cbec3a551786f4.parquet, source: response part: Parts { status: 500, version: HTTP/1.1, headers: {\"x-amz-request-id\": \"G7KJ3YNETXVNRZFB\", \"x-amz-id-2\": \"+OA80yX4YEgXo/IK0ESddAX1ph6OGjdauoQs5g3fqiuinL//IRGzGQ5ey6i4lZ5GiCgq/HHCHn8=\", \"content-type\": \"application/xml\", \"transfer-encoding\": \"chunked\", \"date\": \"Sat, 16 Apr 2022 09:09:34 GMT\", \"server\": \"AmazonS3\", \"connection\": \"close\"} }, body: \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003cError\u003e\u003cCode\u003eInternalError\u003c/Code\u003e\u003cMessage\u003eWe encountered an internal error. Please try again.\u003c/Message\u003e\u003cRequestId\u003eG7KJ3YNETXVNRZFB\u003c/RequestId\u003e\u003cHostId\u003e+OA80yX4YEgXo/IK0ESddAX1ph6OGjdauoQs5g3fqiuinL//IRGzGQ5ey6i4lZ5GiCgq/HHCHn8=\u003c/HostId\u003e\u003c/Error\u003e\") (while in processor thread 2)]","query has error: map[backtrace:   0: common_exception::exception_code::\u003cimpl common_exception::exception::ErrorCode\u003e::StorageOther\n             at workspace/common/exception/src/exception_code.rs:36:66\n      common_exception::exception_into::\u003cimpl core::convert::From\u003cstd::io::error::Error\u003e for common_exception::exception::ErrorCode\u003e::from\n             at workspace/common/exception/src/exception_into.rs:114:18\n   1: \u003ccore::result::Result\u003cT,F\u003e as core::ops::try_trait::FromResidual\u003ccore::result::Result\u003ccore::convert::Infallible,E\u003e\u003e\u003e::from_residual\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/result.rs:2106:27\n      databend_query::storages::fuse::io::read::block_reader::BlockReader::read_column::{{closure}}::{{closure}}\n             at workspace/query/src/storages/fuse/io/read/block_reader.rs:200:25\n      \u003ccore::future::from_generator::GenFuture\u003cT\u003e as core::future::future::Future\u003e::poll\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/future/mod.rs:91:19\n   2: tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n   3: std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n   4: tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n   5: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::LocalNotified\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:448:21\n      tokio::coop::with_budget::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\n      std::thread::local::LocalKey\u003cT\u003e::try_with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:442:16\n      std::thread::local::LocalKey\u003cT\u003e::with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:418:9\n      tokio::coop::with_budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\n      tokio::coop::budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\n      tokio::runtime::thread_pool::worker::Context::run_task\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\n   6: tokio::runtime::thread_pool::worker::Context::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:398:24\n      tokio::runtime::thread_pool::worker::run::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\n      tokio::macros::scoped_tls::ScopedKey\u003cT\u003e::set\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\n      tokio::runtime::thread_pool::worker::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\n   7: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\n      \u003ctokio::runtime::blocking::task::BlockingTask\u003cT\u003e as core::future::future::Future\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n      tokio::runtime::task::raw::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\n   8: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::UnownedTask\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\n      tokio::runtime::blocking::pool::Task::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\n      tokio::runtime::blocking::pool::Inner::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\n      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys_common/backtrace.rs:122:18\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:498:17\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:497:30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/ops/function.rs:227:5\n  10: \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      std::sys::unix::thread::Thread::new::thread_start\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys/unix/thread.rs:108:17\n  11: start_thread\n  12: clone\n code:4000 message:other error (op: read, path: us-east-2/tnc6qwc1v/1/27/_b/8f39126c9fc44e7298feed1aa18b5169.parquet, source: response part: Parts { status: 500, version: HTTP/1.1, headers: {\"x-amz-request-id\": \"ZCGXE052T9YND5BD\", \"x-amz-id-2\": \"HAFqCpZjd0V8VHwxgPsIu2YbIVRmbhYUyDjSbq8zwYrS+v2xaHDBMPPFVKrIbarjf7PS2FuYoHs=\", \"content-type\": \"application/xml\", \"transfer-encoding\": \"chunked\", \"date\": \"Sat, 16 Apr 2022 09:09:37 GMT\", \"server\": \"AmazonS3\", \"connection\": \"close\"} }, body: \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003cError\u003e\u003cCode\u003eInternalError\u003c/Code\u003e\u003cMessage\u003eWe encountered an internal error. Please try again.\u003c/Message\u003e\u003cRequestId\u003eZCGXE052T9YND5BD\u003c/RequestId\u003e\u003cHostId\u003eHAFqCpZjd0V8VHwxgPsIu2YbIVRmbhYUyDjSbq8zwYrS+v2xaHDBMPPFVKrIbarjf7PS2FuYoHs=\u003c/HostId\u003e\u003c/Error\u003e\") (while in processor thread 22)]"],"mean":0.4780603463089344},{"name":"Q11","sql":"SELECT avg(c1) FROM (SELECT Year,Month,count(*) AS c1 FROM default.ontime GROUP BY Year,Month) a;","min":0.377,"max":0.715,"median":0.501,"std_dev":0.1133986331487289,"read_row":202687655,"read_byte":608062965,"time":[0.377,0.388,0.545,0.715,0.527,0.475],"error":["query has error: map[backtrace:   0: common_exception::exception_code::\u003cimpl common_exception::exception::ErrorCode\u003e::StorageOther\n             at workspace/common/exception/src/exception_code.rs:36:66\n      common_exception::exception_into::\u003cimpl core::convert::From\u003cstd::io::error::Error\u003e for common_exception::exception::ErrorCode\u003e::from\n             at workspace/common/exception/src/exception_into.rs:114:18\n   1: \u003ccore::result::Result\u003cT,F\u003e as core::ops::try_trait::FromResidual\u003ccore::result::Result\u003ccore::convert::Infallible,E\u003e\u003e\u003e::from_residual\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/result.rs:2106:27\n      databend_query::storages::fuse::io::read::block_reader::BlockReader::read_column::{{closure}}::{{closure}}\n             at workspace/query/src/storages/fuse/io/read/block_reader.rs:200:25\n      \u003ccore::future::from_generator::GenFuture\u003cT\u003e as core::future::future::Future\u003e::poll\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/future/mod.rs:91:19\n   2: tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n   3: std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n   4: tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n   5: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::LocalNotified\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:448:21\n      tokio::coop::with_budget::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\n      std::thread::local::LocalKey\u003cT\u003e::try_with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:442:16\n      std::thread::local::LocalKey\u003cT\u003e::with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:418:9\n      tokio::coop::with_budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\n      tokio::coop::budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\n      tokio::runtime::thread_pool::worker::Context::run_task\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\n   6: tokio::runtime::thread_pool::worker::Context::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:398:24\n      tokio::runtime::thread_pool::worker::run::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\n      tokio::macros::scoped_tls::ScopedKey\u003cT\u003e::set\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\n      tokio::runtime::thread_pool::worker::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\n   7: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\n      \u003ctokio::runtime::blocking::task::BlockingTask\u003cT\u003e as core::future::future::Future\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n      tokio::runtime::task::raw::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\n   8: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::UnownedTask\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\n      tokio::runtime::blocking::pool::Task::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\n      tokio::runtime::blocking::pool::Inner::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\n      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys_common/backtrace.rs:122:18\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:498:17\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:497:30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/ops/function.rs:227:5\n  10: \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      std::sys::unix::thread::Thread::new::thread_start\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys/unix/thread.rs:108:17\n  11: start_thread\n  12: clone\n code:4000 message:other error (op: read, path: us-east-2/tnc6qwc1v/1/27/_b/d8ec4073017c4c4c91cbec3a551786f4.parquet, source: response part: Parts { status: 500, version: HTTP/1.1, headers: {\"x-amz-request-id\": \"HNMDZW2B68E9FX22\", \"x-amz-id-2\": \"kt7jwppI6QO9dXXqXrC8HKxLp1dKbjms3kx/FXyDlJgCQFhrBdvUdMtuUC4JIVaFtuLdl1EjoSQ=\", \"content-type\": \"application/xml\", \"transfer-encoding\": \"chunked\", \"date\": \"Sat, 16 Apr 2022 09:09:45 GMT\", \"server\": \"AmazonS3\", \"connection\": \"close\"} }, body: \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003cError\u003e\u003cCode\u003eInternalError\u003c/Code\u003e\u003cMessage\u003eWe encountered an internal error. Please try again.\u003c/Message\u003e\u003cRequestId\u003eHNMDZW2B68E9FX22\u003c/RequestId\u003e\u003cHostId\u003ekt7jwppI6QO9dXXqXrC8HKxLp1dKbjms3kx/FXyDlJgCQFhrBdvUdMtuUC4JIVaFtuLdl1EjoSQ=\u003c/HostId\u003e\u003c/Error\u003e\") (while in processor thread 1)]","query has error: map[backtrace:   0: common_exception::exception_code::\u003cimpl common_exception::exception::ErrorCode\u003e::StorageOther\n             at workspace/common/exception/src/exception_code.rs:36:66\n      common_exception::exception_into::\u003cimpl core::convert::From\u003cstd::io::error::Error\u003e for common_exception::exception::ErrorCode\u003e::from\n             at workspace/common/exception/src/exception_into.rs:114:18\n   1: \u003ccore::result::Result\u003cT,F\u003e as core::ops::try_trait::FromResidual\u003ccore::result::Result\u003ccore::convert::Infallible,E\u003e\u003e\u003e::from_residual\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/result.rs:2106:27\n      databend_query::storages::fuse::io::read::block_reader::BlockReader::read_column::{{closure}}::{{closure}}\n             at workspace/query/src/storages/fuse/io/read/block_reader.rs:200:25\n      \u003ccore::future::from_generator::GenFuture\u003cT\u003e as core::future::future::Future\u003e::poll\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/future/mod.rs:91:19\n   2: tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n   3: std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n   4: tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n   5: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::LocalNotified\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:448:21\n      tokio::coop::with_budget::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\n      std::thread::local::LocalKey\u003cT\u003e::try_with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:442:16\n      std::thread::local::LocalKey\u003cT\u003e::with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:418:9\n      tokio::coop::with_budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\n      tokio::coop::budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\n      tokio::runtime::thread_pool::worker::Context::run_task\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\n   6: tokio::runtime::thread_pool::worker::Context::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:398:24\n      tokio::runtime::thread_pool::worker::run::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\n      tokio::macros::scoped_tls::ScopedKey\u003cT\u003e::set\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\n      tokio::runtime::thread_pool::worker::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\n   7: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\n      \u003ctokio::runtime::blocking::task::BlockingTask\u003cT\u003e as core::future::future::Future\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n      tokio::runtime::task::raw::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\n   8: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::UnownedTask\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\n      tokio::runtime::blocking::pool::Task::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\n      tokio::runtime::blocking::pool::Inner::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\n      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys_common/backtrace.rs:122:18\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:498:17\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:497:30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/ops/function.rs:227:5\n  10: \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      std::sys::unix::thread::Thread::new::thread_start\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys/unix/thread.rs:108:17\n  11: start_thread\n  12: clone\n code:4000 message:other error (op: read, path: us-east-2/tnc6qwc1v/1/27/_b/d8ec4073017c4c4c91cbec3a551786f4.parquet, source: response part: Parts { status: 500, version: HTTP/1.1, headers: {\"x-amz-request-id\": \"Q9VY1T1XA3N7GA4S\", \"x-amz-id-2\": \"8MoYrBvRom2waMUbksD0bLw9FEKdGeBvHRkIiBpNFoVYyBxUAMuj6vSHqE97NQWzWkyFqYoN8Oc=\", \"content-type\": \"application/xml\", \"transfer-encoding\": \"chunked\", \"date\": \"Sat, 16 Apr 2022 09:09:49 GMT\", \"server\": \"AmazonS3\", \"connection\": \"close\"} }, body: \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003cError\u003e\u003cCode\u003eInternalError\u003c/Code\u003e\u003cMessage\u003eWe encountered an internal error. Please try again.\u003c/Message\u003e\u003cRequestId\u003eQ9VY1T1XA3N7GA4S\u003c/RequestId\u003e\u003cHostId\u003e8MoYrBvRom2waMUbksD0bLw9FEKdGeBvHRkIiBpNFoVYyBxUAMuj6vSHqE97NQWzWkyFqYoN8Oc=\u003c/HostId\u003e\u003c/Error\u003e\") (while in processor thread 15)]","query has error: map[backtrace:   0: common_exception::exception_code::\u003cimpl common_exception::exception::ErrorCode\u003e::StorageOther\n             at workspace/common/exception/src/exception_code.rs:36:66\n      common_exception::exception_into::\u003cimpl core::convert::From\u003cstd::io::error::Error\u003e for common_exception::exception::ErrorCode\u003e::from\n             at workspace/common/exception/src/exception_into.rs:114:18\n   1: \u003ccore::result::Result\u003cT,F\u003e as core::ops::try_trait::FromResidual\u003ccore::result::Result\u003ccore::convert::Infallible,E\u003e\u003e\u003e::from_residual\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/result.rs:2106:27\n      databend_query::storages::fuse::io::read::block_reader::BlockReader::read_column::{{closure}}::{{closure}}\n             at workspace/query/src/storages/fuse/io/read/block_reader.rs:200:25\n      \u003ccore::future::from_generator::GenFuture\u003cT\u003e as core::future::future::Future\u003e::poll\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/future/mod.rs:91:19\n   2: tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n   3: std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n   4: tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n   5: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::LocalNotified\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:448:21\n      tokio::coop::with_budget::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\n      std::thread::local::LocalKey\u003cT\u003e::try_with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:442:16\n      std::thread::local::LocalKey\u003cT\u003e::with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:418:9\n      tokio::coop::with_budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\n      tokio::coop::budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\n      tokio::runtime::thread_pool::worker::Context::run_task\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\n   6: tokio::runtime::thread_pool::worker::Context::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:398:24\n      tokio::runtime::thread_pool::worker::run::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\n      tokio::macros::scoped_tls::ScopedKey\u003cT\u003e::set\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\n      tokio::runtime::thread_pool::worker::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\n   7: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\n      \u003ctokio::runtime::blocking::task::BlockingTask\u003cT\u003e as core::future::future::Future\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n      tokio::runtime::task::raw::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\n   8: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::UnownedTask\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\n      tokio::runtime::blocking::pool::Task::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\n      tokio::runtime::blocking::pool::Inner::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\n      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys_common/backtrace.rs:122:18\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:498:17\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:497:30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/ops/function.rs:227:5\n  10: \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      std::sys::unix::thread::Thread::new::thread_start\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys/unix/thread.rs:108:17\n  11: start_thread\n  12: clone\n code:4000 message:other error (op: read, path: us-east-2/tnc6qwc1v/1/27/_b/d8ec4073017c4c4c91cbec3a551786f4.parquet, source: response part: Parts { status: 500, version: HTTP/1.1, headers: {\"x-amz-request-id\": \"TFFAESJGR6MD6QWM\", \"x-amz-id-2\": \"WGjHECET4/A1YLsvVjLV7LE1IVUS+/tON8Ms5PtWv9kmwuLKkmU1tz0Zom9TqqjfVwBqCYtMW90=\", \"content-type\": \"application/xml\", \"transfer-encoding\": \"chunked\", \"date\": \"Sat, 16 Apr 2022 09:09:54 GMT\", \"server\": \"AmazonS3\", \"connection\": \"close\"} }, body: \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003cError\u003e\u003cCode\u003eInternalError\u003c/Code\u003e\u003cMessage\u003eWe encountered an internal error. Please try again.\u003c/Message\u003e\u003cRequestId\u003eTFFAESJGR6MD6QWM\u003c/RequestId\u003e\u003cHostId\u003eWGjHECET4/A1YLsvVjLV7LE1IVUS+/tON8Ms5PtWv9kmwuLKkmU1tz0Zom9TqqjfVwBqCYtMW90=\u003c/HostId\u003e\u003c/Error\u003e\") (while in processor thread 18)]","query has error: map[backtrace:   0: common_exception::exception_code::\u003cimpl common_exception::exception::ErrorCode\u003e::StorageOther\n             at workspace/common/exception/src/exception_code.rs:36:66\n      common_exception::exception_into::\u003cimpl core::convert::From\u003cstd::io::error::Error\u003e for common_exception::exception::ErrorCode\u003e::from\n             at workspace/common/exception/src/exception_into.rs:114:18\n   1: \u003ccore::result::Result\u003cT,F\u003e as core::ops::try_trait::FromResidual\u003ccore::result::Result\u003ccore::convert::Infallible,E\u003e\u003e\u003e::from_residual\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/result.rs:2106:27\n      databend_query::storages::fuse::io::read::block_reader::BlockReader::read_column::{{closure}}::{{closure}}\n             at workspace/query/src/storages/fuse/io/read/block_reader.rs:200:25\n      \u003ccore::future::from_generator::GenFuture\u003cT\u003e as core::future::future::Future\u003e::poll\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/future/mod.rs:91:19\n   2: tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n   3: std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n   4: tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n   5: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::LocalNotified\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:448:21\n      tokio::coop::with_budget::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\n      std::thread::local::LocalKey\u003cT\u003e::try_with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:442:16\n      std::thread::local::LocalKey\u003cT\u003e::with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:418:9\n      tokio::coop::with_budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\n      tokio::coop::budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\n      tokio::runtime::thread_pool::worker::Context::run_task\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\n   6: tokio::runtime::thread_pool::worker::Context::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:398:24\n      tokio::runtime::thread_pool::worker::run::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\n      tokio::macros::scoped_tls::ScopedKey\u003cT\u003e::set\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\n      tokio::runtime::thread_pool::worker::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\n   7: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\n      \u003ctokio::runtime::blocking::task::BlockingTask\u003cT\u003e as core::future::future::Future\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n      tokio::runtime::task::raw::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\n   8: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::UnownedTask\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\n      tokio::runtime::blocking::pool::Task::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\n      tokio::runtime::blocking::pool::Inner::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\n      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys_common/backtrace.rs:122:18\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:498:17\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:497:30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/ops/function.rs:227:5\n  10: \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      std::sys::unix::thread::Thread::new::thread_start\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys/unix/thread.rs:108:17\n  11: start_thread\n  12: clone\n code:4000 message:other error (op: read, path: us-east-2/tnc6qwc1v/1/27/_b/d8ec4073017c4c4c91cbec3a551786f4.parquet, source: response part: Parts { status: 500, version: HTTP/1.1, headers: {\"x-amz-request-id\": \"ASQY61H7PR47NBM0\", \"x-amz-id-2\": \"xKur9sXYRYJiQ4GAuTgX7a2udZJZqW+YMuAIwtGGcOhYonAsQIOSO6rexWkLw7iR0ZyvpwYMtkI=\", \"content-type\": \"application/xml\", \"transfer-encoding\": \"chunked\", \"date\": \"Sat, 16 Apr 2022 09:10:00 GMT\", \"server\": \"AmazonS3\", \"connection\": \"close\"} }, body: \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003cError\u003e\u003cCode\u003eInternalError\u003c/Code\u003e\u003cMessage\u003eWe encountered an internal error. Please try again.\u003c/Message\u003e\u003cRequestId\u003eASQY61H7PR47NBM0\u003c/RequestId\u003e\u003cHostId\u003exKur9sXYRYJiQ4GAuTgX7a2udZJZqW+YMuAIwtGGcOhYonAsQIOSO6rexWkLw7iR0ZyvpwYMtkI=\u003c/HostId\u003e\u003c/Error\u003e\") (while in processor thread 32)]"],"mean":0.4924891202478152},{"name":"Q12","sql":"SELECT OriginCityName, DestCityName, count(*) AS c FROM default.ontime GROUP BY OriginCityName, DestCityName ORDER BY c DESC LIMIT 10;","min":2.668,"max":2.743,"median":2.705,"std_dev":0.0206999950704913,"read_row":202687655,"read_byte":8577734458,"time":[2.714,2.702,2.743,2.705,2.709,2.668,2.696],"error":["query has error: map[backtrace:   0: common_exception::exception_code::\u003cimpl common_exception::exception::ErrorCode\u003e::StorageOther\n             at workspace/common/exception/src/exception_code.rs:36:66\n      common_exception::exception_into::\u003cimpl core::convert::From\u003cstd::io::error::Error\u003e for common_exception::exception::ErrorCode\u003e::from\n             at workspace/common/exception/src/exception_into.rs:114:18\n   1: \u003ccore::result::Result\u003cT,F\u003e as core::ops::try_trait::FromResidual\u003ccore::result::Result\u003ccore::convert::Infallible,E\u003e\u003e\u003e::from_residual\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/result.rs:2106:27\n      databend_query::storages::fuse::io::read::block_reader::BlockReader::read_column::{{closure}}::{{closure}}\n             at workspace/query/src/storages/fuse/io/read/block_reader.rs:200:25\n      \u003ccore::future::from_generator::GenFuture\u003cT\u003e as core::future::future::Future\u003e::poll\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/future/mod.rs:91:19\n   2: tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n   3: std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n   4: tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n   5: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::LocalNotified\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:448:21\n      tokio::coop::with_budget::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\n      std::thread::local::LocalKey\u003cT\u003e::try_with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:442:16\n      std::thread::local::LocalKey\u003cT\u003e::with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:418:9\n      tokio::coop::with_budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\n      tokio::coop::budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\n      tokio::runtime::thread_pool::worker::Context::run_task\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\n   6: tokio::runtime::thread_pool::worker::Context::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:398:24\n      tokio::runtime::thread_pool::worker::run::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\n      tokio::macros::scoped_tls::ScopedKey\u003cT\u003e::set\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\n      tokio::runtime::thread_pool::worker::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\n   7: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\n      \u003ctokio::runtime::blocking::task::BlockingTask\u003cT\u003e as core::future::future::Future\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n      tokio::runtime::task::raw::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\n   8: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::UnownedTask\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\n      tokio::runtime::blocking::pool::Task::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\n      tokio::runtime::blocking::pool::Inner::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\n      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys_common/backtrace.rs:122:18\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:498:17\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:497:30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/ops/function.rs:227:5\n  10: \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      std::sys::unix::thread::Thread::new::thread_start\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys/unix/thread.rs:108:17\n  11: start_thread\n  12: clone\n code:4000 message:other error (op: read, path: us-east-2/tnc6qwc1v/1/27/_b/d8ec4073017c4c4c91cbec3a551786f4.parquet, source: response part: Parts { status: 500, version: HTTP/1.1, headers: {\"x-amz-request-id\": \"76GCQ6T23YBKZ2ZW\", \"x-amz-id-2\": \"J5NToHU9+4sfyWwKqTsPviD9eiX1qwyYiwCokUeFREl8BsY+1CXtGFTQua8P4+ZZTHCd57WglxE=\", \"content-type\": \"application/xml\", \"transfer-encoding\": \"chunked\", \"date\": \"Sat, 16 Apr 2022 09:10:19 GMT\", \"server\": \"AmazonS3\", \"connection\": \"close\"} }, body: \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003cError\u003e\u003cCode\u003eInternalError\u003c/Code\u003e\u003cMessage\u003eWe encountered an internal error. Please try again.\u003c/Message\u003e\u003cRequestId\u003e76GCQ6T23YBKZ2ZW\u003c/RequestId\u003e\u003cHostId\u003eJ5NToHU9+4sfyWwKqTsPviD9eiX1qwyYiwCokUeFREl8BsY+1CXtGFTQua8P4+ZZTHCd57WglxE=\u003c/HostId\u003e\u003c/Error\u003e\") (while in processor thread 19)]","query has error: map[backtrace:   0: common_exception::exception_code::\u003cimpl common_exception::exception::ErrorCode\u003e::StorageOther\n             at workspace/common/exception/src/exception_code.rs:36:66\n      common_exception::exception_into::\u003cimpl core::convert::From\u003cstd::io::error::Error\u003e for common_exception::exception::ErrorCode\u003e::from\n             at workspace/common/exception/src/exception_into.rs:114:18\n   1: \u003ccore::result::Result\u003cT,F\u003e as core::ops::try_trait::FromResidual\u003ccore::result::Result\u003ccore::convert::Infallible,E\u003e\u003e\u003e::from_residual\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/result.rs:2106:27\n      databend_query::storages::fuse::io::read::block_reader::BlockReader::read_column::{{closure}}::{{closure}}\n             at workspace/query/src/storages/fuse/io/read/block_reader.rs:200:25\n      \u003ccore::future::from_generator::GenFuture\u003cT\u003e as core::future::future::Future\u003e::poll\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/future/mod.rs:91:19\n   2: tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n   3: std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n   4: tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n   5: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::LocalNotified\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:448:21\n      tokio::coop::with_budget::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\n      std::thread::local::LocalKey\u003cT\u003e::try_with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:442:16\n      std::thread::local::LocalKey\u003cT\u003e::with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:418:9\n      tokio::coop::with_budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\n      tokio::coop::budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\n      tokio::runtime::thread_pool::worker::Context::run_task\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\n   6: tokio::runtime::thread_pool::worker::Context::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:398:24\n      tokio::runtime::thread_pool::worker::run::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\n      tokio::macros::scoped_tls::ScopedKey\u003cT\u003e::set\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\n      tokio::runtime::thread_pool::worker::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\n   7: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\n      \u003ctokio::runtime::blocking::task::BlockingTask\u003cT\u003e as core::future::future::Future\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n      tokio::runtime::task::raw::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\n   8: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::UnownedTask\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\n      tokio::runtime::blocking::pool::Task::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\n      tokio::runtime::blocking::pool::Inner::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\n      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys_common/backtrace.rs:122:18\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:498:17\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:497:30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/ops/function.rs:227:5\n  10: \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      std::sys::unix::thread::Thread::new::thread_start\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys/unix/thread.rs:108:17\n  11: start_thread\n  12: clone\n code:4000 message:other error (op: read, path: us-east-2/tnc6qwc1v/1/27/_b/d8ec4073017c4c4c91cbec3a551786f4.parquet, source: response part: Parts { status: 500, version: HTTP/1.1, headers: {\"x-amz-request-id\": \"ZB63S0YAPRSQY3VZ\", \"x-amz-id-2\": \"jphM3Gx7V+tf2EoLrYNEh//92uemHwoUTIFWFLx/QQK/V0aY6ZhTtxBaX46VwDRfG4jYLLV8c4Q=\", \"content-type\": \"application/xml\", \"transfer-encoding\": \"chunked\", \"date\": \"Sat, 16 Apr 2022 09:10:28 GMT\", \"server\": \"AmazonS3\", \"connection\": \"close\"} }, body: \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003cError\u003e\u003cCode\u003eInternalError\u003c/Code\u003e\u003cMessage\u003eWe encountered an internal error. Please try again.\u003c/Message\u003e\u003cRequestId\u003eZB63S0YAPRSQY3VZ\u003c/RequestId\u003e\u003cHostId\u003ejphM3Gx7V+tf2EoLrYNEh//92uemHwoUTIFWFLx/QQK/V0aY6ZhTtxBaX46VwDRfG4jYLLV8c4Q=\u003c/HostId\u003e\u003c/Error\u003e\") (while in processor thread 20)]","query has error: map[backtrace:   0: common_exception::exception_code::\u003cimpl common_exception::exception::ErrorCode\u003e::StorageOther\n             at workspace/common/exception/src/exception_code.rs:36:66\n      common_exception::exception_into::\u003cimpl core::convert::From\u003cstd::io::error::Error\u003e for common_exception::exception::ErrorCode\u003e::from\n             at workspace/common/exception/src/exception_into.rs:114:18\n   1: \u003ccore::result::Result\u003cT,F\u003e as core::ops::try_trait::FromResidual\u003ccore::result::Result\u003ccore::convert::Infallible,E\u003e\u003e\u003e::from_residual\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/result.rs:2106:27\n      databend_query::storages::fuse::io::read::block_reader::BlockReader::read_column::{{closure}}::{{closure}}\n             at workspace/query/src/storages/fuse/io/read/block_reader.rs:200:25\n      \u003ccore::future::from_generator::GenFuture\u003cT\u003e as core::future::future::Future\u003e::poll\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/future/mod.rs:91:19\n   2: tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n   3: std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n   4: tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n   5: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::LocalNotified\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:448:21\n      tokio::coop::with_budget::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\n      std::thread::local::LocalKey\u003cT\u003e::try_with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:442:16\n      std::thread::local::LocalKey\u003cT\u003e::with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:418:9\n      tokio::coop::with_budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\n      tokio::coop::budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\n      tokio::runtime::thread_pool::worker::Context::run_task\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\n   6: tokio::runtime::thread_pool::worker::Context::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:398:24\n      tokio::runtime::thread_pool::worker::run::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\n      tokio::macros::scoped_tls::ScopedKey\u003cT\u003e::set\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\n      tokio::runtime::thread_pool::worker::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\n   7: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\n      \u003ctokio::runtime::blocking::task::BlockingTask\u003cT\u003e as core::future::future::Future\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n      tokio::runtime::task::raw::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\n   8: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::UnownedTask\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\n      tokio::runtime::blocking::pool::Task::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\n      tokio::runtime::blocking::pool::Inner::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\n      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys_common/backtrace.rs:122:18\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:498:17\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:497:30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/ops/function.rs:227:5\n  10: \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      std::sys::unix::thread::Thread::new::thread_start\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys/unix/thread.rs:108:17\n  11: start_thread\n  12: clone\n code:4000 message:other error (op: read, path: us-east-2/tnc6qwc1v/1/27/_b/d8ec4073017c4c4c91cbec3a551786f4.parquet, source: response part: Parts { status: 500, version: HTTP/1.1, headers: {\"x-amz-request-id\": \"BE0KPYN30X53MNBE\", \"x-amz-id-2\": \"c//URd/cwKMhuCAXOX7WD+7JC+TeQKqAfUZLxBuuz0HG3cnuu/nbiRblSV4zFj/RBodw6q1kPTM=\", \"content-type\": \"application/xml\", \"transfer-encoding\": \"chunked\", \"date\": \"Sat, 16 Apr 2022 09:10:36 GMT\", \"server\": \"AmazonS3\", \"connection\": \"close\"} }, body: \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003cError\u003e\u003cCode\u003eInternalError\u003c/Code\u003e\u003cMessage\u003eWe encountered an internal error. Please try again.\u003c/Message\u003e\u003cRequestId\u003eBE0KPYN30X53MNBE\u003c/RequestId\u003e\u003cHostId\u003ec//URd/cwKMhuCAXOX7WD+7JC+TeQKqAfUZLxBuuz0HG3cnuu/nbiRblSV4zFj/RBodw6q1kPTM=\u003c/HostId\u003e\u003c/Error\u003e\") (while in processor thread 10)]"],"mean":2.7052065243243835},{"name":"Q13","sql":"SELECT OriginCityName, count(*) AS c FROM default.ontime GROUP BY OriginCityName ORDER BY c DESC LIMIT 10;","min":1.051,"max":1.068,"median":1.058,"std_dev":0.005054801717986938,"read_row":202687655,"read_byte":4288897398,"time":[1.053,1.051,1.068,1.058,1.058,1.057,1.06],"error":["query has error: map[backtrace:   0: common_exception::exception_code::\u003cimpl common_exception::exception::ErrorCode\u003e::StorageOther\n             at workspace/common/exception/src/exception_code.rs:36:66\n      common_exception::exception_into::\u003cimpl core::convert::From\u003cstd::io::error::Error\u003e for common_exception::exception::ErrorCode\u003e::from\n             at workspace/common/exception/src/exception_into.rs:114:18\n   1: \u003ccore::result::Result\u003cT,F\u003e as core::ops::try_trait::FromResidual\u003ccore::result::Result\u003ccore::convert::Infallible,E\u003e\u003e\u003e::from_residual\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/result.rs:2106:27\n      databend_query::storages::fuse::io::read::block_reader::BlockReader::read_column::{{closure}}::{{closure}}\n             at workspace/query/src/storages/fuse/io/read/block_reader.rs:200:25\n      \u003ccore::future::from_generator::GenFuture\u003cT\u003e as core::future::future::Future\u003e::poll\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/future/mod.rs:91:19\n   2: tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n   3: std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n   4: tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n   5: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::LocalNotified\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:448:21\n      tokio::coop::with_budget::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\n      std::thread::local::LocalKey\u003cT\u003e::try_with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:442:16\n      std::thread::local::LocalKey\u003cT\u003e::with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:418:9\n      tokio::coop::with_budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\n      tokio::coop::budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\n      tokio::runtime::thread_pool::worker::Context::run_task\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\n   6: tokio::runtime::thread_pool::worker::Context::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:398:24\n      tokio::runtime::thread_pool::worker::run::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\n      tokio::macros::scoped_tls::ScopedKey\u003cT\u003e::set\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\n      tokio::runtime::thread_pool::worker::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\n   7: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\n      \u003ctokio::runtime::blocking::task::BlockingTask\u003cT\u003e as core::future::future::Future\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n      tokio::runtime::task::raw::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\n   8: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::UnownedTask\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\n      tokio::runtime::blocking::pool::Task::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\n      tokio::runtime::blocking::pool::Inner::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\n      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys_common/backtrace.rs:122:18\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:498:17\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:497:30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/ops/function.rs:227:5\n  10: \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      std::sys::unix::thread::Thread::new::thread_start\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys/unix/thread.rs:108:17\n  11: start_thread\n  12: clone\n code:4000 message:other error (op: read, path: us-east-2/tnc6qwc1v/1/27/_b/f72991886947421298cc44ebd9b140b4.parquet, source: response part: Parts { status: 500, version: HTTP/1.1, headers: {\"x-amz-request-id\": \"K6KGAX7X603PXENY\", \"x-amz-id-2\": \"6gvVKB1tdEOjfahcgZRipiLauA+FKVqu+xyICV06zZKfmM8kcZuoSvnqOoS+o03gz7JUL0YgJek=\", \"content-type\": \"application/xml\", \"transfer-encoding\": \"chunked\", \"date\": \"Sat, 16 Apr 2022 09:11:09 GMT\", \"server\": \"AmazonS3\", \"connection\": \"close\"} }, body: \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003cError\u003e\u003cCode\u003eInternalError\u003c/Code\u003e\u003cMessage\u003eWe encountered an internal error. Please try again.\u003c/Message\u003e\u003cRequestId\u003eK6KGAX7X603PXENY\u003c/RequestId\u003e\u003cHostId\u003e6gvVKB1tdEOjfahcgZRipiLauA+FKVqu+xyICV06zZKfmM8kcZuoSvnqOoS+o03gz7JUL0YgJek=\u003c/HostId\u003e\u003c/Error\u003e\") (while in processor thread 13)]","query has error: map[backtrace:   0: common_exception::exception_code::\u003cimpl common_exception::exception::ErrorCode\u003e::StorageOther\n             at workspace/common/exception/src/exception_code.rs:36:66\n      common_exception::exception_into::\u003cimpl core::convert::From\u003cstd::io::error::Error\u003e for common_exception::exception::ErrorCode\u003e::from\n             at workspace/common/exception/src/exception_into.rs:114:18\n   1: \u003ccore::result::Result\u003cT,F\u003e as core::ops::try_trait::FromResidual\u003ccore::result::Result\u003ccore::convert::Infallible,E\u003e\u003e\u003e::from_residual\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/result.rs:2106:27\n      databend_query::storages::fuse::io::read::block_reader::BlockReader::read_column::{{closure}}::{{closure}}\n             at workspace/query/src/storages/fuse/io/read/block_reader.rs:200:25\n      \u003ccore::future::from_generator::GenFuture\u003cT\u003e as core::future::future::Future\u003e::poll\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/future/mod.rs:91:19\n   2: tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n   3: std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n   4: tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n   5: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::LocalNotified\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:448:21\n      tokio::coop::with_budget::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\n      std::thread::local::LocalKey\u003cT\u003e::try_with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:442:16\n      std::thread::local::LocalKey\u003cT\u003e::with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:418:9\n      tokio::coop::with_budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\n      tokio::coop::budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\n      tokio::runtime::thread_pool::worker::Context::run_task\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\n   6: tokio::runtime::thread_pool::worker::Context::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:398:24\n      tokio::runtime::thread_pool::worker::run::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\n      tokio::macros::scoped_tls::ScopedKey\u003cT\u003e::set\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\n      tokio::runtime::thread_pool::worker::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\n   7: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\n      \u003ctokio::runtime::blocking::task::BlockingTask\u003cT\u003e as core::future::future::Future\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n      tokio::runtime::task::raw::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\n   8: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::UnownedTask\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\n      tokio::runtime::blocking::pool::Task::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\n      tokio::runtime::blocking::pool::Inner::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\n      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys_common/backtrace.rs:122:18\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:498:17\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:497:30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/ops/function.rs:227:5\n  10: \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      std::sys::unix::thread::Thread::new::thread_start\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys/unix/thread.rs:108:17\n  11: start_thread\n  12: clone\n code:4000 message:other error (op: read, path: us-east-2/tnc6qwc1v/1/27/_b/12f03501e01b41cb9e94d6abdb140558.parquet, source: response part: Parts { status: 500, version: HTTP/1.1, headers: {\"x-amz-request-id\": \"AKF0C35E7WJVT0P2\", \"x-amz-id-2\": \"30Ep1+4AxJqnIeBJlN699tJUMqJQEaGeBSSyq/9pzlBnBu3p70VVcSbcXXJ68ikS/pmjtLpQWVU=\", \"content-type\": \"application/xml\", \"transfer-encoding\": \"chunked\", \"date\": \"Sat, 16 Apr 2022 09:11:15 GMT\", \"server\": \"AmazonS3\", \"connection\": \"close\"} }, body: \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003cError\u003e\u003cCode\u003eInternalError\u003c/Code\u003e\u003cMessage\u003eWe encountered an internal error. Please try again.\u003c/Message\u003e\u003cRequestId\u003eAKF0C35E7WJVT0P2\u003c/RequestId\u003e\u003cHostId\u003e30Ep1+4AxJqnIeBJlN699tJUMqJQEaGeBSSyq/9pzlBnBu3p70VVcSbcXXJ68ikS/pmjtLpQWVU=\u003c/HostId\u003e\u003c/Error\u003e\") (while in processor thread 33)]","query has error: map[backtrace:   0: common_exception::exception_code::\u003cimpl common_exception::exception::ErrorCode\u003e::StorageOther\n             at workspace/common/exception/src/exception_code.rs:36:66\n      common_exception::exception_into::\u003cimpl core::convert::From\u003cstd::io::error::Error\u003e for common_exception::exception::ErrorCode\u003e::from\n             at workspace/common/exception/src/exception_into.rs:114:18\n   1: \u003ccore::result::Result\u003cT,F\u003e as core::ops::try_trait::FromResidual\u003ccore::result::Result\u003ccore::convert::Infallible,E\u003e\u003e\u003e::from_residual\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/result.rs:2106:27\n      databend_query::storages::fuse::io::read::block_reader::BlockReader::read_column::{{closure}}::{{closure}}\n             at workspace/query/src/storages/fuse/io/read/block_reader.rs:200:25\n      \u003ccore::future::from_generator::GenFuture\u003cT\u003e as core::future::future::Future\u003e::poll\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/future/mod.rs:91:19\n   2: tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n   3: std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n   4: tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n   5: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::LocalNotified\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:448:21\n      tokio::coop::with_budget::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\n      std::thread::local::LocalKey\u003cT\u003e::try_with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:442:16\n      std::thread::local::LocalKey\u003cT\u003e::with\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/local.rs:418:9\n      tokio::coop::with_budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\n      tokio::coop::budget\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\n      tokio::runtime::thread_pool::worker::Context::run_task\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\n   6: tokio::runtime::thread_pool::worker::Context::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:398:24\n      tokio::runtime::thread_pool::worker::run::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\n      tokio::macros::scoped_tls::ScopedKey\u003cT\u003e::set\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\n      tokio::runtime::thread_pool::worker::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\n   7: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\n      \u003ctokio::runtime::blocking::task::BlockingTask\u003cT\u003e as core::future::future::Future\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\n      tokio::loom::std::unsafe_cell::UnsafeCell\u003cT\u003e::with_mut\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\n      tokio::runtime::task::core::CoreStage\u003cT\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\n      tokio::runtime::task::harness::poll_future::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      tokio::runtime::task::harness::poll_future\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll_inner\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\n      tokio::runtime::task::harness::Harness\u003cT,S\u003e::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\n      tokio::runtime::task::raw::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\n   8: tokio::runtime::task::raw::RawTask::poll\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\n      tokio::runtime::task::UnownedTask\u003cS\u003e::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\n      tokio::runtime::blocking::pool::Task::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\n      tokio::runtime::blocking::pool::Inner::run\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\n             at opt/rust/cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\n      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys_common/backtrace.rs:122:18\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:498:17\n      \u003ccore::panic::unwind_safe::AssertUnwindSafe\u003cF\u003e as core::ops::function::FnOnce\u003c()\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/panic/unwind_safe.rs:271:9\n      std::panicking::try::do_call\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:492:40\n      std::panicking::try\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panicking.rs:456:19\n      std::panic::catch_unwind\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/panic.rs:137:14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/thread/mod.rs:497:30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/core/src/ops/function.rs:227:5\n  10: \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      \u003calloc::boxed::Box\u003cF,A\u003e as core::ops::function::FnOnce\u003cArgs\u003e\u003e::call_once\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/alloc/src/boxed.rs:1861:9\n      std::sys::unix::thread::Thread::new::thread_start\n             at rustc/76d770ac21d9521db6a92a48c7b3d5b2cc535941/library/std/src/sys/unix/thread.rs:108:17\n  11: start_thread\n  12: clone\n code:4000 message:other error (op: read, path: us-east-2/tnc6qwc1v/1/27/_b/0f0eb95d7ce5429c8519f03a7fb4aeb1.parquet, source: response part: Parts { status: 500, version: HTTP/1.1, headers: {\"x-amz-request-id\": \"69YPGCJXVD9KNBSC\", \"x-amz-id-2\": \"3M+kaqjcuxu5+onPEmorEDM8kWGX6PLt7dXzxpqK+bl2SisXIE40qC/UDSi6txgiU9wCnYeQ47I=\", \"content-type\": \"application/xml\", \"transfer-encoding\": \"chunked\", \"date\": \"Sat, 16 Apr 2022 09:11:20 GMT\", \"server\": \"AmazonS3\", \"connection\": \"close\"} }, body: \"\u003c?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\u003e\\n\u003cError\u003e\u003cCode\u003eInternalError\u003c/Code\u003e\u003cMessage\u003eWe encountered an internal error. Please try again.\u003c/Message\u003e\u003cRequestId\u003e69YPGCJXVD9KNBSC\u003c/RequestId\u003e\u003cHostId\u003e3M+kaqjcuxu5+onPEmorEDM8kWGX6PLt7dXzxpqK+bl2SisXIE40qC/UDSi6txgiU9wCnYeQ47I=\u003c/HostId\u003e\u003c/Error\u003e\") (while in processor thread 31)]"],"mean":1.0578450919408016},{"name":"Q14","sql":"SELECT count(*) FROM default.ontime;","min":0.007,"max":0.012,"median":0.0095,"std_dev":0.001857417562100671,"read_row":1,"read_byte":1,"time":[0.011,0.012,0.009,0.007,0.011,0.008,0.01,0.008,0.012,0.007],"error":[],"mean":0.00931486666272612}]}